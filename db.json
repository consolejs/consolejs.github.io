{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"themes/hexo-theme-laughing/source/favicon.ico","path":"favicon.ico","modified":0,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/css/main_style.css","path":"css/main_style.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/css/main_style.css.map","path":"css/main_style.css.map","modified":0,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/css/main_style.min.css","path":"css/main_style.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/css/main_style.min.css.map","path":"css/main_style.min.css.map","modified":0,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/fonts/icon.eot","path":"fonts/icon.eot","modified":0,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/fonts/icon.svg","path":"fonts/icon.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/fonts/icon.ttf","path":"fonts/icon.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/fonts/icon.woff","path":"fonts/icon.woff","modified":0,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/sass/main_style.scss","path":"sass/main_style.scss","modified":0,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/LICENSE","path":"components/reset-css/LICENSE","modified":0,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/README.md","path":"components/reset-css/README.md","modified":0,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/gruntfile.js","path":"components/reset-css/gruntfile.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/package.json","path":"components/reset-css/package.json","modified":0,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/img/0.jpg","path":"img/0.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/img/1.jpg","path":"img/1.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/img/3.jpg","path":"img/3.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/img/2.jpg","path":"img/2.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/img/4.jpg","path":"img/4.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/img/5.jpg","path":"img/5.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/sass/main.scss","path":"components/reset-css/sass/main.scss","modified":0,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/sass/mobile-native.scss","path":"components/reset-css/sass/mobile-native.scss","modified":0,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/sass/mobile-single.scss","path":"components/reset-css/sass/mobile-single.scss","modified":0,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/dist/mobile/reset.css","path":"components/reset-css/dist/mobile/reset.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/dist/pc/reset.css","path":"components/reset-css/dist/pc/reset.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/dist/mobile/reset.min.css","path":"components/reset-css/dist/mobile/reset.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/dist/pc/reset.min.css","path":"components/reset-css/dist/pc/reset.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/sass/custom/imitation-native.scss","path":"components/reset-css/sass/custom/imitation-native.scss","modified":0,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/sass/reset/basic.scss","path":"components/reset-css/sass/reset/basic.scss","modified":0,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/sass/reset/ie.scss","path":"components/reset-css/sass/reset/ie.scss","modified":0,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/sass/reset/macos.scss","path":"components/reset-css/sass/reset/macos.scss","modified":0,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/sass/reset/mobile.scss","path":"components/reset-css/sass/reset/mobile.scss","modified":0,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"2fb58dcd7788b10e0298cb2fe3ea165803a89b00","modified":1661833507502},{"_id":"source/hello.html","hash":"3f720da45d5563cb1bd31929b9bbb3cc2c1717d0","modified":1661833507589},{"_id":"themes/hexo-theme-laughing/.bowerrc","hash":"cd6df79a8be68d066ccb35c5470fba3e6f12bb00","modified":1661833507592},{"_id":"themes/hexo-theme-laughing/.gitignore","hash":"cbdea42ead12e6fd5e03d489e0482bbb37cd582b","modified":1661833507592},{"_id":"themes/hexo-theme-laughing/LICENSE","hash":"b2d04276dc82c827b32e34c9d7b473ad5c0c0f4f","modified":1661833507592},{"_id":"themes/hexo-theme-laughing/README.md","hash":"b7826b23f0c526cf23a92d9a99b89f61d07bf544","modified":1661833507593},{"_id":"themes/hexo-theme-laughing/_config.yml","hash":"cef998d2755081a0ec1b6db3dc5c2e45169d7216","modified":1661833507593},{"_id":"themes/hexo-theme-laughing/gruntfile.js","hash":"dce145bcbf831af91d778a0f05adf8ab3f648262","modified":1661833507593},{"_id":"themes/hexo-theme-laughing/package.json","hash":"90437a166ff42fe162a7224078fdcd69de48b6cb","modified":1661833507595},{"_id":"source/_posts/css3-flex.md","hash":"86b090f14f03b30e032226ba1bc38cc634906897","modified":1661833507503},{"_id":"source/_posts/css3-grid.md","hash":"c3a9e9a9591faddcedbe4cb30ea33c56ed507518","modified":1661833507510},{"_id":"source/_posts/qianguize.md","hash":"3e95df6325ac3a1f6c02f24451752d10a9087a9b","modified":1661833507587},{"_id":"source/_posts/tem.md","hash":"0ab703c45211eeb858c4d5d7125686f079c15f75","modified":1661833507588},{"_id":"source/_posts/weicheng.md","hash":"a122e304083eba5ef7b370d1b83e99df11510a11","modified":1661833507588},{"_id":"themes/hexo-theme-laughing/layout/index.pug","hash":"b8ff3f0415ea5d6604a768cda9cdb2364bf501e8","modified":1661833507595},{"_id":"themes/hexo-theme-laughing/layout/post.pug","hash":"24b088846682f3c9c77e0ffd303ff69b0814bd5b","modified":1661833507595},{"_id":"themes/hexo-theme-laughing/source/favicon.ico","hash":"0d0103d0aad961a9f50344332d42b64f0fe6d2eb","modified":1661833507603},{"_id":"source/_posts/css3-flex/c01.png","hash":"c6ff7e3c038568f573ec46eb944afa5958601950","modified":1661833507503},{"_id":"source/_posts/css3-flex/c02.jpg","hash":"6d81d1af9de2f278a462703388b9bccf27a85914","modified":1661833507503},{"_id":"source/_posts/css3-flex/c03.png","hash":"25a26582ca9b2919b6fa4e10c918cf35c8263b82","modified":1661833507504},{"_id":"source/_posts/css3-flex/c04.png","hash":"0bb10fa9cec2884b908de97f00f681b62fe9efdf","modified":1661833507504},{"_id":"source/_posts/css3-flex/c07.png","hash":"13a9d155a9bb6bd19c4e1604c91591c9ff4cc60f","modified":1661833507506},{"_id":"source/_posts/css3-flex/c08.png","hash":"3b5e856bbfc820e7f093bd6bcd4b3d77ee91d95f","modified":1661833507506},{"_id":"source/_posts/css3-flex/c09.png","hash":"ac1efcc8095cf1a25d9d5056914add5e2a928a1e","modified":1661833507507},{"_id":"source/_posts/css3-flex/c101.jpg","hash":"6d81d1af9de2f278a462703388b9bccf27a85914","modified":1661833507507},{"_id":"source/_posts/css3-flex/css09.png","hash":"22256b518b8d3fca41f45adb4d352ccb16811c4a","modified":1661833507507},{"_id":"source/_posts/css3-flex/css10.png","hash":"69d7f62ddffea2eebf3fccfc6094d82c8d031d98","modified":1661833507508},{"_id":"source/_posts/css3-flex/css12.png","hash":"d03e565f65479ff103bd49df93ef0fffd08452c3","modified":1661833507508},{"_id":"source/_posts/css3-flex/css34.png","hash":"0f3cea8d583c2be772fad88f417eb4258dff6385","modified":1661833507508},{"_id":"source/_posts/css3-flex/css37.png","hash":"46168fdf238afd0a5ec3c8f9fe25e8a30ae560bb","modified":1661833507509},{"_id":"source/_posts/css3-flex/css46.png","hash":"40c689fb80d3f4afd1c6c950306137716ffb8afd","modified":1661833507509},{"_id":"source/_posts/css3-flex/jr.jpg","hash":"6d81d1af9de2f278a462703388b9bccf27a85914","modified":1661833507509},{"_id":"source/_posts/css3-grid/c01.jpg","hash":"2d8dcfaa83055ad82d7d0846b59c53df51b250c5","modified":1661833507511},{"_id":"source/_posts/css3-grid/c03.png","hash":"b2fa2f23fe10b5b8c12e74b675b63a0f6c809943","modified":1661833507513},{"_id":"source/_posts/css3-grid/c04.png","hash":"9033d4d87a3329cce8e02e90eca936634ba3ba58","modified":1661833507513},{"_id":"source/_posts/css3-grid/c05.png","hash":"1477be792b199a7a5d372238cf8994d5aaee3ce8","modified":1661833507514},{"_id":"source/_posts/css3-grid/c06.png","hash":"45b6e0da758140f8b665d66f816da476bc3f6aae","modified":1661833507514},{"_id":"source/_posts/css3-grid/c07.jpg","hash":"e6a9e74c2a445c6a8821b6c7820c6c28fc5c895b","modified":1661833507514},{"_id":"source/_posts/css3-grid/c08.png","hash":"e5a81de31020effe8c772dc241d75e7184394e26","modified":1661833507514},{"_id":"source/_posts/css3-grid/c10.jpg","hash":"e4461de9439100d5a9e01e41a40063ea6a742fa4","modified":1661833507515},{"_id":"source/_posts/css3-grid/c11.jpg","hash":"14a42d1f7ec3a922ff686249cc65fe320a654658","modified":1661833507515},{"_id":"source/_posts/css3-grid/c12.jpg","hash":"a79133de60d8322b50d5f70fd81b7d49bff8ecb0","modified":1661833507515},{"_id":"source/_posts/css3-grid/c13.png","hash":"04d9063f2c1f6e5b67ff9d77683c7bb36f28c704","modified":1661833507516},{"_id":"source/_posts/css3-grid/c14.png","hash":"39037e8bb6fc44664fc4e621425eab1741664087","modified":1661833507516},{"_id":"source/_posts/css3-grid/c09.jpg","hash":"1054c5a4ad08ded9868911f58fe9d1d120df7473","modified":1661833507515},{"_id":"source/_posts/css3-grid/c15.png","hash":"41d75df58465739da66205e83c9cc7ea31ccb377","modified":1661833507516},{"_id":"source/_posts/css3-grid/c16.png","hash":"13c1dc34b6cb6c7459a80bb4c10fe513eff7f19f","modified":1661833507516},{"_id":"source/_posts/css3-grid/c18.png","hash":"9793c9ba500f5b059c544fd67efb6337f2a57319","modified":1661833507517},{"_id":"source/_posts/css3-grid/c19.png","hash":"8c5cbb555771ee8a3a3f0192198f6c2408ef18e4","modified":1661833507517},{"_id":"source/_posts/css3-grid/c17.png","hash":"5fda4b6ae8c76498839603932879a6955b46eecc","modified":1661833507517},{"_id":"source/_posts/css3-grid/c20.png","hash":"8975d3b27c60665dce6d5f766640e9dbe3a0652b","modified":1661833507517},{"_id":"source/_posts/css3-grid/c21.png","hash":"44c407f0893558f6277731448e77c5b0b10ca78f","modified":1661833507518},{"_id":"source/_posts/css3-grid/c22.png","hash":"6382397b523f59046cbefa27e6b13351317980ac","modified":1661833507518},{"_id":"source/_posts/css3-grid/c23.jpg","hash":"dd45491c381eecdb8e07ac122a8ae6e99f4ed1f6","modified":1661833507518},{"_id":"source/_posts/css3-grid/c24.jpg","hash":"212d97e325a8137eb1c367233abe6f24a01ee252","modified":1661833507518},{"_id":"source/_posts/css3-grid/c25.jpg","hash":"bc546514583a191d9373d172b05a8b40c271cdea","modified":1661833507518},{"_id":"source/_posts/css3-grid/c26.jpg","hash":"ff9a2eb8fbc574d502a9a3e0d994a4f8498b8931","modified":1661833507519},{"_id":"source/_posts/css3-grid/c27.png","hash":"3bbd3b49aaec71f9e80dfff12af06b1195357aa0","modified":1661833507519},{"_id":"source/_posts/css3-grid/c28.png","hash":"a306443c1f1f36eb6347ac83959ced2bfc391efc","modified":1661833507519},{"_id":"source/_posts/css3-grid/c29.png","hash":"35e0e171c69bb83cfb728edd2a21321199416e2f","modified":1661833507519},{"_id":"source/_posts/css3-grid/c30.jpg","hash":"bfd55e9f962a76618a30fa2ed1621bb8a69da9b7","modified":1661833507520},{"_id":"source/_posts/css3-grid/c31.jpg","hash":"d9ec48cf5d2aee18c009bcaea7862bda96b42a20","modified":1661833507520},{"_id":"source/_posts/css3-grid/c32.jpg","hash":"7b1a3478fbc235b25bd8fc674c07844303aee572","modified":1661833507520},{"_id":"source/_posts/css3-grid/c33.jpg","hash":"eabfa55bfe616a13a1c970ee3794057b6dbc2106","modified":1661833507520},{"_id":"source/_posts/css3-grid/c34.png","hash":"887313118b6d8781b58e77161d4a483ecbdbd012","modified":1661833507521},{"_id":"source/_posts/qianguize/q1.jpg","hash":"af9694792e5694181cfee70c30bb07bcc24c468c","modified":1661833507588},{"_id":"source/_posts/weicheng/w1.jpg","hash":"d8fe13a8bad4fc7fd4b273ee929a816d99b143cb","modified":1661833507589},{"_id":"themes/hexo-theme-laughing/layout/_partial/footer.pug","hash":"505c3eac30601e5781206d111d4af265bd7e55c1","modified":1661833507594},{"_id":"themes/hexo-theme-laughing/layout/_partial/layout.pug","hash":"96f07d54e5712092ca41604abe0c0d3133837ad0","modified":1661833507594},{"_id":"themes/hexo-theme-laughing/layout/_partial/page_header.pug","hash":"e3888ebf41ca34be6c7fcf8af9b2524b91e0e629","modified":1661833507594},{"_id":"themes/hexo-theme-laughing/layout/_partial/pagination.pug","hash":"0622c7633acdeb16d51979e05e360a2b69b13495","modified":1661833507594},{"_id":"themes/hexo-theme-laughing/layout/_partial/post_header.pug","hash":"82e6ca2ae3c693ad62a870956810dba90b6a8021","modified":1661833507594},{"_id":"themes/hexo-theme-laughing/source/css/main_style.css","hash":"cbd0541a11ebd938d798e3cee397a5a4d26d84ec","modified":1661833507601},{"_id":"themes/hexo-theme-laughing/source/css/main_style.css.map","hash":"c3e624de8678bffa3d0859362382c86245015d1b","modified":1661833507602},{"_id":"themes/hexo-theme-laughing/source/css/main_style.min.css","hash":"7224d03577ecfa3cb51688ce5f0ef68d73166156","modified":1661833507602},{"_id":"themes/hexo-theme-laughing/source/css/main_style.min.css.map","hash":"b714707c0c6893720548709c52dc35e0e4ac5387","modified":1661833507602},{"_id":"themes/hexo-theme-laughing/source/fonts/icon.eot","hash":"845e74fd0134d11cb064e5440ae490c846670f2e","modified":1661833507603},{"_id":"themes/hexo-theme-laughing/source/fonts/icon.svg","hash":"b812a585d7dbb508874605a48436c77c8271e28b","modified":1661833507603},{"_id":"themes/hexo-theme-laughing/source/fonts/icon.ttf","hash":"c403df27000403dd4de7ffe2b4e80d04c4475a07","modified":1661833507604},{"_id":"themes/hexo-theme-laughing/source/fonts/icon.woff","hash":"7d828283afa799b70a8531b9a2662c559b346439","modified":1661833507604},{"_id":"themes/hexo-theme-laughing/source/sass/main_style.scss","hash":"898aefb75f72fed686ac9a60eff1ceb44a2f3ea3","modified":1661833507617},{"_id":"source/_posts/css3-flex/c05.jpg","hash":"5096da3931d0011d81d791ef0e13effce5319379","modified":1661833507505},{"_id":"source/_posts/css3-flex/c06.jpg","hash":"a90ef8c3b5a1e05cc6c8a27b5ac04d8ad0530add","modified":1661833507506},{"_id":"source/_posts/css3-grid/c02.jpg","hash":"dc8d0ce71451f4ccd4b5a7a62c80cdd0daf40a21","modified":1661833507513},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/.bower.json","hash":"870be6ad54cc1c5284d38b1cd104ac8412054498","modified":1661833507596},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/.gitignore","hash":"dc763f22f9c31a8daefbf47989e76da901ffd47c","modified":1661833507596},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/LICENSE","hash":"b2d04276dc82c827b32e34c9d7b473ad5c0c0f4f","modified":1661833507596},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/README.md","hash":"42ba92ca71daff15d0e27ae9e1624e86298f88b8","modified":1661833507596},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/gruntfile.js","hash":"eda72e7747c8952dcc98d9249a5d8ca2279a89d6","modified":1661833507598},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/package.json","hash":"c859e74c55d08e683d72ada52ad786f49eb19be2","modified":1661833507598},{"_id":"themes/hexo-theme-laughing/source/img/0.jpg","hash":"3d0407ffc1c171c32fcf20b2111933f0df194ea3","modified":1661833507606},{"_id":"themes/hexo-theme-laughing/source/img/1.jpg","hash":"ca714e32c50f324eaba7d7551b5be9f5a7072e0a","modified":1661833507607},{"_id":"themes/hexo-theme-laughing/source/img/3.jpg","hash":"2e30434b2f1dda853a97943978384db8b9005ba6","modified":1661833507610},{"_id":"themes/hexo-theme-laughing/source/img/2.jpg","hash":"da102fa2cf51a76e3cf0c865acb1592e41b54050","modified":1661833507608},{"_id":"themes/hexo-theme-laughing/source/sass/_partial/duoshuo.scss","hash":"033b88d981fea35adad1b2ad96fbf5a497598cc3","modified":1661833507614},{"_id":"themes/hexo-theme-laughing/source/sass/_partial/footer.scss","hash":"353e3e086aa70849c924fb8789b30b5a996d8676","modified":1661833507614},{"_id":"themes/hexo-theme-laughing/source/sass/_partial/layout.scss","hash":"32c191b0a510c387baa4ef85426eb13607e3c451","modified":1661833507614},{"_id":"themes/hexo-theme-laughing/source/sass/_partial/list.scss","hash":"ea845f4182a2979a3039a587cacff7fb170f5184","modified":1661833507614},{"_id":"themes/hexo-theme-laughing/source/sass/_partial/main_navi.scss","hash":"068d1c8cf9af65c0258cf06e01305574629145ae","modified":1661833507615},{"_id":"themes/hexo-theme-laughing/source/sass/_partial/navication.scss","hash":"08a01a3b4d627cff6b2521114378578625f779da","modified":1661833507615},{"_id":"themes/hexo-theme-laughing/source/sass/_partial/page_header.scss","hash":"628a2cdcf1093cfdf05b2c7e67f270d3bbea4fb4","modified":1661833507615},{"_id":"themes/hexo-theme-laughing/source/sass/_partial/pagination.scss","hash":"6d26b9990bf957e06af87f36aafee1e3bdb505ef","modified":1661833507615},{"_id":"themes/hexo-theme-laughing/source/sass/_partial/post.scss","hash":"4f2a71a3a11896bb364fe3d51d32aa96e37b80d5","modified":1661833507615},{"_id":"themes/hexo-theme-laughing/source/sass/_partial/post_header.scss","hash":"dd790985f86f7a6af1a26baca50d8ec8fab14add","modified":1661833507616},{"_id":"themes/hexo-theme-laughing/source/sass/_util/color.scss","hash":"2dfaa41b7f960473b9c2a154989791f643737211","modified":1661833507616},{"_id":"themes/hexo-theme-laughing/source/sass/_util/hightlight.scss","hash":"2be013af766705fcac2cbcb8058b5eed2a314550","modified":1661833507616},{"_id":"themes/hexo-theme-laughing/source/sass/_util/icon.scss","hash":"f7a2f1adb843c211a4b526ba56565ad683902df1","modified":1661833507616},{"_id":"themes/hexo-theme-laughing/source/sass/_util/media.scss","hash":"7eb47453422b703af4a272f64b44a5e062f133ee","modified":1661833507616},{"_id":"themes/hexo-theme-laughing/source/sass/_util/mixin.scss","hash":"37309124d68d74e1d920dae40546c6dfa53c4d86","modified":1661833507617},{"_id":"themes/hexo-theme-laughing/source/img/4.jpg","hash":"4dbc8c401162cc9b1184a41b9be091aced32b8bf","modified":1661833507611},{"_id":"themes/hexo-theme-laughing/source/img/5.jpg","hash":"6dd906c9f79fa859fd4ac4a61b6d53f796ba6f39","modified":1661833507613},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/sass/_common.scss","hash":"e43ee0cc485b6e8ee11e33434dd8472e449f8804","modified":1661833507598},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/sass/main.scss","hash":"b34aeac5d981e3ac4c46a292e6197f2f7f860b32","modified":1661833507599},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/sass/mobile-native.scss","hash":"ce2116425e00aa7a450cfcd93c86f95213b7deed","modified":1661833507599},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/sass/mobile-single.scss","hash":"80c5c752656b61690e8df463e5b45b787621c249","modified":1661833507600},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/dist/mobile/reset.css","hash":"c157f0c30827d47590cb99a25a34eb712ca1890a","modified":1661833507597},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/dist/pc/reset.css","hash":"9ed2cbf6f1dd7df99849ad22700e9339914a358a","modified":1661833507597},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/dist/mobile/reset.min.css","hash":"752bcb20555fb6152867a7437aacf079f3c93c36","modified":1661833507597},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/dist/pc/reset.min.css","hash":"d0e76dd5d95e95deee9c745438d8bf36b342081c","modified":1661833507598},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/sass/custom/_microsoft-yahei.scss","hash":"4c29be667ae1decd0cc2da424e89c792b901eefe","modified":1661833507599},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/sass/custom/imitation-native.scss","hash":"db910f6a7a008bc3c47a4ccebb0f9301b1dd6f58","modified":1661833507599},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/sass/reset/basic.scss","hash":"523a6deffbd0699f3225adbdeda5d0fc5c6e1e4d","modified":1661833507600},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/sass/reset/ie.scss","hash":"032d5f6831a43ffe278b711331308a17b0fa0848","modified":1661833507600},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/sass/reset/macos.scss","hash":"c4863f82e33f87dd4c724d68906a4cbe2b935e6c","modified":1661833507601},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/sass/reset/mobile.scss","hash":"391a7886de3256582d37a252f743a2cd08ae0964","modified":1661833507601},{"_id":"source/_posts/css3-grid/x01.gif","hash":"a31fd7431229c2e445640c4ee4e6e5aca6738f5f","modified":1661833507579},{"_id":"public/hello.html","hash":"4b6fe3ecfc5ebd0a12d5efbeadf4d6f63f7fa150","modified":1661833811588},{"_id":"public/2018/06/01/tem/index.html","hash":"23bd55a3697bf93d7edd6315b8af740a4b3b9e79","modified":1661833811589},{"_id":"public/2018/02/21/qianguize/index.html","hash":"bf92a002cb4e6b15b7a95803adbeb8d1eab4f5c5","modified":1661833811589},{"_id":"public/archives/index.html","hash":"a89a1298bb7f3e5d7b05eba9a104ccd861addcaf","modified":1661833697364},{"_id":"public/archives/2017/index.html","hash":"76f0cc5e2a0f1381ebbe6abead352ff16caec777","modified":1661833697364},{"_id":"public/archives/2017/08/index.html","hash":"76f0cc5e2a0f1381ebbe6abead352ff16caec777","modified":1661833697364},{"_id":"public/archives/2018/index.html","hash":"105213f8308f34d24a1becbed6e17838d4e178e4","modified":1661833697364},{"_id":"public/archives/2018/02/index.html","hash":"9423e33785378e8f6c9d8f9b83ddeb4558141842","modified":1661833697364},{"_id":"public/archives/2018/05/index.html","hash":"f1b0fb40b9be590a0e8aad7e2e2216221ac56419","modified":1661833697364},{"_id":"public/archives/2018/06/index.html","hash":"63f3d6304ef119f88dc0368a45d6e0b499acf711","modified":1661833697364},{"_id":"public/categories/前端/index.html","hash":"f432911966836740e5a212f2be9da82de9d52b2f","modified":1661833697364},{"_id":"public/categories/札记/index.html","hash":"6537881987ca48a261a61ede8c1912383a552e71","modified":1661833697364},{"_id":"public/index.html","hash":"a89a1298bb7f3e5d7b05eba9a104ccd861addcaf","modified":1661833697364},{"_id":"public/tags/css/index.html","hash":"f432911966836740e5a212f2be9da82de9d52b2f","modified":1661833697364},{"_id":"public/tags/flex/index.html","hash":"76f0cc5e2a0f1381ebbe6abead352ff16caec777","modified":1661833697364},{"_id":"public/tags/grid/index.html","hash":"473637d2a7b4790573058b866d1b66737903accd","modified":1661833697364},{"_id":"public/tags/v2018/index.html","hash":"6537881987ca48a261a61ede8c1912383a552e71","modified":1661833697365},{"_id":"public/tags/社会/index.html","hash":"9423e33785378e8f6c9d8f9b83ddeb4558141842","modified":1661833697365},{"_id":"public/tags/历史/index.html","hash":"9423e33785378e8f6c9d8f9b83ddeb4558141842","modified":1661833697365},{"_id":"public/tags/小说/index.html","hash":"aa8e8de7220abf6b3bd27a6b218f3794f5431017","modified":1661833697365},{"_id":"public/tags/文学/index.html","hash":"aa8e8de7220abf6b3bd27a6b218f3794f5431017","modified":1661833697365},{"_id":"public/2018/05/27/weicheng/index.html","hash":"438f54e840b0a6e4144de83167c0cd59ebc9f9fd","modified":1661833806610},{"_id":"public/2018/05/18/css3-grid/index.html","hash":"34c97b05c82fe2b2a26695157727a523c6d52bcc","modified":1661833806611},{"_id":"public/2017/08/28/css3-flex/index.html","hash":"f672760d742f23c7f7b6ff0787532912c2f78292","modified":1661833811589},{"_id":"public/CNAME","hash":"2fb58dcd7788b10e0298cb2fe3ea165803a89b00","modified":1661833697379},{"_id":"public/favicon.ico","hash":"0d0103d0aad961a9f50344332d42b64f0fe6d2eb","modified":1661833697379},{"_id":"public/css/main_style.css.map","hash":"c3e624de8678bffa3d0859362382c86245015d1b","modified":1661833697379},{"_id":"public/css/main_style.min.css.map","hash":"b714707c0c6893720548709c52dc35e0e4ac5387","modified":1661833697379},{"_id":"public/fonts/icon.eot","hash":"845e74fd0134d11cb064e5440ae490c846670f2e","modified":1661833697379},{"_id":"public/fonts/icon.svg","hash":"b812a585d7dbb508874605a48436c77c8271e28b","modified":1661833697379},{"_id":"public/fonts/icon.ttf","hash":"c403df27000403dd4de7ffe2b4e80d04c4475a07","modified":1661833697379},{"_id":"public/fonts/icon.woff","hash":"7d828283afa799b70a8531b9a2662c559b346439","modified":1661833697379},{"_id":"public/sass/main_style.scss","hash":"898aefb75f72fed686ac9a60eff1ceb44a2f3ea3","modified":1661833697379},{"_id":"public/components/reset-css/LICENSE","hash":"b2d04276dc82c827b32e34c9d7b473ad5c0c0f4f","modified":1661833697379},{"_id":"public/components/reset-css/sass/main.scss","hash":"b34aeac5d981e3ac4c46a292e6197f2f7f860b32","modified":1661833697379},{"_id":"public/components/reset-css/sass/mobile-native.scss","hash":"ce2116425e00aa7a450cfcd93c86f95213b7deed","modified":1661833697379},{"_id":"public/components/reset-css/sass/mobile-single.scss","hash":"80c5c752656b61690e8df463e5b45b787621c249","modified":1661833697379},{"_id":"public/components/reset-css/sass/custom/imitation-native.scss","hash":"db910f6a7a008bc3c47a4ccebb0f9301b1dd6f58","modified":1661833697380},{"_id":"public/components/reset-css/sass/reset/basic.scss","hash":"523a6deffbd0699f3225adbdeda5d0fc5c6e1e4d","modified":1661833697380},{"_id":"public/components/reset-css/sass/reset/ie.scss","hash":"032d5f6831a43ffe278b711331308a17b0fa0848","modified":1661833697380},{"_id":"public/components/reset-css/sass/reset/macos.scss","hash":"c4863f82e33f87dd4c724d68906a4cbe2b935e6c","modified":1661833697380},{"_id":"public/components/reset-css/sass/reset/mobile.scss","hash":"391a7886de3256582d37a252f743a2cd08ae0964","modified":1661833697380},{"_id":"public/2018/02/21/qianguize/q1.jpg","hash":"af9694792e5694181cfee70c30bb07bcc24c468c","modified":1661833697380},{"_id":"public/2018/05/27/weicheng/w1.jpg","hash":"d8fe13a8bad4fc7fd4b273ee929a816d99b143cb","modified":1661833697380},{"_id":"public/2017/08/28/css3-flex/c01.png","hash":"c6ff7e3c038568f573ec46eb944afa5958601950","modified":1661833697380},{"_id":"public/2017/08/28/css3-flex/c02.jpg","hash":"6d81d1af9de2f278a462703388b9bccf27a85914","modified":1661833697381},{"_id":"public/2017/08/28/css3-flex/c03.png","hash":"25a26582ca9b2919b6fa4e10c918cf35c8263b82","modified":1661833697381},{"_id":"public/2017/08/28/css3-flex/c04.png","hash":"0bb10fa9cec2884b908de97f00f681b62fe9efdf","modified":1661833697381},{"_id":"public/2017/08/28/css3-flex/c07.png","hash":"13a9d155a9bb6bd19c4e1604c91591c9ff4cc60f","modified":1661833697381},{"_id":"public/2017/08/28/css3-flex/c08.png","hash":"3b5e856bbfc820e7f093bd6bcd4b3d77ee91d95f","modified":1661833697381},{"_id":"public/2017/08/28/css3-flex/c09.png","hash":"ac1efcc8095cf1a25d9d5056914add5e2a928a1e","modified":1661833697381},{"_id":"public/2017/08/28/css3-flex/css09.png","hash":"22256b518b8d3fca41f45adb4d352ccb16811c4a","modified":1661833697381},{"_id":"public/2017/08/28/css3-flex/c101.jpg","hash":"6d81d1af9de2f278a462703388b9bccf27a85914","modified":1661833697381},{"_id":"public/2017/08/28/css3-flex/css10.png","hash":"69d7f62ddffea2eebf3fccfc6094d82c8d031d98","modified":1661833697381},{"_id":"public/2017/08/28/css3-flex/css12.png","hash":"d03e565f65479ff103bd49df93ef0fffd08452c3","modified":1661833697381},{"_id":"public/2017/08/28/css3-flex/css34.png","hash":"0f3cea8d583c2be772fad88f417eb4258dff6385","modified":1661833697381},{"_id":"public/2017/08/28/css3-flex/css37.png","hash":"46168fdf238afd0a5ec3c8f9fe25e8a30ae560bb","modified":1661833697381},{"_id":"public/2017/08/28/css3-flex/css46.png","hash":"40c689fb80d3f4afd1c6c950306137716ffb8afd","modified":1661833697381},{"_id":"public/2017/08/28/css3-flex/jr.jpg","hash":"6d81d1af9de2f278a462703388b9bccf27a85914","modified":1661833697381},{"_id":"public/2018/05/18/css3-grid/c01.jpg","hash":"2d8dcfaa83055ad82d7d0846b59c53df51b250c5","modified":1661833697382},{"_id":"public/2018/05/18/css3-grid/c03.png","hash":"b2fa2f23fe10b5b8c12e74b675b63a0f6c809943","modified":1661833697382},{"_id":"public/2018/05/18/css3-grid/c04.png","hash":"9033d4d87a3329cce8e02e90eca936634ba3ba58","modified":1661833697382},{"_id":"public/2018/05/18/css3-grid/c05.png","hash":"1477be792b199a7a5d372238cf8994d5aaee3ce8","modified":1661833697382},{"_id":"public/2018/05/18/css3-grid/c06.png","hash":"45b6e0da758140f8b665d66f816da476bc3f6aae","modified":1661833697382},{"_id":"public/2018/05/18/css3-grid/c07.jpg","hash":"e6a9e74c2a445c6a8821b6c7820c6c28fc5c895b","modified":1661833697382},{"_id":"public/2018/05/18/css3-grid/c08.png","hash":"e5a81de31020effe8c772dc241d75e7184394e26","modified":1661833697382},{"_id":"public/2018/05/18/css3-grid/c10.jpg","hash":"e4461de9439100d5a9e01e41a40063ea6a742fa4","modified":1661833697382},{"_id":"public/2018/05/18/css3-grid/c11.jpg","hash":"14a42d1f7ec3a922ff686249cc65fe320a654658","modified":1661833697382},{"_id":"public/2018/05/18/css3-grid/c09.jpg","hash":"1054c5a4ad08ded9868911f58fe9d1d120df7473","modified":1661833697382},{"_id":"public/2018/05/18/css3-grid/c12.jpg","hash":"a79133de60d8322b50d5f70fd81b7d49bff8ecb0","modified":1661833697382},{"_id":"public/2018/05/18/css3-grid/c13.png","hash":"04d9063f2c1f6e5b67ff9d77683c7bb36f28c704","modified":1661833697382},{"_id":"public/2018/05/18/css3-grid/c14.png","hash":"39037e8bb6fc44664fc4e621425eab1741664087","modified":1661833697382},{"_id":"public/2018/05/18/css3-grid/c15.png","hash":"41d75df58465739da66205e83c9cc7ea31ccb377","modified":1661833697382},{"_id":"public/2018/05/18/css3-grid/c16.png","hash":"13c1dc34b6cb6c7459a80bb4c10fe513eff7f19f","modified":1661833697382},{"_id":"public/2018/05/18/css3-grid/c17.png","hash":"5fda4b6ae8c76498839603932879a6955b46eecc","modified":1661833697382},{"_id":"public/2018/05/18/css3-grid/c18.png","hash":"9793c9ba500f5b059c544fd67efb6337f2a57319","modified":1661833697382},{"_id":"public/2018/05/18/css3-grid/c19.png","hash":"8c5cbb555771ee8a3a3f0192198f6c2408ef18e4","modified":1661833697382},{"_id":"public/2018/05/18/css3-grid/c20.png","hash":"8975d3b27c60665dce6d5f766640e9dbe3a0652b","modified":1661833697382},{"_id":"public/2018/05/18/css3-grid/c21.png","hash":"44c407f0893558f6277731448e77c5b0b10ca78f","modified":1661833697382},{"_id":"public/2018/05/18/css3-grid/c22.png","hash":"6382397b523f59046cbefa27e6b13351317980ac","modified":1661833697382},{"_id":"public/2018/05/18/css3-grid/c23.jpg","hash":"dd45491c381eecdb8e07ac122a8ae6e99f4ed1f6","modified":1661833697382},{"_id":"public/2018/05/18/css3-grid/c24.jpg","hash":"212d97e325a8137eb1c367233abe6f24a01ee252","modified":1661833697382},{"_id":"public/2018/05/18/css3-grid/c25.jpg","hash":"bc546514583a191d9373d172b05a8b40c271cdea","modified":1661833697382},{"_id":"public/2018/05/18/css3-grid/c26.jpg","hash":"ff9a2eb8fbc574d502a9a3e0d994a4f8498b8931","modified":1661833697382},{"_id":"public/2018/05/18/css3-grid/c27.png","hash":"3bbd3b49aaec71f9e80dfff12af06b1195357aa0","modified":1661833697383},{"_id":"public/2018/05/18/css3-grid/c29.png","hash":"35e0e171c69bb83cfb728edd2a21321199416e2f","modified":1661833697383},{"_id":"public/2018/05/18/css3-grid/c28.png","hash":"a306443c1f1f36eb6347ac83959ced2bfc391efc","modified":1661833697383},{"_id":"public/2018/05/18/css3-grid/c30.jpg","hash":"bfd55e9f962a76618a30fa2ed1621bb8a69da9b7","modified":1661833697383},{"_id":"public/2018/05/18/css3-grid/c31.jpg","hash":"d9ec48cf5d2aee18c009bcaea7862bda96b42a20","modified":1661833697383},{"_id":"public/2018/05/18/css3-grid/c32.jpg","hash":"7b1a3478fbc235b25bd8fc674c07844303aee572","modified":1661833697383},{"_id":"public/2018/05/18/css3-grid/c33.jpg","hash":"eabfa55bfe616a13a1c970ee3794057b6dbc2106","modified":1661833697383},{"_id":"public/2018/05/18/css3-grid/c34.png","hash":"887313118b6d8781b58e77161d4a483ecbdbd012","modified":1661833697383},{"_id":"public/2017/08/28/css3-flex/c05.jpg","hash":"5096da3931d0011d81d791ef0e13effce5319379","modified":1661833697389},{"_id":"public/2017/08/28/css3-flex/c06.jpg","hash":"a90ef8c3b5a1e05cc6c8a27b5ac04d8ad0530add","modified":1661833697389},{"_id":"public/components/reset-css/README.html","hash":"8e6de58e63d6a04c3c1160409e17e7b255202704","modified":1661833697393},{"_id":"public/components/reset-css/gruntfile.js","hash":"eda72e7747c8952dcc98d9249a5d8ca2279a89d6","modified":1661833697393},{"_id":"public/components/reset-css/package.json","hash":"cafa376792f3516b399c2dff52f6de75fe5456e7","modified":1661833697394},{"_id":"public/components/reset-css/dist/mobile/reset.css","hash":"c157f0c30827d47590cb99a25a34eb712ca1890a","modified":1661833697394},{"_id":"public/components/reset-css/dist/pc/reset.css","hash":"9ed2cbf6f1dd7df99849ad22700e9339914a358a","modified":1661833697394},{"_id":"public/components/reset-css/dist/mobile/reset.min.css","hash":"752bcb20555fb6152867a7437aacf079f3c93c36","modified":1661833697394},{"_id":"public/components/reset-css/dist/pc/reset.min.css","hash":"d0e76dd5d95e95deee9c745438d8bf36b342081c","modified":1661833697394},{"_id":"public/css/main_style.css","hash":"cbd0541a11ebd938d798e3cee397a5a4d26d84ec","modified":1661833697394},{"_id":"public/css/main_style.min.css","hash":"7224d03577ecfa3cb51688ce5f0ef68d73166156","modified":1661833697394},{"_id":"public/img/0.jpg","hash":"3d0407ffc1c171c32fcf20b2111933f0df194ea3","modified":1661833697394},{"_id":"public/img/1.jpg","hash":"ca714e32c50f324eaba7d7551b5be9f5a7072e0a","modified":1661833697394},{"_id":"public/img/3.jpg","hash":"2e30434b2f1dda853a97943978384db8b9005ba6","modified":1661833697394},{"_id":"public/img/2.jpg","hash":"da102fa2cf51a76e3cf0c865acb1592e41b54050","modified":1661833697394},{"_id":"public/2018/05/18/css3-grid/c02.jpg","hash":"dc8d0ce71451f4ccd4b5a7a62c80cdd0daf40a21","modified":1661833697394},{"_id":"public/img/4.jpg","hash":"4dbc8c401162cc9b1184a41b9be091aced32b8bf","modified":1661833697395},{"_id":"public/img/5.jpg","hash":"6dd906c9f79fa859fd4ac4a61b6d53f796ba6f39","modified":1661833697395},{"_id":"public/2018/05/18/css3-grid/x01.gif","hash":"a31fd7431229c2e445640c4ee4e6e5aca6738f5f","modified":1661833697455}],"Category":[{"name":"前端","_id":"cl7fovitt00030do74rdchl4g"},{"name":"札记","_id":"cl7foviu8000c0do7d6cqhor1"}],"Data":[],"Page":[{"title":"有所得","_content":"\n<style type=\"text/css\">\n  .base {\n    margin: 0;\n    padding: 0;\n    -webkit-box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    box-sizing: border-box;\n    font-weight: 700;\n  }\n\n  .skills {\n    width: 320px;\n    overflow: hidden;\n    border-right: .15em solid orange;\n    white-space: nowrap;\n    margin: 40px auto 0;\n    letter-spacing: .1em;\n    font-weight: 300;\n    color: #2C3E50;\n    font-size: 1.45rem;\n  }\n\n  .typewriter {\n    animation: typing 5s steps(40, end), blink-caret .75s step-end infinite;\n  }\n  /* The typing effect */\n\n  @keyframes typing {\n    from {\n      width: 0;\n    }\n    to {\n      width: 320px;\n    }\n  }\n  /* The typewriter cursor effect */\n\n  @keyframes blink-caret {\n    from,\n    to {\n      border-color: transparent;\n    }\n    50% {\n      border-color: orange;\n    }\n  }\n\n  @media screen and (min-width: 320px) and (max-width: 480px) {\n    .article-content {\n      padding: 0;\n    }\n    .skills {\n      font-size: 1.08rem;\n      max-width: 248px;\n    }\n  }\n</style>\n\n<div class=\"base skills typewriter\">✨ Hi, <b>welcome ! 有得札记.</b></div>","source":"hello.html","raw":"---\ntitle: 有所得\n---\n\n<style type=\"text/css\">\n  .base {\n    margin: 0;\n    padding: 0;\n    -webkit-box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    box-sizing: border-box;\n    font-weight: 700;\n  }\n\n  .skills {\n    width: 320px;\n    overflow: hidden;\n    border-right: .15em solid orange;\n    white-space: nowrap;\n    margin: 40px auto 0;\n    letter-spacing: .1em;\n    font-weight: 300;\n    color: #2C3E50;\n    font-size: 1.45rem;\n  }\n\n  .typewriter {\n    animation: typing 5s steps(40, end), blink-caret .75s step-end infinite;\n  }\n  /* The typing effect */\n\n  @keyframes typing {\n    from {\n      width: 0;\n    }\n    to {\n      width: 320px;\n    }\n  }\n  /* The typewriter cursor effect */\n\n  @keyframes blink-caret {\n    from,\n    to {\n      border-color: transparent;\n    }\n    50% {\n      border-color: orange;\n    }\n  }\n\n  @media screen and (min-width: 320px) and (max-width: 480px) {\n    .article-content {\n      padding: 0;\n    }\n    .skills {\n      font-size: 1.08rem;\n      max-width: 248px;\n    }\n  }\n</style>\n\n<div class=\"base skills typewriter\">✨ Hi, <b>welcome ! 有得札记.</b></div>","date":"2022-08-30T04:25:07.589Z","updated":"2022-08-30T04:25:07.589Z","path":"hello.html","comments":1,"layout":"page","_id":"cl7fovitc00000do70byt1qop","content":"\n<style type=\"text/css\">\n  .base {\n    margin: 0;\n    padding: 0;\n    -webkit-box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    box-sizing: border-box;\n    font-weight: 700;\n  }\n\n  .skills {\n    width: 320px;\n    overflow: hidden;\n    border-right: .15em solid orange;\n    white-space: nowrap;\n    margin: 40px auto 0;\n    letter-spacing: .1em;\n    font-weight: 300;\n    color: #2C3E50;\n    font-size: 1.45rem;\n  }\n\n  .typewriter {\n    animation: typing 5s steps(40, end), blink-caret .75s step-end infinite;\n  }\n  /* The typing effect */\n\n  @keyframes typing {\n    from {\n      width: 0;\n    }\n    to {\n      width: 320px;\n    }\n  }\n  /* The typewriter cursor effect */\n\n  @keyframes blink-caret {\n    from,\n    to {\n      border-color: transparent;\n    }\n    50% {\n      border-color: orange;\n    }\n  }\n\n  @media screen and (min-width: 320px) and (max-width: 480px) {\n    .article-content {\n      padding: 0;\n    }\n    .skills {\n      font-size: 1.08rem;\n      max-width: 248px;\n    }\n  }\n</style>\n\n<div class=\"base skills typewriter\">✨ Hi, <b>welcome ! 有得札记.</b></div>","site":{"data":{}},"excerpt":"","more":"\n<style type=\"text/css\">\n  .base {\n    margin: 0;\n    padding: 0;\n    -webkit-box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    box-sizing: border-box;\n    font-weight: 700;\n  }\n\n  .skills {\n    width: 320px;\n    overflow: hidden;\n    border-right: .15em solid orange;\n    white-space: nowrap;\n    margin: 40px auto 0;\n    letter-spacing: .1em;\n    font-weight: 300;\n    color: #2C3E50;\n    font-size: 1.45rem;\n  }\n\n  .typewriter {\n    animation: typing 5s steps(40, end), blink-caret .75s step-end infinite;\n  }\n  /* The typing effect */\n\n  @keyframes typing {\n    from {\n      width: 0;\n    }\n    to {\n      width: 320px;\n    }\n  }\n  /* The typewriter cursor effect */\n\n  @keyframes blink-caret {\n    from,\n    to {\n      border-color: transparent;\n    }\n    50% {\n      border-color: orange;\n    }\n  }\n\n  @media screen and (min-width: 320px) and (max-width: 480px) {\n    .article-content {\n      padding: 0;\n    }\n    .skills {\n      font-size: 1.08rem;\n      max-width: 248px;\n    }\n  }\n</style>\n\n<div class=\"base skills typewriter\">✨ Hi, <b>welcome ! 有得札记.</b></div>"}],"Post":[{"title":"关于 Css3 Flex","date":"2017-08-28T03:25:41.000Z","_content":"\n\n布局的传统解决方案，基于盒状模型，依赖 display属性 + position属性 + float属性。它对于那些特殊布局非常不方便，比如，[垂直居中](https://css-tricks.com/centering-css-complete-guide/)就不容易实现。\n\n## W3C提出的一种新的方案\n### Flex布局，可以简便、完整、响应式地实现各种页面布局。\n\n<img src=\"/2017/08/28/css3-flex/c01.png\">\n\n\n\n## 浏览器支持\n<img class=\"br10\" src=\"./c101.jpg\">\n\n# Flex\n\nFlexible Box的缩写，意为\"弹性布局\"，\n用来为盒状模型提供最大的灵活性。\n\n\n**任何一个容器都可以指定为Flex布局。**\n\n```css\n    .box{\n        display: flex;\n    }\n```\n\n### 「inline-flex」 与 inline-block \n\n```css\n.flex,\n    .inline-flex{\n        width:100px;\n        height:50px;\n        border:1px solid #000;\n    }\n    .flex{\n        display:flex;\n    }\n    .inline-flex{\n        display:inline-flex;\n    }\n```\n\n[demo](http://www.oxxostudio.tw/demo/201501/css-flexbox-demo1.html)\n\n\n### Webkit内核的浏览器，必须加上`-webkit`前缀。\n\n```css\n    .box{\n        display: -webkit-flex; /* Safari */\n        display: flex;\n    }\n```\n\n>  注意，设为Flex布局以后，子元素的float、clear和vertical-align属性将失效。\n\n\n* 采用Flex布局的元素，称为Flex容器，简称\"容器\"\n* 它的所有子元素自动成为容器成员，称为Flex项目，简称\"项目\"\n\n---\n\n<img class=\"br10\" src=\"/2017/08/28/css3-flex/css09.png\">\n\n\n> flex布局发生在`父容器`和`子容器`之间。父容器需要有flex的环境(display:flex;)，子容器才能根据自身的属性来布局，简单的说，就是瓜分父容器的空间。相反就是说如果父容器没有flex的环境，那么子容器就无法使用flex的规则来划分父容器的空间。\n\n\n* 水平的主轴main axis和垂直的交叉轴（cross axis）\n* 主轴的开始位置（与边框的交叉点）叫做main start，结束位置叫做main end\n* 交叉轴的开始位置叫做cross start，结束位置叫做cross end\n* 项目默认沿主轴排列\n* 单个项目占据的主轴空间叫做main size，占据的交叉轴空间叫做cross size\n\n---\n\n## 容器的属性 &#91;**6个**&#93;\n---\n* <span class=\"green\">flex-direction</span>\n* <span class=\"green\">flex-wrap</span>\n* <span class=\"green3\">flex-flow</span>\n* <span class=\"blue\">justify-content</span>\n* <span class=\"blue\">align-items</span>\n* <span class=\"yellow\">align-content</span>\n\n\n## (A1) flex-direction \n### 「容器属性」决定主轴的方向（即项目的排列方向）\n\n```css\n    .box {\n        flex-direction: row | row-reverse | column | column-reverse;\n    }\n```\n\n* row（默认值）：主轴为水平方向，起点在左端。\n* row-reverse：主轴为水平方向，起点在右端。\n* column：主轴为垂直方向，起点在上沿。\n* column-reverse：主轴为垂直方向，起点在下沿。\n\n---\n\n<img class=\"br10\" src=\"/2017/08/28/css3-flex/css12.png\">\n\n### Flex-direction Demo\n\n---\n\n```css\n    .box {\n        flex-direction: row | row-reverse | column | column-reverse;\n    }\n```\n\n[demo](http://www.oxxostudio.tw/demo/201501/css-flexbox-demo2.html)\n\n\n## (A2) flex-wrap \n###「容器属性」定义如果一条轴线排不下，如何换行 \n\n[默认情况下，项目都排在一条轴线上]\n\n可取**3**个值\n\n```css\n    .box{\n        flex-wrap: nowrap | wrap | wrap-reverse;\n    }\n```\n\n<img class=\"br10\" src=\"/2017/08/28/css3-flex/c03.png\">\n\n### （1）nowrap（默认）：不换行\n\n---\n\n<img class=\"br10\"  src=\"/2017/08/28/css3-flex/c04.png\">\n\n### (2）wrap：换行，第一行在上方\n\n---\n\n<img class=\"br10\"  src=\"/2017/08/28/css3-flex/c05.jpg\">\n\n### (3) wrap-reverse：换行，第一行在下方\n\n---\n\n<img class=\"br10\"  src=\"/2017/08/28/css3-flex/c06.jpg\">\n\n[demo](http://www.oxxostudio.tw/demo/201501/css-flexbox-demo7.html)  \n\n```css\n    .nowrap{\n        flex-wrap:nowrap;\n    }\n    .wrap{\n        flex-wrap:wrap;\n    }\n    .wrap-reverse{\n        flex-wrap:wrap-reverse;\n    }\n```\n\n## (A3) flex-flow \n\n### 「容器属性」是flex-direction和flex-wrap的简写形式\n\n[默认值为**row** **nowrap**]\n\n```css\n    .box{\n        flex-flow: flex-direction || flex-wrap;\n    }\n```\n\n## (A4) justify-content \n### 「容器属性」定义了项目在主轴上的对齐方式\n\n```css\n    .box {\n        justify-content: flex-start | flex-end | center | space-between | space-around;\n    }\n```\n\n## 它可能取**5**个值，具体对齐方式与**轴的方向**有关\n\n---\n\n* flex-start（默认值）：左对齐\n* flex-end：右对齐\n* center： 居中\n* space-between：两端对齐，项目之间的间隔都相等\n* space-around：每个项目两侧的间隔相等，所以项目之间的间隔比项目与边框的间隔大一倍\n\n## [下面假设主轴**从左到右**]\n\n<img class=\"br10\" src=\"/2017/08/28/css3-flex/c07.png\">\n\n[demo](http://www.oxxostudio.tw/demo/201501/css-flexbox-demo3.html)  \n\n```css\n    .flex-start{\n        justify-content:flex-start;\n    }\n    .flex-end{\n        justify-content:flex-end;\n    }\n    .center{\n        justify-content:center;\n    }\n    .space-between{\n        justify-content:space-between;\n    }\n    .space-around{\n        justify-content:space-around;\n    }\n```\n\n[demo](http://www.oxxostudio.tw/demo/201501/css-flexbox-demo3.html)\n\n## (A5) align-items \n### 「容器属性」定义项目在交叉轴上如何对齐\n\n```css\n    .box {\n            align-items: flex-start | flex-end | center | baseline | stretch;\n        }\n```\n\n## 它可能取**5**个值，具体对齐方式与**交叉轴**有关\n\n---\n\n* flex-start：交叉轴的起点对齐\n* flex-end：交叉轴的终点对齐\n* center：交叉轴的中点对齐\n* baseline: 项目的第一行文字的基线对齐\n* stretch（默认值）：如果项目未设置高度或设为auto，将占满整个容器的高度\n\n## [下面假设交叉轴**从上到下**]\n\n<img class=\"br10\" src=\"/2017/08/28/css3-flex/c08.png\">\n\n```css\n    .box {\n            align-items: flex-start | flex-end | center | stretch | baseline;\n        }\n```\n\b\n[demo](http://www.oxxostudio.tw/demo/201501/css-flexbox-demo4.html)  \n\n\n## (A6) align-content \n### 「容器属性」定义了多根轴线的对齐方式\n\n---\n\n##### **[如果项目只有一根轴线，该属性不起作用]** \n\n```css\n    .box {\n           align-content: flex-start | flex-end | center | space-between | space-around | stretch;\n        }\n```\n\n## 它可能取**6**个值\n\n* flex-start：与交叉轴的起点对齐\n* flex-end：与交叉轴的终点对齐\n* center：与交叉轴的中点对齐\n* space-between：与交叉轴两端对齐，轴线之间的间隔平均分布\n* space-around：每根轴线两侧的间隔都相等,所以轴线之间的间隔比轴线与边框的间隔大一倍\n* stretch（默认值）：轴线占满整个交叉轴\n\n### <span class=\"text-danger\">如果项目只有一根轴线，该属性不起作用</span>\n\n---\n\n<img class=\"br10\" src=\"/2017/08/28/css3-flex/c09.png\">\n\n```css\n    .box {\n        align-content: flex-start | flex-end | center | space-between | space-around | stretch;\n    }\n```\n\n[demo](http://www.oxxostudio.tw/demo/201501/css-flexbox-demo6.html)  \n\n##项目的属性 &#91;**6个**&#93;\n\n---\n\n* <span class=\"blue\">order</span>\n* <span class=\"green2\">flex-grow</span>\n* <span class=\"green2\">flex-basis</span>\n* <span class=\"green2\">flex-shrink</span>\n* <span class=\"text-success\">flex</span>\n* <span class=\"yellow\">align-self</span>\n\n## (B1) order \n### 「项目属性」定义项目的排列顺序\n\n---\n```css\n    .item {\n            order: 1;\n        }\n```\n\n### [**数值越小,排列越靠前，默认为0**]\n\n---\n\n<img class=\"br10\" src=\"/2017/08/28/css3-flex/css34.png\">\n\n### order Demo\n\n---\n[demo](http://www.oxxostudio.tw/demo/201501/css-flexbox-demo8.html)\n\n```css\n    .order1{\n            order:1;\n            background:#c00;\n        }\n        .order2{\n            order:2;\n            background:#069;\n        }\n        .order3{\n            order:3;\n            background:#095;\n        }\n```\n\n[demo](http://www.oxxostudio.tw/demo/201501/css-flexbox-demo8.html)\n\n\n## (B2) flex-grow \n\n### 「项目属性」定义项目的放大比例\n\n---\n\n#### [**默认为0,即如果存在剩余空间，也不瓜分**]\n\n```css\n.   item {\n        flex-grow: 0; /* default 0 */\n    }\n```\n\n### flex-grow Demo\n---\n\n<div class=\"columns-2\">\n    <p style=\"font-size: 18px;text-align:left;\">如果所有项目的flex-grow属性都为1，<br>则它们将等分剩余空间（如果有的话）</p>\n    <p style=\"font-size: 18px;text-align:left;\">如果一个项目的flex-grow属性为2，其他项目都为1，则前者占据的剩余空间将比其他项多一倍</p>\n</div>\n<pre>\n    <code class=\"css pl10\">\n    .item {\n        flex-grow: 0; /* default 0 */\n    }\n    </code>\n</pre>\n---\n\n[demo](https://codepen.io/Frank_/pen/EmEPQm?editors=1100)\n\n[slide]\n##(B3) flex-basis \n###「项目属性」定义了在分配多余空间之前，项目占据的主轴空间（main size）\n\n### [**浏览器根据这个属性，计算主轴是否有多余空间**]\n---\n\n#### [**它的默认值为auto，即项目的本来大小**]\n```css\n    .item {\n        flex-basis: 1 | auto; /* default auto */\n    }\n```\n\n### flex-basis Demo\n---\n#### [**我们通过案例来解释**]\n```css\n    .item {\n        flex-basis: 1 | auto; /* default auto */\n    }\n```\n---\n[demo](https://codepen.io/Frank_/pen/VbXjxm?editors=1100)\n\n> 上面讲的<span class=\"green\">flex-grow</span>、<span class=\"green\">flex-basis</span>都是剩余空间的分配。但是，你有没有想过还有没有其他的情况呢？可以发现，上面讲的例子item1 item2 item3的宽度总和都是`没有超过`父容器的宽度的。 那如果三个子容器的`宽度和超过`父容器的宽度呢？那还有剩余空间可以分配吗，此时浏览器又是怎么处理呢？请看下面：\n\n## (B4) flex-shrink \n### 「项目属性」定义了项目的缩小比例，默认为1\n---\n#### [**即如果空间不足，该项目将缩小**]\n```css\n    .item {\n        flex-shrink: 1; /* default 1 */\n    }\n```\n\n### flex-shrink Demo\n---\n#### [**不太好理解 我们通过案例来解释**]\n```css\n    .item {\n        flex-grow: 1; /* default 0 */\n    }\n```\n\n---\n[demo](https://codepen.io/Frank_/pen/LydNrv?editors=1100)\n\n\n## (B5) flex \n### 「项目属性」简写，默认值为: **0 1 auto**\n###  <span class=\"green\">flex-grow</span>,<span class=\"green\">flex-shrink</span> 和 <span class=\"green\">flex-basis</span>\n###  [**后两个属性可选**]\n---\n```css\n    .item {\n        flex: none | [ <'flex-grow'> <'flex-shrink'>? || <'flex-basis'> ]\n    }\n```\n\n### 该属性有两个快捷值\n---\n```css\n    .item {\n        flex: none | [ <'flex-grow'> <'flex-shrink'>? || <'flex-basis'> ]\n    }\n```\n\n* <span class=\"yellow\">auto</span> <span class=\"green\">(1 1 auto)</span>\n* <span class=\"yellow\">none</span> <span class=\"green\">(0 0 auto)</span>\n\n### flex Demo\n---\n#### [**建议优先使用这个属性,因为浏览器会推算相关值**]\n```css\n    .item {\n        flex: <'flex-grow'> <'flex-shrink'> <'flex-basis'>\n    }\n    .item1{\n        flex:1 2 200px;\n        background:#c00;\n    }\n    .item2{\n        flex:2 1 100px;\n        background:#069;\n    }\n```\n\n[demo](http://www.oxxostudio.tw/demo/201501/css-flexbox-demo9.html)\n\n\n## (B6) align-self \n### 「项目属性」允许单个项目有与其他项目不一样的对齐方式\n###  [**可覆盖align-items属性**]\n---\n\n```html\n默认值为 auto, 表示继承父元素的align-items属性\n\n如果没有父元素，则等同于stretch\n```\n```css\n    .item {\n        align-self: auto | flex-start | flex-end | center | baseline | stretch;\n    }\n```\n\n### <span class=\"text-danger\">可取6个值，除了auto，其他都与align-items属性完全一致</span>\n```css\n    .item {\n        align-self: auto | flex-start | flex-end | center | baseline | stretch;\n    }\n```\n\n[slide]\n<img class=\"br10\" src=\"/2017/08/28/css3-flex/css46.png\">\n\n### align-self Demo\n---\n#### [**建议优先使用这个属性,因为浏览器会推算相关值**]\n```css\n    .item2{\n        align-self:baseline;\n        line-height: 30px;\n        background:#095;\n    }\n```\n\n[demo](http://www.oxxostudio.tw/demo/201501/css-flexbox-demo5.html)\n\n\n> 容器的属性 &#91;6个&#93;\n\n* flex-direction\n* flex-wrap\n* flex-flow\n* justify-content\n* align-items\n* align-content\n\n> 项目的属性 &#91;6个&#93; \n\n* order\n* flex-grow\n* flex-basis\n* flex-shrink\n* flex\n* align-self\n\n</br>\n\n#### 参考资料\n\n+ http://www.oxxostudio.tw/articles/201501/css-flexbox.html\n+ http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html\n+ https://css-tricks.com/snippets/css/a-guide-to-flexbox/\n+ https://developer.mozilla.org/zh-CN/docs/Web/CSS/CSS_Flexible_Box_Layout/Using_CSS_flexible_boxes\n\n\n</br>\n\n> 声明:本资料仅供学习交流，严禁使用于任何商业用途! 相关资料参考自[mdn](https://developer.mozilla.org/en/)等开发者网站或技术大牛[阮一峰](http://www.ruanyifeng.com/blog/)、[oxxo](http://www.oxxostudio.tw/articles/201405/about-me.html)等博客内容。 如需转载，转载请注明出处。\n\n<br/>\n### 完.","source":"_posts/css3-flex.md","raw":"---\ntitle: 关于 Css3 Flex \ndate: 2017-08-28 11:25:41\ncategories: 前端\ntags:\n- css\n- flex\n---\n\n\n布局的传统解决方案，基于盒状模型，依赖 display属性 + position属性 + float属性。它对于那些特殊布局非常不方便，比如，[垂直居中](https://css-tricks.com/centering-css-complete-guide/)就不容易实现。\n\n## W3C提出的一种新的方案\n### Flex布局，可以简便、完整、响应式地实现各种页面布局。\n\n<img src=\"/2017/08/28/css3-flex/c01.png\">\n\n\n\n## 浏览器支持\n<img class=\"br10\" src=\"./c101.jpg\">\n\n# Flex\n\nFlexible Box的缩写，意为\"弹性布局\"，\n用来为盒状模型提供最大的灵活性。\n\n\n**任何一个容器都可以指定为Flex布局。**\n\n```css\n    .box{\n        display: flex;\n    }\n```\n\n### 「inline-flex」 与 inline-block \n\n```css\n.flex,\n    .inline-flex{\n        width:100px;\n        height:50px;\n        border:1px solid #000;\n    }\n    .flex{\n        display:flex;\n    }\n    .inline-flex{\n        display:inline-flex;\n    }\n```\n\n[demo](http://www.oxxostudio.tw/demo/201501/css-flexbox-demo1.html)\n\n\n### Webkit内核的浏览器，必须加上`-webkit`前缀。\n\n```css\n    .box{\n        display: -webkit-flex; /* Safari */\n        display: flex;\n    }\n```\n\n>  注意，设为Flex布局以后，子元素的float、clear和vertical-align属性将失效。\n\n\n* 采用Flex布局的元素，称为Flex容器，简称\"容器\"\n* 它的所有子元素自动成为容器成员，称为Flex项目，简称\"项目\"\n\n---\n\n<img class=\"br10\" src=\"/2017/08/28/css3-flex/css09.png\">\n\n\n> flex布局发生在`父容器`和`子容器`之间。父容器需要有flex的环境(display:flex;)，子容器才能根据自身的属性来布局，简单的说，就是瓜分父容器的空间。相反就是说如果父容器没有flex的环境，那么子容器就无法使用flex的规则来划分父容器的空间。\n\n\n* 水平的主轴main axis和垂直的交叉轴（cross axis）\n* 主轴的开始位置（与边框的交叉点）叫做main start，结束位置叫做main end\n* 交叉轴的开始位置叫做cross start，结束位置叫做cross end\n* 项目默认沿主轴排列\n* 单个项目占据的主轴空间叫做main size，占据的交叉轴空间叫做cross size\n\n---\n\n## 容器的属性 &#91;**6个**&#93;\n---\n* <span class=\"green\">flex-direction</span>\n* <span class=\"green\">flex-wrap</span>\n* <span class=\"green3\">flex-flow</span>\n* <span class=\"blue\">justify-content</span>\n* <span class=\"blue\">align-items</span>\n* <span class=\"yellow\">align-content</span>\n\n\n## (A1) flex-direction \n### 「容器属性」决定主轴的方向（即项目的排列方向）\n\n```css\n    .box {\n        flex-direction: row | row-reverse | column | column-reverse;\n    }\n```\n\n* row（默认值）：主轴为水平方向，起点在左端。\n* row-reverse：主轴为水平方向，起点在右端。\n* column：主轴为垂直方向，起点在上沿。\n* column-reverse：主轴为垂直方向，起点在下沿。\n\n---\n\n<img class=\"br10\" src=\"/2017/08/28/css3-flex/css12.png\">\n\n### Flex-direction Demo\n\n---\n\n```css\n    .box {\n        flex-direction: row | row-reverse | column | column-reverse;\n    }\n```\n\n[demo](http://www.oxxostudio.tw/demo/201501/css-flexbox-demo2.html)\n\n\n## (A2) flex-wrap \n###「容器属性」定义如果一条轴线排不下，如何换行 \n\n[默认情况下，项目都排在一条轴线上]\n\n可取**3**个值\n\n```css\n    .box{\n        flex-wrap: nowrap | wrap | wrap-reverse;\n    }\n```\n\n<img class=\"br10\" src=\"/2017/08/28/css3-flex/c03.png\">\n\n### （1）nowrap（默认）：不换行\n\n---\n\n<img class=\"br10\"  src=\"/2017/08/28/css3-flex/c04.png\">\n\n### (2）wrap：换行，第一行在上方\n\n---\n\n<img class=\"br10\"  src=\"/2017/08/28/css3-flex/c05.jpg\">\n\n### (3) wrap-reverse：换行，第一行在下方\n\n---\n\n<img class=\"br10\"  src=\"/2017/08/28/css3-flex/c06.jpg\">\n\n[demo](http://www.oxxostudio.tw/demo/201501/css-flexbox-demo7.html)  \n\n```css\n    .nowrap{\n        flex-wrap:nowrap;\n    }\n    .wrap{\n        flex-wrap:wrap;\n    }\n    .wrap-reverse{\n        flex-wrap:wrap-reverse;\n    }\n```\n\n## (A3) flex-flow \n\n### 「容器属性」是flex-direction和flex-wrap的简写形式\n\n[默认值为**row** **nowrap**]\n\n```css\n    .box{\n        flex-flow: flex-direction || flex-wrap;\n    }\n```\n\n## (A4) justify-content \n### 「容器属性」定义了项目在主轴上的对齐方式\n\n```css\n    .box {\n        justify-content: flex-start | flex-end | center | space-between | space-around;\n    }\n```\n\n## 它可能取**5**个值，具体对齐方式与**轴的方向**有关\n\n---\n\n* flex-start（默认值）：左对齐\n* flex-end：右对齐\n* center： 居中\n* space-between：两端对齐，项目之间的间隔都相等\n* space-around：每个项目两侧的间隔相等，所以项目之间的间隔比项目与边框的间隔大一倍\n\n## [下面假设主轴**从左到右**]\n\n<img class=\"br10\" src=\"/2017/08/28/css3-flex/c07.png\">\n\n[demo](http://www.oxxostudio.tw/demo/201501/css-flexbox-demo3.html)  \n\n```css\n    .flex-start{\n        justify-content:flex-start;\n    }\n    .flex-end{\n        justify-content:flex-end;\n    }\n    .center{\n        justify-content:center;\n    }\n    .space-between{\n        justify-content:space-between;\n    }\n    .space-around{\n        justify-content:space-around;\n    }\n```\n\n[demo](http://www.oxxostudio.tw/demo/201501/css-flexbox-demo3.html)\n\n## (A5) align-items \n### 「容器属性」定义项目在交叉轴上如何对齐\n\n```css\n    .box {\n            align-items: flex-start | flex-end | center | baseline | stretch;\n        }\n```\n\n## 它可能取**5**个值，具体对齐方式与**交叉轴**有关\n\n---\n\n* flex-start：交叉轴的起点对齐\n* flex-end：交叉轴的终点对齐\n* center：交叉轴的中点对齐\n* baseline: 项目的第一行文字的基线对齐\n* stretch（默认值）：如果项目未设置高度或设为auto，将占满整个容器的高度\n\n## [下面假设交叉轴**从上到下**]\n\n<img class=\"br10\" src=\"/2017/08/28/css3-flex/c08.png\">\n\n```css\n    .box {\n            align-items: flex-start | flex-end | center | stretch | baseline;\n        }\n```\n\b\n[demo](http://www.oxxostudio.tw/demo/201501/css-flexbox-demo4.html)  \n\n\n## (A6) align-content \n### 「容器属性」定义了多根轴线的对齐方式\n\n---\n\n##### **[如果项目只有一根轴线，该属性不起作用]** \n\n```css\n    .box {\n           align-content: flex-start | flex-end | center | space-between | space-around | stretch;\n        }\n```\n\n## 它可能取**6**个值\n\n* flex-start：与交叉轴的起点对齐\n* flex-end：与交叉轴的终点对齐\n* center：与交叉轴的中点对齐\n* space-between：与交叉轴两端对齐，轴线之间的间隔平均分布\n* space-around：每根轴线两侧的间隔都相等,所以轴线之间的间隔比轴线与边框的间隔大一倍\n* stretch（默认值）：轴线占满整个交叉轴\n\n### <span class=\"text-danger\">如果项目只有一根轴线，该属性不起作用</span>\n\n---\n\n<img class=\"br10\" src=\"/2017/08/28/css3-flex/c09.png\">\n\n```css\n    .box {\n        align-content: flex-start | flex-end | center | space-between | space-around | stretch;\n    }\n```\n\n[demo](http://www.oxxostudio.tw/demo/201501/css-flexbox-demo6.html)  \n\n##项目的属性 &#91;**6个**&#93;\n\n---\n\n* <span class=\"blue\">order</span>\n* <span class=\"green2\">flex-grow</span>\n* <span class=\"green2\">flex-basis</span>\n* <span class=\"green2\">flex-shrink</span>\n* <span class=\"text-success\">flex</span>\n* <span class=\"yellow\">align-self</span>\n\n## (B1) order \n### 「项目属性」定义项目的排列顺序\n\n---\n```css\n    .item {\n            order: 1;\n        }\n```\n\n### [**数值越小,排列越靠前，默认为0**]\n\n---\n\n<img class=\"br10\" src=\"/2017/08/28/css3-flex/css34.png\">\n\n### order Demo\n\n---\n[demo](http://www.oxxostudio.tw/demo/201501/css-flexbox-demo8.html)\n\n```css\n    .order1{\n            order:1;\n            background:#c00;\n        }\n        .order2{\n            order:2;\n            background:#069;\n        }\n        .order3{\n            order:3;\n            background:#095;\n        }\n```\n\n[demo](http://www.oxxostudio.tw/demo/201501/css-flexbox-demo8.html)\n\n\n## (B2) flex-grow \n\n### 「项目属性」定义项目的放大比例\n\n---\n\n#### [**默认为0,即如果存在剩余空间，也不瓜分**]\n\n```css\n.   item {\n        flex-grow: 0; /* default 0 */\n    }\n```\n\n### flex-grow Demo\n---\n\n<div class=\"columns-2\">\n    <p style=\"font-size: 18px;text-align:left;\">如果所有项目的flex-grow属性都为1，<br>则它们将等分剩余空间（如果有的话）</p>\n    <p style=\"font-size: 18px;text-align:left;\">如果一个项目的flex-grow属性为2，其他项目都为1，则前者占据的剩余空间将比其他项多一倍</p>\n</div>\n<pre>\n    <code class=\"css pl10\">\n    .item {\n        flex-grow: 0; /* default 0 */\n    }\n    </code>\n</pre>\n---\n\n[demo](https://codepen.io/Frank_/pen/EmEPQm?editors=1100)\n\n[slide]\n##(B3) flex-basis \n###「项目属性」定义了在分配多余空间之前，项目占据的主轴空间（main size）\n\n### [**浏览器根据这个属性，计算主轴是否有多余空间**]\n---\n\n#### [**它的默认值为auto，即项目的本来大小**]\n```css\n    .item {\n        flex-basis: 1 | auto; /* default auto */\n    }\n```\n\n### flex-basis Demo\n---\n#### [**我们通过案例来解释**]\n```css\n    .item {\n        flex-basis: 1 | auto; /* default auto */\n    }\n```\n---\n[demo](https://codepen.io/Frank_/pen/VbXjxm?editors=1100)\n\n> 上面讲的<span class=\"green\">flex-grow</span>、<span class=\"green\">flex-basis</span>都是剩余空间的分配。但是，你有没有想过还有没有其他的情况呢？可以发现，上面讲的例子item1 item2 item3的宽度总和都是`没有超过`父容器的宽度的。 那如果三个子容器的`宽度和超过`父容器的宽度呢？那还有剩余空间可以分配吗，此时浏览器又是怎么处理呢？请看下面：\n\n## (B4) flex-shrink \n### 「项目属性」定义了项目的缩小比例，默认为1\n---\n#### [**即如果空间不足，该项目将缩小**]\n```css\n    .item {\n        flex-shrink: 1; /* default 1 */\n    }\n```\n\n### flex-shrink Demo\n---\n#### [**不太好理解 我们通过案例来解释**]\n```css\n    .item {\n        flex-grow: 1; /* default 0 */\n    }\n```\n\n---\n[demo](https://codepen.io/Frank_/pen/LydNrv?editors=1100)\n\n\n## (B5) flex \n### 「项目属性」简写，默认值为: **0 1 auto**\n###  <span class=\"green\">flex-grow</span>,<span class=\"green\">flex-shrink</span> 和 <span class=\"green\">flex-basis</span>\n###  [**后两个属性可选**]\n---\n```css\n    .item {\n        flex: none | [ <'flex-grow'> <'flex-shrink'>? || <'flex-basis'> ]\n    }\n```\n\n### 该属性有两个快捷值\n---\n```css\n    .item {\n        flex: none | [ <'flex-grow'> <'flex-shrink'>? || <'flex-basis'> ]\n    }\n```\n\n* <span class=\"yellow\">auto</span> <span class=\"green\">(1 1 auto)</span>\n* <span class=\"yellow\">none</span> <span class=\"green\">(0 0 auto)</span>\n\n### flex Demo\n---\n#### [**建议优先使用这个属性,因为浏览器会推算相关值**]\n```css\n    .item {\n        flex: <'flex-grow'> <'flex-shrink'> <'flex-basis'>\n    }\n    .item1{\n        flex:1 2 200px;\n        background:#c00;\n    }\n    .item2{\n        flex:2 1 100px;\n        background:#069;\n    }\n```\n\n[demo](http://www.oxxostudio.tw/demo/201501/css-flexbox-demo9.html)\n\n\n## (B6) align-self \n### 「项目属性」允许单个项目有与其他项目不一样的对齐方式\n###  [**可覆盖align-items属性**]\n---\n\n```html\n默认值为 auto, 表示继承父元素的align-items属性\n\n如果没有父元素，则等同于stretch\n```\n```css\n    .item {\n        align-self: auto | flex-start | flex-end | center | baseline | stretch;\n    }\n```\n\n### <span class=\"text-danger\">可取6个值，除了auto，其他都与align-items属性完全一致</span>\n```css\n    .item {\n        align-self: auto | flex-start | flex-end | center | baseline | stretch;\n    }\n```\n\n[slide]\n<img class=\"br10\" src=\"/2017/08/28/css3-flex/css46.png\">\n\n### align-self Demo\n---\n#### [**建议优先使用这个属性,因为浏览器会推算相关值**]\n```css\n    .item2{\n        align-self:baseline;\n        line-height: 30px;\n        background:#095;\n    }\n```\n\n[demo](http://www.oxxostudio.tw/demo/201501/css-flexbox-demo5.html)\n\n\n> 容器的属性 &#91;6个&#93;\n\n* flex-direction\n* flex-wrap\n* flex-flow\n* justify-content\n* align-items\n* align-content\n\n> 项目的属性 &#91;6个&#93; \n\n* order\n* flex-grow\n* flex-basis\n* flex-shrink\n* flex\n* align-self\n\n</br>\n\n#### 参考资料\n\n+ http://www.oxxostudio.tw/articles/201501/css-flexbox.html\n+ http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html\n+ https://css-tricks.com/snippets/css/a-guide-to-flexbox/\n+ https://developer.mozilla.org/zh-CN/docs/Web/CSS/CSS_Flexible_Box_Layout/Using_CSS_flexible_boxes\n\n\n</br>\n\n> 声明:本资料仅供学习交流，严禁使用于任何商业用途! 相关资料参考自[mdn](https://developer.mozilla.org/en/)等开发者网站或技术大牛[阮一峰](http://www.ruanyifeng.com/blog/)、[oxxo](http://www.oxxostudio.tw/articles/201405/about-me.html)等博客内容。 如需转载，转载请注明出处。\n\n<br/>\n### 完.","slug":"css3-flex","published":1,"updated":"2022-08-30T04:25:07.503Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl7fovitm00010do7vrnmdh3h","content":"<p>布局的传统解决方案，基于盒状模型，依赖 display属性 + position属性 + float属性。它对于那些特殊布局非常不方便，比如，<a href=\"https://css-tricks.com/centering-css-complete-guide/\" target=\"_blank\" rel=\"external\">垂直居中</a>就不容易实现。</p>\n<h2 id=\"W3C提出的一种新的方案\"><a href=\"#W3C提出的一种新的方案\" class=\"headerlink\" title=\"W3C提出的一种新的方案\"></a>W3C提出的一种新的方案</h2><h3 id=\"Flex布局，可以简便、完整、响应式地实现各种页面布局。\"><a href=\"#Flex布局，可以简便、完整、响应式地实现各种页面布局。\" class=\"headerlink\" title=\"Flex布局，可以简便、完整、响应式地实现各种页面布局。\"></a>Flex布局，可以简便、完整、响应式地实现各种页面布局。</h3><p><img src=\"/2017/08/28/css3-flex/c01.png\"></p>\n<h2 id=\"浏览器支持\"><a href=\"#浏览器支持\" class=\"headerlink\" title=\"浏览器支持\"></a>浏览器支持</h2><p><img class=\"br10\" src=\"/28/css3-flex/c101.jpg\"></p>\n<h1 id=\"Flex\"><a href=\"#Flex\" class=\"headerlink\" title=\"Flex\"></a>Flex</h1><p>Flexible Box的缩写，意为”弹性布局”，<br>用来为盒状模型提供最大的灵活性。</p>\n<p><strong>任何一个容器都可以指定为Flex布局。</strong></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.box</span>&#123;</div><div class=\"line\">    <span class=\"attribute\">display</span>: flex;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"「inline-flex」-与-inline-block\"><a href=\"#「inline-flex」-与-inline-block\" class=\"headerlink\" title=\"「inline-flex」 与 inline-block\"></a>「inline-flex」 与 inline-block</h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.flex</span>,</div><div class=\"line\">    <span class=\"selector-class\">.inline-flex</span>&#123;</div><div class=\"line\">        <span class=\"attribute\">width</span>:<span class=\"number\">100px</span>;</div><div class=\"line\">        <span class=\"attribute\">height</span>:<span class=\"number\">50px</span>;</div><div class=\"line\">        <span class=\"attribute\">border</span>:<span class=\"number\">1px</span> solid <span class=\"number\">#000</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"selector-class\">.flex</span>&#123;</div><div class=\"line\">        <span class=\"attribute\">display</span>:flex;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"selector-class\">.inline-flex</span>&#123;</div><div class=\"line\">        <span class=\"attribute\">display</span>:inline-flex;</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure>\n<p><a href=\"http://www.oxxostudio.tw/demo/201501/css-flexbox-demo1.html\" target=\"_blank\" rel=\"external\">demo</a></p>\n<h3 id=\"Webkit内核的浏览器，必须加上-webkit前缀。\"><a href=\"#Webkit内核的浏览器，必须加上-webkit前缀。\" class=\"headerlink\" title=\"Webkit内核的浏览器，必须加上-webkit前缀。\"></a>Webkit内核的浏览器，必须加上<code>-webkit</code>前缀。</h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.box</span>&#123;</div><div class=\"line\">    <span class=\"attribute\">display</span>: -webkit-flex; <span class=\"comment\">/* Safari */</span></div><div class=\"line\">    <span class=\"attribute\">display</span>: flex;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<blockquote>\n<p> 注意，设为Flex布局以后，子元素的float、clear和vertical-align属性将失效。</p>\n</blockquote>\n<ul>\n<li>采用Flex布局的元素，称为Flex容器，简称”容器”</li>\n<li>它的所有子元素自动成为容器成员，称为Flex项目，简称”项目”</li>\n</ul>\n<hr>\n<p><img class=\"br10\" src=\"/2017/08/28/css3-flex/css09.png\"></p>\n<blockquote>\n<p>flex布局发生在<code>父容器</code>和<code>子容器</code>之间。父容器需要有flex的环境(display:flex;)，子容器才能根据自身的属性来布局，简单的说，就是瓜分父容器的空间。相反就是说如果父容器没有flex的环境，那么子容器就无法使用flex的规则来划分父容器的空间。</p>\n</blockquote>\n<ul>\n<li>水平的主轴main axis和垂直的交叉轴（cross axis）</li>\n<li>主轴的开始位置（与边框的交叉点）叫做main start，结束位置叫做main end</li>\n<li>交叉轴的开始位置叫做cross start，结束位置叫做cross end</li>\n<li>项目默认沿主轴排列</li>\n<li>单个项目占据的主轴空间叫做main size，占据的交叉轴空间叫做cross size</li>\n</ul>\n<hr>\n<h2 id=\"容器的属性-91-6个-93\"><a href=\"#容器的属性-91-6个-93\" class=\"headerlink\" title=\"容器的属性 &#91;6个&#93;\"></a>容器的属性 &#91;<strong>6个</strong>&#93;</h2><hr>\n<ul>\n<li><span class=\"green\">flex-direction</span></li>\n<li><span class=\"green\">flex-wrap</span></li>\n<li><span class=\"green3\">flex-flow</span></li>\n<li><span class=\"blue\">justify-content</span></li>\n<li><span class=\"blue\">align-items</span></li>\n<li><span class=\"yellow\">align-content</span></li>\n</ul>\n<h2 id=\"A1-flex-direction\"><a href=\"#A1-flex-direction\" class=\"headerlink\" title=\"(A1) flex-direction\"></a>(A1) flex-direction</h2><h3 id=\"「容器属性」决定主轴的方向（即项目的排列方向）\"><a href=\"#「容器属性」决定主轴的方向（即项目的排列方向）\" class=\"headerlink\" title=\"「容器属性」决定主轴的方向（即项目的排列方向）\"></a>「容器属性」决定主轴的方向（即项目的排列方向）</h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.box</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">flex-direction</span>: row | row-reverse | column | column-reverse;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<ul>\n<li>row（默认值）：主轴为水平方向，起点在左端。</li>\n<li>row-reverse：主轴为水平方向，起点在右端。</li>\n<li>column：主轴为垂直方向，起点在上沿。</li>\n<li>column-reverse：主轴为垂直方向，起点在下沿。</li>\n</ul>\n<hr>\n<p><img class=\"br10\" src=\"/2017/08/28/css3-flex/css12.png\"></p>\n<h3 id=\"Flex-direction-Demo\"><a href=\"#Flex-direction-Demo\" class=\"headerlink\" title=\"Flex-direction Demo\"></a>Flex-direction Demo</h3><hr>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.box</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">flex-direction</span>: row | row-reverse | column | column-reverse;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><a href=\"http://www.oxxostudio.tw/demo/201501/css-flexbox-demo2.html\" target=\"_blank\" rel=\"external\">demo</a></p>\n<h2 id=\"A2-flex-wrap\"><a href=\"#A2-flex-wrap\" class=\"headerlink\" title=\"(A2) flex-wrap\"></a>(A2) flex-wrap</h2><p>###「容器属性」定义如果一条轴线排不下，如何换行 </p>\n<p>[默认情况下，项目都排在一条轴线上]</p>\n<p>可取<strong>3</strong>个值</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.box</span>&#123;</div><div class=\"line\">    <span class=\"attribute\">flex-wrap</span>: nowrap | wrap | wrap-reverse;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><img class=\"br10\" src=\"/2017/08/28/css3-flex/c03.png\"></p>\n<h3 id=\"（1）nowrap（默认）：不换行\"><a href=\"#（1）nowrap（默认）：不换行\" class=\"headerlink\" title=\"（1）nowrap（默认）：不换行\"></a>（1）nowrap（默认）：不换行</h3><hr>\n<p><img class=\"br10\" src=\"/2017/08/28/css3-flex/c04.png\"></p>\n<h3 id=\"2）wrap：换行，第一行在上方\"><a href=\"#2）wrap：换行，第一行在上方\" class=\"headerlink\" title=\"(2）wrap：换行，第一行在上方\"></a>(2）wrap：换行，第一行在上方</h3><hr>\n<p><img class=\"br10\" src=\"/2017/08/28/css3-flex/c05.jpg\"></p>\n<h3 id=\"3-wrap-reverse：换行，第一行在下方\"><a href=\"#3-wrap-reverse：换行，第一行在下方\" class=\"headerlink\" title=\"(3) wrap-reverse：换行，第一行在下方\"></a>(3) wrap-reverse：换行，第一行在下方</h3><hr>\n<p><img class=\"br10\" src=\"/2017/08/28/css3-flex/c06.jpg\"></p>\n<p><a href=\"http://www.oxxostudio.tw/demo/201501/css-flexbox-demo7.html\" target=\"_blank\" rel=\"external\">demo</a>  </p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.nowrap</span>&#123;</div><div class=\"line\">    <span class=\"attribute\">flex-wrap</span>:nowrap;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.wrap</span>&#123;</div><div class=\"line\">    <span class=\"attribute\">flex-wrap</span>:wrap;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.wrap-reverse</span>&#123;</div><div class=\"line\">    <span class=\"attribute\">flex-wrap</span>:wrap-reverse;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"A3-flex-flow\"><a href=\"#A3-flex-flow\" class=\"headerlink\" title=\"(A3) flex-flow\"></a>(A3) flex-flow</h2><h3 id=\"「容器属性」是flex-direction和flex-wrap的简写形式\"><a href=\"#「容器属性」是flex-direction和flex-wrap的简写形式\" class=\"headerlink\" title=\"「容器属性」是flex-direction和flex-wrap的简写形式\"></a>「容器属性」是flex-direction和flex-wrap的简写形式</h3><p>[默认值为<strong>row</strong> <strong>nowrap</strong>]</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.box</span>&#123;</div><div class=\"line\">    <span class=\"attribute\">flex-flow</span>: flex-direction || flex-wrap;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"A4-justify-content\"><a href=\"#A4-justify-content\" class=\"headerlink\" title=\"(A4) justify-content\"></a>(A4) justify-content</h2><h3 id=\"「容器属性」定义了项目在主轴上的对齐方式\"><a href=\"#「容器属性」定义了项目在主轴上的对齐方式\" class=\"headerlink\" title=\"「容器属性」定义了项目在主轴上的对齐方式\"></a>「容器属性」定义了项目在主轴上的对齐方式</h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.box</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">justify-content</span>: flex-start | flex-end | center | space-between | space-around;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"它可能取5个值，具体对齐方式与轴的方向有关\"><a href=\"#它可能取5个值，具体对齐方式与轴的方向有关\" class=\"headerlink\" title=\"它可能取5个值，具体对齐方式与轴的方向有关\"></a>它可能取<strong>5</strong>个值，具体对齐方式与<strong>轴的方向</strong>有关</h2><hr>\n<ul>\n<li>flex-start（默认值）：左对齐</li>\n<li>flex-end：右对齐</li>\n<li>center： 居中</li>\n<li>space-between：两端对齐，项目之间的间隔都相等</li>\n<li>space-around：每个项目两侧的间隔相等，所以项目之间的间隔比项目与边框的间隔大一倍</li>\n</ul>\n<h2 id=\"下面假设主轴从左到右\"><a href=\"#下面假设主轴从左到右\" class=\"headerlink\" title=\"[下面假设主轴从左到右]\"></a>[下面假设主轴<strong>从左到右</strong>]</h2><p><img class=\"br10\" src=\"/2017/08/28/css3-flex/c07.png\"></p>\n<p><a href=\"http://www.oxxostudio.tw/demo/201501/css-flexbox-demo3.html\" target=\"_blank\" rel=\"external\">demo</a>  </p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.flex-start</span>&#123;</div><div class=\"line\">    <span class=\"attribute\">justify-content</span>:flex-start;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.flex-end</span>&#123;</div><div class=\"line\">    <span class=\"attribute\">justify-content</span>:flex-end;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.center</span>&#123;</div><div class=\"line\">    <span class=\"attribute\">justify-content</span>:center;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.space-between</span>&#123;</div><div class=\"line\">    <span class=\"attribute\">justify-content</span>:space-between;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.space-around</span>&#123;</div><div class=\"line\">    <span class=\"attribute\">justify-content</span>:space-around;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><a href=\"http://www.oxxostudio.tw/demo/201501/css-flexbox-demo3.html\" target=\"_blank\" rel=\"external\">demo</a></p>\n<h2 id=\"A5-align-items\"><a href=\"#A5-align-items\" class=\"headerlink\" title=\"(A5) align-items\"></a>(A5) align-items</h2><h3 id=\"「容器属性」定义项目在交叉轴上如何对齐\"><a href=\"#「容器属性」定义项目在交叉轴上如何对齐\" class=\"headerlink\" title=\"「容器属性」定义项目在交叉轴上如何对齐\"></a>「容器属性」定义项目在交叉轴上如何对齐</h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.box</span> &#123;</div><div class=\"line\">        <span class=\"attribute\">align-items</span>: flex-start | flex-end | center | baseline | stretch;</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure>\n<h2 id=\"它可能取5个值，具体对齐方式与交叉轴有关\"><a href=\"#它可能取5个值，具体对齐方式与交叉轴有关\" class=\"headerlink\" title=\"它可能取5个值，具体对齐方式与交叉轴有关\"></a>它可能取<strong>5</strong>个值，具体对齐方式与<strong>交叉轴</strong>有关</h2><hr>\n<ul>\n<li>flex-start：交叉轴的起点对齐</li>\n<li>flex-end：交叉轴的终点对齐</li>\n<li>center：交叉轴的中点对齐</li>\n<li>baseline: 项目的第一行文字的基线对齐</li>\n<li>stretch（默认值）：如果项目未设置高度或设为auto，将占满整个容器的高度</li>\n</ul>\n<h2 id=\"下面假设交叉轴从上到下\"><a href=\"#下面假设交叉轴从上到下\" class=\"headerlink\" title=\"[下面假设交叉轴从上到下]\"></a>[下面假设交叉轴<strong>从上到下</strong>]</h2><p><img class=\"br10\" src=\"/2017/08/28/css3-flex/c08.png\"></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.box</span> &#123;</div><div class=\"line\">        <span class=\"attribute\">align-items</span>: flex-start | flex-end | center | stretch | baseline;</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure>\n<p>\b<br><a href=\"http://www.oxxostudio.tw/demo/201501/css-flexbox-demo4.html\" target=\"_blank\" rel=\"external\">demo</a>  </p>\n<h2 id=\"A6-align-content\"><a href=\"#A6-align-content\" class=\"headerlink\" title=\"(A6) align-content\"></a>(A6) align-content</h2><h3 id=\"「容器属性」定义了多根轴线的对齐方式\"><a href=\"#「容器属性」定义了多根轴线的对齐方式\" class=\"headerlink\" title=\"「容器属性」定义了多根轴线的对齐方式\"></a>「容器属性」定义了多根轴线的对齐方式</h3><hr>\n<h5 id=\"如果项目只有一根轴线，该属性不起作用\"><a href=\"#如果项目只有一根轴线，该属性不起作用\" class=\"headerlink\" title=\"[如果项目只有一根轴线，该属性不起作用]\"></a><strong>[如果项目只有一根轴线，该属性不起作用]</strong></h5><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.box</span> &#123;</div><div class=\"line\">       <span class=\"attribute\">align-content</span>: flex-start | flex-end | center | space-between | space-around | stretch;</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure>\n<h2 id=\"它可能取6个值\"><a href=\"#它可能取6个值\" class=\"headerlink\" title=\"它可能取6个值\"></a>它可能取<strong>6</strong>个值</h2><ul>\n<li>flex-start：与交叉轴的起点对齐</li>\n<li>flex-end：与交叉轴的终点对齐</li>\n<li>center：与交叉轴的中点对齐</li>\n<li>space-between：与交叉轴两端对齐，轴线之间的间隔平均分布</li>\n<li>space-around：每根轴线两侧的间隔都相等,所以轴线之间的间隔比轴线与边框的间隔大一倍</li>\n<li>stretch（默认值）：轴线占满整个交叉轴</li>\n</ul>\n<h3 id=\"如果项目只有一根轴线，该属性不起作用-1\"><a href=\"#如果项目只有一根轴线，该属性不起作用-1\" class=\"headerlink\" title=\"如果项目只有一根轴线，该属性不起作用\"></a><span class=\"text-danger\">如果项目只有一根轴线，该属性不起作用</span></h3><hr>\n<p><img class=\"br10\" src=\"/2017/08/28/css3-flex/c09.png\"></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.box</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">align-content</span>: flex-start | flex-end | center | space-between | space-around | stretch;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><a href=\"http://www.oxxostudio.tw/demo/201501/css-flexbox-demo6.html\" target=\"_blank\" rel=\"external\">demo</a>  </p>\n<p>##项目的属性 &#91;<strong>6个</strong>&#93;</p>\n<hr>\n<ul>\n<li><span class=\"blue\">order</span></li>\n<li><span class=\"green2\">flex-grow</span></li>\n<li><span class=\"green2\">flex-basis</span></li>\n<li><span class=\"green2\">flex-shrink</span></li>\n<li><span class=\"text-success\">flex</span></li>\n<li><span class=\"yellow\">align-self</span></li>\n</ul>\n<h2 id=\"B1-order\"><a href=\"#B1-order\" class=\"headerlink\" title=\"(B1) order\"></a>(B1) order</h2><h3 id=\"「项目属性」定义项目的排列顺序\"><a href=\"#「项目属性」定义项目的排列顺序\" class=\"headerlink\" title=\"「项目属性」定义项目的排列顺序\"></a>「项目属性」定义项目的排列顺序</h3><hr>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.item</span> &#123;</div><div class=\"line\">        <span class=\"attribute\">order</span>: <span class=\"number\">1</span>;</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure>\n<h3 id=\"数值越小-排列越靠前，默认为0\"><a href=\"#数值越小-排列越靠前，默认为0\" class=\"headerlink\" title=\"[数值越小,排列越靠前，默认为0]\"></a>[<strong>数值越小,排列越靠前，默认为0</strong>]</h3><hr>\n<p><img class=\"br10\" src=\"/2017/08/28/css3-flex/css34.png\"></p>\n<h3 id=\"order-Demo\"><a href=\"#order-Demo\" class=\"headerlink\" title=\"order Demo\"></a>order Demo</h3><hr>\n<p><a href=\"http://www.oxxostudio.tw/demo/201501/css-flexbox-demo8.html\" target=\"_blank\" rel=\"external\">demo</a></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.order1</span>&#123;</div><div class=\"line\">        <span class=\"attribute\">order</span>:<span class=\"number\">1</span>;</div><div class=\"line\">        <span class=\"attribute\">background</span>:<span class=\"number\">#c00</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"selector-class\">.order2</span>&#123;</div><div class=\"line\">        <span class=\"attribute\">order</span>:<span class=\"number\">2</span>;</div><div class=\"line\">        <span class=\"attribute\">background</span>:<span class=\"number\">#069</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"selector-class\">.order3</span>&#123;</div><div class=\"line\">        <span class=\"attribute\">order</span>:<span class=\"number\">3</span>;</div><div class=\"line\">        <span class=\"attribute\">background</span>:<span class=\"number\">#095</span>;</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure>\n<p><a href=\"http://www.oxxostudio.tw/demo/201501/css-flexbox-demo8.html\" target=\"_blank\" rel=\"external\">demo</a></p>\n<h2 id=\"B2-flex-grow\"><a href=\"#B2-flex-grow\" class=\"headerlink\" title=\"(B2) flex-grow\"></a>(B2) flex-grow</h2><h3 id=\"「项目属性」定义项目的放大比例\"><a href=\"#「项目属性」定义项目的放大比例\" class=\"headerlink\" title=\"「项目属性」定义项目的放大比例\"></a>「项目属性」定义项目的放大比例</h3><hr>\n<h4 id=\"默认为0-即如果存在剩余空间，也不瓜分\"><a href=\"#默认为0-即如果存在剩余空间，也不瓜分\" class=\"headerlink\" title=\"[默认为0,即如果存在剩余空间，也不瓜分]\"></a>[<strong>默认为0,即如果存在剩余空间，也不瓜分</strong>]</h4><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">.   <span class=\"selector-tag\">item</span> &#123;</div><div class=\"line\">        <span class=\"attribute\">flex-grow</span>: <span class=\"number\">0</span>; <span class=\"comment\">/* default 0 */</span></div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure>\n<h3 id=\"flex-grow-Demo\"><a href=\"#flex-grow-Demo\" class=\"headerlink\" title=\"flex-grow Demo\"></a>flex-grow Demo</h3><hr>\n<p><div class=\"columns-2\"><br>    <p style=\"font-size: 18px;text-align:left;\">如果所有项目的flex-grow属性都为1，<br>则它们将等分剩余空间（如果有的话）</p><br>    <p style=\"font-size: 18px;text-align:left;\">如果一个项目的flex-grow属性为2，其他项目都为1，则前者占据的剩余空间将比其他项多一倍</p><br></div></p>\n<p><pre><br>    <code class=\"css pl10\"><br>    .item {<br>        flex-grow: 0; /<em> default 0 </em>/<br>    }<br>    </code></pre></p>\n<h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h2><p><a href=\"https://codepen.io/Frank_/pen/EmEPQm?editors=1100\" target=\"_blank\" rel=\"external\">demo</a></p>\n<p>[slide]</p>\n<p>##(B3) flex-basis </p>\n<p>###「项目属性」定义了在分配多余空间之前，项目占据的主轴空间（main size）</p>\n<h3 id=\"浏览器根据这个属性，计算主轴是否有多余空间\"><a href=\"#浏览器根据这个属性，计算主轴是否有多余空间\" class=\"headerlink\" title=\"[浏览器根据这个属性，计算主轴是否有多余空间]\"></a>[<strong>浏览器根据这个属性，计算主轴是否有多余空间</strong>]</h3><hr>\n<h4 id=\"它的默认值为auto，即项目的本来大小\"><a href=\"#它的默认值为auto，即项目的本来大小\" class=\"headerlink\" title=\"[它的默认值为auto，即项目的本来大小]\"></a>[<strong>它的默认值为auto，即项目的本来大小</strong>]</h4><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.item</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">flex-basis</span>: <span class=\"number\">1</span> | auto; <span class=\"comment\">/* default auto */</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"flex-basis-Demo\"><a href=\"#flex-basis-Demo\" class=\"headerlink\" title=\"flex-basis Demo\"></a>flex-basis Demo</h3><hr>\n<h4 id=\"我们通过案例来解释\"><a href=\"#我们通过案例来解释\" class=\"headerlink\" title=\"[我们通过案例来解释]\"></a>[<strong>我们通过案例来解释</strong>]</h4><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.item</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">flex-basis</span>: <span class=\"number\">1</span> | auto; <span class=\"comment\">/* default auto */</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<hr>\n<p><a href=\"https://codepen.io/Frank_/pen/VbXjxm?editors=1100\" target=\"_blank\" rel=\"external\">demo</a></p>\n<blockquote>\n<p>上面讲的<span class=\"green\">flex-grow</span>、<span class=\"green\">flex-basis</span>都是剩余空间的分配。但是，你有没有想过还有没有其他的情况呢？可以发现，上面讲的例子item1 item2 item3的宽度总和都是<code>没有超过</code>父容器的宽度的。 那如果三个子容器的<code>宽度和超过</code>父容器的宽度呢？那还有剩余空间可以分配吗，此时浏览器又是怎么处理呢？请看下面：</p>\n</blockquote>\n<h2 id=\"B4-flex-shrink\"><a href=\"#B4-flex-shrink\" class=\"headerlink\" title=\"(B4) flex-shrink\"></a>(B4) flex-shrink</h2><h3 id=\"「项目属性」定义了项目的缩小比例，默认为1\"><a href=\"#「项目属性」定义了项目的缩小比例，默认为1\" class=\"headerlink\" title=\"「项目属性」定义了项目的缩小比例，默认为1\"></a>「项目属性」定义了项目的缩小比例，默认为1</h3><hr>\n<h4 id=\"即如果空间不足，该项目将缩小\"><a href=\"#即如果空间不足，该项目将缩小\" class=\"headerlink\" title=\"[即如果空间不足，该项目将缩小]\"></a>[<strong>即如果空间不足，该项目将缩小</strong>]</h4><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.item</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">flex-shrink</span>: <span class=\"number\">1</span>; <span class=\"comment\">/* default 1 */</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"flex-shrink-Demo\"><a href=\"#flex-shrink-Demo\" class=\"headerlink\" title=\"flex-shrink Demo\"></a>flex-shrink Demo</h3><hr>\n<h4 id=\"不太好理解-我们通过案例来解释\"><a href=\"#不太好理解-我们通过案例来解释\" class=\"headerlink\" title=\"[不太好理解 我们通过案例来解释]\"></a>[<strong>不太好理解 我们通过案例来解释</strong>]</h4><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.item</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">flex-grow</span>: <span class=\"number\">1</span>; <span class=\"comment\">/* default 0 */</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<hr>\n<p><a href=\"https://codepen.io/Frank_/pen/LydNrv?editors=1100\" target=\"_blank\" rel=\"external\">demo</a></p>\n<h2 id=\"B5-flex\"><a href=\"#B5-flex\" class=\"headerlink\" title=\"(B5) flex\"></a>(B5) flex</h2><h3 id=\"「项目属性」简写，默认值为-0-1-auto\"><a href=\"#「项目属性」简写，默认值为-0-1-auto\" class=\"headerlink\" title=\"「项目属性」简写，默认值为: 0 1 auto\"></a>「项目属性」简写，默认值为: <strong>0 1 auto</strong></h3><h3 id=\"flex-grow-flex-shrink-和-flex-basis\"><a href=\"#flex-grow-flex-shrink-和-flex-basis\" class=\"headerlink\" title=\"flex-grow,flex-shrink 和 flex-basis\"></a><span class=\"green\">flex-grow</span>,<span class=\"green\">flex-shrink</span> 和 <span class=\"green\">flex-basis</span></h3><h3 id=\"后两个属性可选\"><a href=\"#后两个属性可选\" class=\"headerlink\" title=\"[后两个属性可选]\"></a>[<strong>后两个属性可选</strong>]</h3><hr>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.item</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">flex</span>: none | [ &lt;<span class=\"string\">'flex-grow'</span>&gt; &lt;<span class=\"string\">'flex-shrink'</span>&gt;? || &lt;<span class=\"string\">'flex-basis'</span>&gt; ]</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"该属性有两个快捷值\"><a href=\"#该属性有两个快捷值\" class=\"headerlink\" title=\"该属性有两个快捷值\"></a>该属性有两个快捷值</h3><hr>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.item</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">flex</span>: none | [ &lt;<span class=\"string\">'flex-grow'</span>&gt; &lt;<span class=\"string\">'flex-shrink'</span>&gt;? || &lt;<span class=\"string\">'flex-basis'</span>&gt; ]</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<ul>\n<li><span class=\"yellow\">auto</span> <span class=\"green\">(1 1 auto)</span></li>\n<li><span class=\"yellow\">none</span> <span class=\"green\">(0 0 auto)</span></li>\n</ul>\n<h3 id=\"flex-Demo\"><a href=\"#flex-Demo\" class=\"headerlink\" title=\"flex Demo\"></a>flex Demo</h3><hr>\n<h4 id=\"建议优先使用这个属性-因为浏览器会推算相关值\"><a href=\"#建议优先使用这个属性-因为浏览器会推算相关值\" class=\"headerlink\" title=\"[建议优先使用这个属性,因为浏览器会推算相关值]\"></a>[<strong>建议优先使用这个属性,因为浏览器会推算相关值</strong>]</h4><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.item</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">flex</span>: &lt;<span class=\"string\">'flex-grow'</span>&gt; &lt;<span class=\"string\">'flex-shrink'</span>&gt; &lt;<span class=\"string\">'flex-basis'</span>&gt;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.item1</span>&#123;</div><div class=\"line\">    <span class=\"attribute\">flex</span>:<span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">200px</span>;</div><div class=\"line\">    <span class=\"attribute\">background</span>:<span class=\"number\">#c00</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.item2</span>&#123;</div><div class=\"line\">    <span class=\"attribute\">flex</span>:<span class=\"number\">2</span> <span class=\"number\">1</span> <span class=\"number\">100px</span>;</div><div class=\"line\">    <span class=\"attribute\">background</span>:<span class=\"number\">#069</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><a href=\"http://www.oxxostudio.tw/demo/201501/css-flexbox-demo9.html\" target=\"_blank\" rel=\"external\">demo</a></p>\n<h2 id=\"B6-align-self\"><a href=\"#B6-align-self\" class=\"headerlink\" title=\"(B6) align-self\"></a>(B6) align-self</h2><h3 id=\"「项目属性」允许单个项目有与其他项目不一样的对齐方式\"><a href=\"#「项目属性」允许单个项目有与其他项目不一样的对齐方式\" class=\"headerlink\" title=\"「项目属性」允许单个项目有与其他项目不一样的对齐方式\"></a>「项目属性」允许单个项目有与其他项目不一样的对齐方式</h3><h3 id=\"可覆盖align-items属性\"><a href=\"#可覆盖align-items属性\" class=\"headerlink\" title=\"[可覆盖align-items属性]\"></a>[<strong>可覆盖align-items属性</strong>]</h3><hr>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">默认值为 auto, 表示继承父元素的align-items属性</div><div class=\"line\"></div><div class=\"line\">如果没有父元素，则等同于stretch</div></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.item</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">align-self</span>: auto | flex-start | flex-end | center | baseline | stretch;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"可取6个值，除了auto，其他都与align-items属性完全一致\"><a href=\"#可取6个值，除了auto，其他都与align-items属性完全一致\" class=\"headerlink\" title=\"可取6个值，除了auto，其他都与align-items属性完全一致\"></a><span class=\"text-danger\">可取6个值，除了auto，其他都与align-items属性完全一致</span></h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.item</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">align-self</span>: auto | flex-start | flex-end | center | baseline | stretch;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>[slide]<br><img class=\"br10\" src=\"/2017/08/28/css3-flex/css46.png\"></p>\n<h3 id=\"align-self-Demo\"><a href=\"#align-self-Demo\" class=\"headerlink\" title=\"align-self Demo\"></a>align-self Demo</h3><hr>\n<h4 id=\"建议优先使用这个属性-因为浏览器会推算相关值-1\"><a href=\"#建议优先使用这个属性-因为浏览器会推算相关值-1\" class=\"headerlink\" title=\"[建议优先使用这个属性,因为浏览器会推算相关值]\"></a>[<strong>建议优先使用这个属性,因为浏览器会推算相关值</strong>]</h4><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.item2</span>&#123;</div><div class=\"line\">    <span class=\"attribute\">align-self</span>:baseline;</div><div class=\"line\">    <span class=\"attribute\">line-height</span>: <span class=\"number\">30px</span>;</div><div class=\"line\">    <span class=\"attribute\">background</span>:<span class=\"number\">#095</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><a href=\"http://www.oxxostudio.tw/demo/201501/css-flexbox-demo5.html\" target=\"_blank\" rel=\"external\">demo</a></p>\n<blockquote>\n<p>容器的属性 &#91;6个&#93;</p>\n</blockquote>\n<ul>\n<li>flex-direction</li>\n<li>flex-wrap</li>\n<li>flex-flow</li>\n<li>justify-content</li>\n<li>align-items</li>\n<li>align-content</li>\n</ul>\n<blockquote>\n<p>项目的属性 &#91;6个&#93; </p>\n</blockquote>\n<ul>\n<li>order</li>\n<li>flex-grow</li>\n<li>flex-basis</li>\n<li>flex-shrink</li>\n<li>flex</li>\n<li>align-self</li>\n</ul>\n<p><br></p>\n<h4 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h4><ul>\n<li><a href=\"http://www.oxxostudio.tw/articles/201501/css-flexbox.html\" target=\"_blank\" rel=\"external\">http://www.oxxostudio.tw/articles/201501/css-flexbox.html</a></li>\n<li><a href=\"http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html\" target=\"_blank\" rel=\"external\">http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html</a></li>\n<li><a href=\"https://css-tricks.com/snippets/css/a-guide-to-flexbox/\" target=\"_blank\" rel=\"external\">https://css-tricks.com/snippets/css/a-guide-to-flexbox/</a></li>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/CSS_Flexible_Box_Layout/Using_CSS_flexible_boxes\" target=\"_blank\" rel=\"external\">https://developer.mozilla.org/zh-CN/docs/Web/CSS/CSS_Flexible_Box_Layout/Using_CSS_flexible_boxes</a></li>\n</ul>\n<p><br></p>\n<blockquote>\n<p>声明:本资料仅供学习交流，严禁使用于任何商业用途! 相关资料参考自<a href=\"https://developer.mozilla.org/en/\" target=\"_blank\" rel=\"external\">mdn</a>等开发者网站或技术大牛<a href=\"http://www.ruanyifeng.com/blog/\" target=\"_blank\" rel=\"external\">阮一峰</a>、<a href=\"http://www.oxxostudio.tw/articles/201405/about-me.html\" target=\"_blank\" rel=\"external\">oxxo</a>等博客内容。 如需转载，转载请注明出处。</p>\n</blockquote>\n<p><br></p>\n<h3 id=\"完\"><a href=\"#完\" class=\"headerlink\" title=\"完.\"></a>完.</h3>","site":{"data":{}},"excerpt":"","more":"<p>布局的传统解决方案，基于盒状模型，依赖 display属性 + position属性 + float属性。它对于那些特殊布局非常不方便，比如，<a href=\"https://css-tricks.com/centering-css-complete-guide/\" target=\"_blank\" rel=\"external\">垂直居中</a>就不容易实现。</p>\n<h2 id=\"W3C提出的一种新的方案\"><a href=\"#W3C提出的一种新的方案\" class=\"headerlink\" title=\"W3C提出的一种新的方案\"></a>W3C提出的一种新的方案</h2><h3 id=\"Flex布局，可以简便、完整、响应式地实现各种页面布局。\"><a href=\"#Flex布局，可以简便、完整、响应式地实现各种页面布局。\" class=\"headerlink\" title=\"Flex布局，可以简便、完整、响应式地实现各种页面布局。\"></a>Flex布局，可以简便、完整、响应式地实现各种页面布局。</h3><p><img src=\"/2017/08/28/css3-flex/c01.png\"></p>\n<h2 id=\"浏览器支持\"><a href=\"#浏览器支持\" class=\"headerlink\" title=\"浏览器支持\"></a>浏览器支持</h2><p><img class=\"br10\" src=\"/28/css3-flex/c101.jpg\"></p>\n<h1 id=\"Flex\"><a href=\"#Flex\" class=\"headerlink\" title=\"Flex\"></a>Flex</h1><p>Flexible Box的缩写，意为”弹性布局”，<br>用来为盒状模型提供最大的灵活性。</p>\n<p><strong>任何一个容器都可以指定为Flex布局。</strong></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.box</span>&#123;</div><div class=\"line\">    <span class=\"attribute\">display</span>: flex;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"「inline-flex」-与-inline-block\"><a href=\"#「inline-flex」-与-inline-block\" class=\"headerlink\" title=\"「inline-flex」 与 inline-block\"></a>「inline-flex」 与 inline-block</h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.flex</span>,</div><div class=\"line\">    <span class=\"selector-class\">.inline-flex</span>&#123;</div><div class=\"line\">        <span class=\"attribute\">width</span>:<span class=\"number\">100px</span>;</div><div class=\"line\">        <span class=\"attribute\">height</span>:<span class=\"number\">50px</span>;</div><div class=\"line\">        <span class=\"attribute\">border</span>:<span class=\"number\">1px</span> solid <span class=\"number\">#000</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"selector-class\">.flex</span>&#123;</div><div class=\"line\">        <span class=\"attribute\">display</span>:flex;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"selector-class\">.inline-flex</span>&#123;</div><div class=\"line\">        <span class=\"attribute\">display</span>:inline-flex;</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure>\n<p><a href=\"http://www.oxxostudio.tw/demo/201501/css-flexbox-demo1.html\" target=\"_blank\" rel=\"external\">demo</a></p>\n<h3 id=\"Webkit内核的浏览器，必须加上-webkit前缀。\"><a href=\"#Webkit内核的浏览器，必须加上-webkit前缀。\" class=\"headerlink\" title=\"Webkit内核的浏览器，必须加上-webkit前缀。\"></a>Webkit内核的浏览器，必须加上<code>-webkit</code>前缀。</h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.box</span>&#123;</div><div class=\"line\">    <span class=\"attribute\">display</span>: -webkit-flex; <span class=\"comment\">/* Safari */</span></div><div class=\"line\">    <span class=\"attribute\">display</span>: flex;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<blockquote>\n<p> 注意，设为Flex布局以后，子元素的float、clear和vertical-align属性将失效。</p>\n</blockquote>\n<ul>\n<li>采用Flex布局的元素，称为Flex容器，简称”容器”</li>\n<li>它的所有子元素自动成为容器成员，称为Flex项目，简称”项目”</li>\n</ul>\n<hr>\n<p><img class=\"br10\" src=\"/2017/08/28/css3-flex/css09.png\"></p>\n<blockquote>\n<p>flex布局发生在<code>父容器</code>和<code>子容器</code>之间。父容器需要有flex的环境(display:flex;)，子容器才能根据自身的属性来布局，简单的说，就是瓜分父容器的空间。相反就是说如果父容器没有flex的环境，那么子容器就无法使用flex的规则来划分父容器的空间。</p>\n</blockquote>\n<ul>\n<li>水平的主轴main axis和垂直的交叉轴（cross axis）</li>\n<li>主轴的开始位置（与边框的交叉点）叫做main start，结束位置叫做main end</li>\n<li>交叉轴的开始位置叫做cross start，结束位置叫做cross end</li>\n<li>项目默认沿主轴排列</li>\n<li>单个项目占据的主轴空间叫做main size，占据的交叉轴空间叫做cross size</li>\n</ul>\n<hr>\n<h2 id=\"容器的属性-91-6个-93\"><a href=\"#容器的属性-91-6个-93\" class=\"headerlink\" title=\"容器的属性 &#91;6个&#93;\"></a>容器的属性 &#91;<strong>6个</strong>&#93;</h2><hr>\n<ul>\n<li><span class=\"green\">flex-direction</span></li>\n<li><span class=\"green\">flex-wrap</span></li>\n<li><span class=\"green3\">flex-flow</span></li>\n<li><span class=\"blue\">justify-content</span></li>\n<li><span class=\"blue\">align-items</span></li>\n<li><span class=\"yellow\">align-content</span></li>\n</ul>\n<h2 id=\"A1-flex-direction\"><a href=\"#A1-flex-direction\" class=\"headerlink\" title=\"(A1) flex-direction\"></a>(A1) flex-direction</h2><h3 id=\"「容器属性」决定主轴的方向（即项目的排列方向）\"><a href=\"#「容器属性」决定主轴的方向（即项目的排列方向）\" class=\"headerlink\" title=\"「容器属性」决定主轴的方向（即项目的排列方向）\"></a>「容器属性」决定主轴的方向（即项目的排列方向）</h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.box</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">flex-direction</span>: row | row-reverse | column | column-reverse;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<ul>\n<li>row（默认值）：主轴为水平方向，起点在左端。</li>\n<li>row-reverse：主轴为水平方向，起点在右端。</li>\n<li>column：主轴为垂直方向，起点在上沿。</li>\n<li>column-reverse：主轴为垂直方向，起点在下沿。</li>\n</ul>\n<hr>\n<p><img class=\"br10\" src=\"/2017/08/28/css3-flex/css12.png\"></p>\n<h3 id=\"Flex-direction-Demo\"><a href=\"#Flex-direction-Demo\" class=\"headerlink\" title=\"Flex-direction Demo\"></a>Flex-direction Demo</h3><hr>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.box</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">flex-direction</span>: row | row-reverse | column | column-reverse;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><a href=\"http://www.oxxostudio.tw/demo/201501/css-flexbox-demo2.html\" target=\"_blank\" rel=\"external\">demo</a></p>\n<h2 id=\"A2-flex-wrap\"><a href=\"#A2-flex-wrap\" class=\"headerlink\" title=\"(A2) flex-wrap\"></a>(A2) flex-wrap</h2><p>###「容器属性」定义如果一条轴线排不下，如何换行 </p>\n<p>[默认情况下，项目都排在一条轴线上]</p>\n<p>可取<strong>3</strong>个值</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.box</span>&#123;</div><div class=\"line\">    <span class=\"attribute\">flex-wrap</span>: nowrap | wrap | wrap-reverse;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><img class=\"br10\" src=\"/2017/08/28/css3-flex/c03.png\"></p>\n<h3 id=\"（1）nowrap（默认）：不换行\"><a href=\"#（1）nowrap（默认）：不换行\" class=\"headerlink\" title=\"（1）nowrap（默认）：不换行\"></a>（1）nowrap（默认）：不换行</h3><hr>\n<p><img class=\"br10\" src=\"/2017/08/28/css3-flex/c04.png\"></p>\n<h3 id=\"2）wrap：换行，第一行在上方\"><a href=\"#2）wrap：换行，第一行在上方\" class=\"headerlink\" title=\"(2）wrap：换行，第一行在上方\"></a>(2）wrap：换行，第一行在上方</h3><hr>\n<p><img class=\"br10\" src=\"/2017/08/28/css3-flex/c05.jpg\"></p>\n<h3 id=\"3-wrap-reverse：换行，第一行在下方\"><a href=\"#3-wrap-reverse：换行，第一行在下方\" class=\"headerlink\" title=\"(3) wrap-reverse：换行，第一行在下方\"></a>(3) wrap-reverse：换行，第一行在下方</h3><hr>\n<p><img class=\"br10\" src=\"/2017/08/28/css3-flex/c06.jpg\"></p>\n<p><a href=\"http://www.oxxostudio.tw/demo/201501/css-flexbox-demo7.html\" target=\"_blank\" rel=\"external\">demo</a>  </p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.nowrap</span>&#123;</div><div class=\"line\">    <span class=\"attribute\">flex-wrap</span>:nowrap;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.wrap</span>&#123;</div><div class=\"line\">    <span class=\"attribute\">flex-wrap</span>:wrap;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.wrap-reverse</span>&#123;</div><div class=\"line\">    <span class=\"attribute\">flex-wrap</span>:wrap-reverse;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"A3-flex-flow\"><a href=\"#A3-flex-flow\" class=\"headerlink\" title=\"(A3) flex-flow\"></a>(A3) flex-flow</h2><h3 id=\"「容器属性」是flex-direction和flex-wrap的简写形式\"><a href=\"#「容器属性」是flex-direction和flex-wrap的简写形式\" class=\"headerlink\" title=\"「容器属性」是flex-direction和flex-wrap的简写形式\"></a>「容器属性」是flex-direction和flex-wrap的简写形式</h3><p>[默认值为<strong>row</strong> <strong>nowrap</strong>]</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.box</span>&#123;</div><div class=\"line\">    <span class=\"attribute\">flex-flow</span>: flex-direction || flex-wrap;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"A4-justify-content\"><a href=\"#A4-justify-content\" class=\"headerlink\" title=\"(A4) justify-content\"></a>(A4) justify-content</h2><h3 id=\"「容器属性」定义了项目在主轴上的对齐方式\"><a href=\"#「容器属性」定义了项目在主轴上的对齐方式\" class=\"headerlink\" title=\"「容器属性」定义了项目在主轴上的对齐方式\"></a>「容器属性」定义了项目在主轴上的对齐方式</h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.box</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">justify-content</span>: flex-start | flex-end | center | space-between | space-around;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"它可能取5个值，具体对齐方式与轴的方向有关\"><a href=\"#它可能取5个值，具体对齐方式与轴的方向有关\" class=\"headerlink\" title=\"它可能取5个值，具体对齐方式与轴的方向有关\"></a>它可能取<strong>5</strong>个值，具体对齐方式与<strong>轴的方向</strong>有关</h2><hr>\n<ul>\n<li>flex-start（默认值）：左对齐</li>\n<li>flex-end：右对齐</li>\n<li>center： 居中</li>\n<li>space-between：两端对齐，项目之间的间隔都相等</li>\n<li>space-around：每个项目两侧的间隔相等，所以项目之间的间隔比项目与边框的间隔大一倍</li>\n</ul>\n<h2 id=\"下面假设主轴从左到右\"><a href=\"#下面假设主轴从左到右\" class=\"headerlink\" title=\"[下面假设主轴从左到右]\"></a>[下面假设主轴<strong>从左到右</strong>]</h2><p><img class=\"br10\" src=\"/2017/08/28/css3-flex/c07.png\"></p>\n<p><a href=\"http://www.oxxostudio.tw/demo/201501/css-flexbox-demo3.html\" target=\"_blank\" rel=\"external\">demo</a>  </p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.flex-start</span>&#123;</div><div class=\"line\">    <span class=\"attribute\">justify-content</span>:flex-start;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.flex-end</span>&#123;</div><div class=\"line\">    <span class=\"attribute\">justify-content</span>:flex-end;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.center</span>&#123;</div><div class=\"line\">    <span class=\"attribute\">justify-content</span>:center;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.space-between</span>&#123;</div><div class=\"line\">    <span class=\"attribute\">justify-content</span>:space-between;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.space-around</span>&#123;</div><div class=\"line\">    <span class=\"attribute\">justify-content</span>:space-around;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><a href=\"http://www.oxxostudio.tw/demo/201501/css-flexbox-demo3.html\" target=\"_blank\" rel=\"external\">demo</a></p>\n<h2 id=\"A5-align-items\"><a href=\"#A5-align-items\" class=\"headerlink\" title=\"(A5) align-items\"></a>(A5) align-items</h2><h3 id=\"「容器属性」定义项目在交叉轴上如何对齐\"><a href=\"#「容器属性」定义项目在交叉轴上如何对齐\" class=\"headerlink\" title=\"「容器属性」定义项目在交叉轴上如何对齐\"></a>「容器属性」定义项目在交叉轴上如何对齐</h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.box</span> &#123;</div><div class=\"line\">        <span class=\"attribute\">align-items</span>: flex-start | flex-end | center | baseline | stretch;</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure>\n<h2 id=\"它可能取5个值，具体对齐方式与交叉轴有关\"><a href=\"#它可能取5个值，具体对齐方式与交叉轴有关\" class=\"headerlink\" title=\"它可能取5个值，具体对齐方式与交叉轴有关\"></a>它可能取<strong>5</strong>个值，具体对齐方式与<strong>交叉轴</strong>有关</h2><hr>\n<ul>\n<li>flex-start：交叉轴的起点对齐</li>\n<li>flex-end：交叉轴的终点对齐</li>\n<li>center：交叉轴的中点对齐</li>\n<li>baseline: 项目的第一行文字的基线对齐</li>\n<li>stretch（默认值）：如果项目未设置高度或设为auto，将占满整个容器的高度</li>\n</ul>\n<h2 id=\"下面假设交叉轴从上到下\"><a href=\"#下面假设交叉轴从上到下\" class=\"headerlink\" title=\"[下面假设交叉轴从上到下]\"></a>[下面假设交叉轴<strong>从上到下</strong>]</h2><p><img class=\"br10\" src=\"/2017/08/28/css3-flex/c08.png\"></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.box</span> &#123;</div><div class=\"line\">        <span class=\"attribute\">align-items</span>: flex-start | flex-end | center | stretch | baseline;</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure>\n<p>\b<br><a href=\"http://www.oxxostudio.tw/demo/201501/css-flexbox-demo4.html\" target=\"_blank\" rel=\"external\">demo</a>  </p>\n<h2 id=\"A6-align-content\"><a href=\"#A6-align-content\" class=\"headerlink\" title=\"(A6) align-content\"></a>(A6) align-content</h2><h3 id=\"「容器属性」定义了多根轴线的对齐方式\"><a href=\"#「容器属性」定义了多根轴线的对齐方式\" class=\"headerlink\" title=\"「容器属性」定义了多根轴线的对齐方式\"></a>「容器属性」定义了多根轴线的对齐方式</h3><hr>\n<h5 id=\"如果项目只有一根轴线，该属性不起作用\"><a href=\"#如果项目只有一根轴线，该属性不起作用\" class=\"headerlink\" title=\"[如果项目只有一根轴线，该属性不起作用]\"></a><strong>[如果项目只有一根轴线，该属性不起作用]</strong></h5><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.box</span> &#123;</div><div class=\"line\">       <span class=\"attribute\">align-content</span>: flex-start | flex-end | center | space-between | space-around | stretch;</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure>\n<h2 id=\"它可能取6个值\"><a href=\"#它可能取6个值\" class=\"headerlink\" title=\"它可能取6个值\"></a>它可能取<strong>6</strong>个值</h2><ul>\n<li>flex-start：与交叉轴的起点对齐</li>\n<li>flex-end：与交叉轴的终点对齐</li>\n<li>center：与交叉轴的中点对齐</li>\n<li>space-between：与交叉轴两端对齐，轴线之间的间隔平均分布</li>\n<li>space-around：每根轴线两侧的间隔都相等,所以轴线之间的间隔比轴线与边框的间隔大一倍</li>\n<li>stretch（默认值）：轴线占满整个交叉轴</li>\n</ul>\n<h3 id=\"如果项目只有一根轴线，该属性不起作用-1\"><a href=\"#如果项目只有一根轴线，该属性不起作用-1\" class=\"headerlink\" title=\"如果项目只有一根轴线，该属性不起作用\"></a><span class=\"text-danger\">如果项目只有一根轴线，该属性不起作用</span></h3><hr>\n<p><img class=\"br10\" src=\"/2017/08/28/css3-flex/c09.png\"></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.box</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">align-content</span>: flex-start | flex-end | center | space-between | space-around | stretch;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><a href=\"http://www.oxxostudio.tw/demo/201501/css-flexbox-demo6.html\" target=\"_blank\" rel=\"external\">demo</a>  </p>\n<p>##项目的属性 &#91;<strong>6个</strong>&#93;</p>\n<hr>\n<ul>\n<li><span class=\"blue\">order</span></li>\n<li><span class=\"green2\">flex-grow</span></li>\n<li><span class=\"green2\">flex-basis</span></li>\n<li><span class=\"green2\">flex-shrink</span></li>\n<li><span class=\"text-success\">flex</span></li>\n<li><span class=\"yellow\">align-self</span></li>\n</ul>\n<h2 id=\"B1-order\"><a href=\"#B1-order\" class=\"headerlink\" title=\"(B1) order\"></a>(B1) order</h2><h3 id=\"「项目属性」定义项目的排列顺序\"><a href=\"#「项目属性」定义项目的排列顺序\" class=\"headerlink\" title=\"「项目属性」定义项目的排列顺序\"></a>「项目属性」定义项目的排列顺序</h3><hr>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.item</span> &#123;</div><div class=\"line\">        <span class=\"attribute\">order</span>: <span class=\"number\">1</span>;</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure>\n<h3 id=\"数值越小-排列越靠前，默认为0\"><a href=\"#数值越小-排列越靠前，默认为0\" class=\"headerlink\" title=\"[数值越小,排列越靠前，默认为0]\"></a>[<strong>数值越小,排列越靠前，默认为0</strong>]</h3><hr>\n<p><img class=\"br10\" src=\"/2017/08/28/css3-flex/css34.png\"></p>\n<h3 id=\"order-Demo\"><a href=\"#order-Demo\" class=\"headerlink\" title=\"order Demo\"></a>order Demo</h3><hr>\n<p><a href=\"http://www.oxxostudio.tw/demo/201501/css-flexbox-demo8.html\" target=\"_blank\" rel=\"external\">demo</a></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.order1</span>&#123;</div><div class=\"line\">        <span class=\"attribute\">order</span>:<span class=\"number\">1</span>;</div><div class=\"line\">        <span class=\"attribute\">background</span>:<span class=\"number\">#c00</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"selector-class\">.order2</span>&#123;</div><div class=\"line\">        <span class=\"attribute\">order</span>:<span class=\"number\">2</span>;</div><div class=\"line\">        <span class=\"attribute\">background</span>:<span class=\"number\">#069</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"selector-class\">.order3</span>&#123;</div><div class=\"line\">        <span class=\"attribute\">order</span>:<span class=\"number\">3</span>;</div><div class=\"line\">        <span class=\"attribute\">background</span>:<span class=\"number\">#095</span>;</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure>\n<p><a href=\"http://www.oxxostudio.tw/demo/201501/css-flexbox-demo8.html\" target=\"_blank\" rel=\"external\">demo</a></p>\n<h2 id=\"B2-flex-grow\"><a href=\"#B2-flex-grow\" class=\"headerlink\" title=\"(B2) flex-grow\"></a>(B2) flex-grow</h2><h3 id=\"「项目属性」定义项目的放大比例\"><a href=\"#「项目属性」定义项目的放大比例\" class=\"headerlink\" title=\"「项目属性」定义项目的放大比例\"></a>「项目属性」定义项目的放大比例</h3><hr>\n<h4 id=\"默认为0-即如果存在剩余空间，也不瓜分\"><a href=\"#默认为0-即如果存在剩余空间，也不瓜分\" class=\"headerlink\" title=\"[默认为0,即如果存在剩余空间，也不瓜分]\"></a>[<strong>默认为0,即如果存在剩余空间，也不瓜分</strong>]</h4><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">.   <span class=\"selector-tag\">item</span> &#123;</div><div class=\"line\">        <span class=\"attribute\">flex-grow</span>: <span class=\"number\">0</span>; <span class=\"comment\">/* default 0 */</span></div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure>\n<h3 id=\"flex-grow-Demo\"><a href=\"#flex-grow-Demo\" class=\"headerlink\" title=\"flex-grow Demo\"></a>flex-grow Demo</h3><hr>\n<p><div class=\"columns-2\"><br>    <p style=\"font-size: 18px;text-align:left;\">如果所有项目的flex-grow属性都为1，<br>则它们将等分剩余空间（如果有的话）</p><br>    <p style=\"font-size: 18px;text-align:left;\">如果一个项目的flex-grow属性为2，其他项目都为1，则前者占据的剩余空间将比其他项多一倍</p><br></div></p>\n<p><pre><br>    <code class=\"css pl10\"><br>    .item {<br>        flex-grow: 0; /<em> default 0 </em>/<br>    }<br>    </code></pre></p>\n<h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h2><p><a href=\"https://codepen.io/Frank_/pen/EmEPQm?editors=1100\" target=\"_blank\" rel=\"external\">demo</a></p>\n<p>[slide]</p>\n<p>##(B3) flex-basis </p>\n<p>###「项目属性」定义了在分配多余空间之前，项目占据的主轴空间（main size）</p>\n<h3 id=\"浏览器根据这个属性，计算主轴是否有多余空间\"><a href=\"#浏览器根据这个属性，计算主轴是否有多余空间\" class=\"headerlink\" title=\"[浏览器根据这个属性，计算主轴是否有多余空间]\"></a>[<strong>浏览器根据这个属性，计算主轴是否有多余空间</strong>]</h3><hr>\n<h4 id=\"它的默认值为auto，即项目的本来大小\"><a href=\"#它的默认值为auto，即项目的本来大小\" class=\"headerlink\" title=\"[它的默认值为auto，即项目的本来大小]\"></a>[<strong>它的默认值为auto，即项目的本来大小</strong>]</h4><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.item</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">flex-basis</span>: <span class=\"number\">1</span> | auto; <span class=\"comment\">/* default auto */</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"flex-basis-Demo\"><a href=\"#flex-basis-Demo\" class=\"headerlink\" title=\"flex-basis Demo\"></a>flex-basis Demo</h3><hr>\n<h4 id=\"我们通过案例来解释\"><a href=\"#我们通过案例来解释\" class=\"headerlink\" title=\"[我们通过案例来解释]\"></a>[<strong>我们通过案例来解释</strong>]</h4><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.item</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">flex-basis</span>: <span class=\"number\">1</span> | auto; <span class=\"comment\">/* default auto */</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<hr>\n<p><a href=\"https://codepen.io/Frank_/pen/VbXjxm?editors=1100\" target=\"_blank\" rel=\"external\">demo</a></p>\n<blockquote>\n<p>上面讲的<span class=\"green\">flex-grow</span>、<span class=\"green\">flex-basis</span>都是剩余空间的分配。但是，你有没有想过还有没有其他的情况呢？可以发现，上面讲的例子item1 item2 item3的宽度总和都是<code>没有超过</code>父容器的宽度的。 那如果三个子容器的<code>宽度和超过</code>父容器的宽度呢？那还有剩余空间可以分配吗，此时浏览器又是怎么处理呢？请看下面：</p>\n</blockquote>\n<h2 id=\"B4-flex-shrink\"><a href=\"#B4-flex-shrink\" class=\"headerlink\" title=\"(B4) flex-shrink\"></a>(B4) flex-shrink</h2><h3 id=\"「项目属性」定义了项目的缩小比例，默认为1\"><a href=\"#「项目属性」定义了项目的缩小比例，默认为1\" class=\"headerlink\" title=\"「项目属性」定义了项目的缩小比例，默认为1\"></a>「项目属性」定义了项目的缩小比例，默认为1</h3><hr>\n<h4 id=\"即如果空间不足，该项目将缩小\"><a href=\"#即如果空间不足，该项目将缩小\" class=\"headerlink\" title=\"[即如果空间不足，该项目将缩小]\"></a>[<strong>即如果空间不足，该项目将缩小</strong>]</h4><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.item</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">flex-shrink</span>: <span class=\"number\">1</span>; <span class=\"comment\">/* default 1 */</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"flex-shrink-Demo\"><a href=\"#flex-shrink-Demo\" class=\"headerlink\" title=\"flex-shrink Demo\"></a>flex-shrink Demo</h3><hr>\n<h4 id=\"不太好理解-我们通过案例来解释\"><a href=\"#不太好理解-我们通过案例来解释\" class=\"headerlink\" title=\"[不太好理解 我们通过案例来解释]\"></a>[<strong>不太好理解 我们通过案例来解释</strong>]</h4><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.item</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">flex-grow</span>: <span class=\"number\">1</span>; <span class=\"comment\">/* default 0 */</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<hr>\n<p><a href=\"https://codepen.io/Frank_/pen/LydNrv?editors=1100\" target=\"_blank\" rel=\"external\">demo</a></p>\n<h2 id=\"B5-flex\"><a href=\"#B5-flex\" class=\"headerlink\" title=\"(B5) flex\"></a>(B5) flex</h2><h3 id=\"「项目属性」简写，默认值为-0-1-auto\"><a href=\"#「项目属性」简写，默认值为-0-1-auto\" class=\"headerlink\" title=\"「项目属性」简写，默认值为: 0 1 auto\"></a>「项目属性」简写，默认值为: <strong>0 1 auto</strong></h3><h3 id=\"flex-grow-flex-shrink-和-flex-basis\"><a href=\"#flex-grow-flex-shrink-和-flex-basis\" class=\"headerlink\" title=\"flex-grow,flex-shrink 和 flex-basis\"></a><span class=\"green\">flex-grow</span>,<span class=\"green\">flex-shrink</span> 和 <span class=\"green\">flex-basis</span></h3><h3 id=\"后两个属性可选\"><a href=\"#后两个属性可选\" class=\"headerlink\" title=\"[后两个属性可选]\"></a>[<strong>后两个属性可选</strong>]</h3><hr>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.item</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">flex</span>: none | [ &lt;<span class=\"string\">'flex-grow'</span>&gt; &lt;<span class=\"string\">'flex-shrink'</span>&gt;? || &lt;<span class=\"string\">'flex-basis'</span>&gt; ]</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"该属性有两个快捷值\"><a href=\"#该属性有两个快捷值\" class=\"headerlink\" title=\"该属性有两个快捷值\"></a>该属性有两个快捷值</h3><hr>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.item</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">flex</span>: none | [ &lt;<span class=\"string\">'flex-grow'</span>&gt; &lt;<span class=\"string\">'flex-shrink'</span>&gt;? || &lt;<span class=\"string\">'flex-basis'</span>&gt; ]</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<ul>\n<li><span class=\"yellow\">auto</span> <span class=\"green\">(1 1 auto)</span></li>\n<li><span class=\"yellow\">none</span> <span class=\"green\">(0 0 auto)</span></li>\n</ul>\n<h3 id=\"flex-Demo\"><a href=\"#flex-Demo\" class=\"headerlink\" title=\"flex Demo\"></a>flex Demo</h3><hr>\n<h4 id=\"建议优先使用这个属性-因为浏览器会推算相关值\"><a href=\"#建议优先使用这个属性-因为浏览器会推算相关值\" class=\"headerlink\" title=\"[建议优先使用这个属性,因为浏览器会推算相关值]\"></a>[<strong>建议优先使用这个属性,因为浏览器会推算相关值</strong>]</h4><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.item</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">flex</span>: &lt;<span class=\"string\">'flex-grow'</span>&gt; &lt;<span class=\"string\">'flex-shrink'</span>&gt; &lt;<span class=\"string\">'flex-basis'</span>&gt;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.item1</span>&#123;</div><div class=\"line\">    <span class=\"attribute\">flex</span>:<span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">200px</span>;</div><div class=\"line\">    <span class=\"attribute\">background</span>:<span class=\"number\">#c00</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.item2</span>&#123;</div><div class=\"line\">    <span class=\"attribute\">flex</span>:<span class=\"number\">2</span> <span class=\"number\">1</span> <span class=\"number\">100px</span>;</div><div class=\"line\">    <span class=\"attribute\">background</span>:<span class=\"number\">#069</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><a href=\"http://www.oxxostudio.tw/demo/201501/css-flexbox-demo9.html\" target=\"_blank\" rel=\"external\">demo</a></p>\n<h2 id=\"B6-align-self\"><a href=\"#B6-align-self\" class=\"headerlink\" title=\"(B6) align-self\"></a>(B6) align-self</h2><h3 id=\"「项目属性」允许单个项目有与其他项目不一样的对齐方式\"><a href=\"#「项目属性」允许单个项目有与其他项目不一样的对齐方式\" class=\"headerlink\" title=\"「项目属性」允许单个项目有与其他项目不一样的对齐方式\"></a>「项目属性」允许单个项目有与其他项目不一样的对齐方式</h3><h3 id=\"可覆盖align-items属性\"><a href=\"#可覆盖align-items属性\" class=\"headerlink\" title=\"[可覆盖align-items属性]\"></a>[<strong>可覆盖align-items属性</strong>]</h3><hr>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">默认值为 auto, 表示继承父元素的align-items属性</div><div class=\"line\"></div><div class=\"line\">如果没有父元素，则等同于stretch</div></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.item</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">align-self</span>: auto | flex-start | flex-end | center | baseline | stretch;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"可取6个值，除了auto，其他都与align-items属性完全一致\"><a href=\"#可取6个值，除了auto，其他都与align-items属性完全一致\" class=\"headerlink\" title=\"可取6个值，除了auto，其他都与align-items属性完全一致\"></a><span class=\"text-danger\">可取6个值，除了auto，其他都与align-items属性完全一致</span></h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.item</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">align-self</span>: auto | flex-start | flex-end | center | baseline | stretch;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>[slide]<br><img class=\"br10\" src=\"/2017/08/28/css3-flex/css46.png\"></p>\n<h3 id=\"align-self-Demo\"><a href=\"#align-self-Demo\" class=\"headerlink\" title=\"align-self Demo\"></a>align-self Demo</h3><hr>\n<h4 id=\"建议优先使用这个属性-因为浏览器会推算相关值-1\"><a href=\"#建议优先使用这个属性-因为浏览器会推算相关值-1\" class=\"headerlink\" title=\"[建议优先使用这个属性,因为浏览器会推算相关值]\"></a>[<strong>建议优先使用这个属性,因为浏览器会推算相关值</strong>]</h4><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.item2</span>&#123;</div><div class=\"line\">    <span class=\"attribute\">align-self</span>:baseline;</div><div class=\"line\">    <span class=\"attribute\">line-height</span>: <span class=\"number\">30px</span>;</div><div class=\"line\">    <span class=\"attribute\">background</span>:<span class=\"number\">#095</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><a href=\"http://www.oxxostudio.tw/demo/201501/css-flexbox-demo5.html\" target=\"_blank\" rel=\"external\">demo</a></p>\n<blockquote>\n<p>容器的属性 &#91;6个&#93;</p>\n</blockquote>\n<ul>\n<li>flex-direction</li>\n<li>flex-wrap</li>\n<li>flex-flow</li>\n<li>justify-content</li>\n<li>align-items</li>\n<li>align-content</li>\n</ul>\n<blockquote>\n<p>项目的属性 &#91;6个&#93; </p>\n</blockquote>\n<ul>\n<li>order</li>\n<li>flex-grow</li>\n<li>flex-basis</li>\n<li>flex-shrink</li>\n<li>flex</li>\n<li>align-self</li>\n</ul>\n<p><br></p>\n<h4 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h4><ul>\n<li><a href=\"http://www.oxxostudio.tw/articles/201501/css-flexbox.html\" target=\"_blank\" rel=\"external\">http://www.oxxostudio.tw/articles/201501/css-flexbox.html</a></li>\n<li><a href=\"http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html\" target=\"_blank\" rel=\"external\">http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html</a></li>\n<li><a href=\"https://css-tricks.com/snippets/css/a-guide-to-flexbox/\" target=\"_blank\" rel=\"external\">https://css-tricks.com/snippets/css/a-guide-to-flexbox/</a></li>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/CSS_Flexible_Box_Layout/Using_CSS_flexible_boxes\" target=\"_blank\" rel=\"external\">https://developer.mozilla.org/zh-CN/docs/Web/CSS/CSS_Flexible_Box_Layout/Using_CSS_flexible_boxes</a></li>\n</ul>\n<p><br></p>\n<blockquote>\n<p>声明:本资料仅供学习交流，严禁使用于任何商业用途! 相关资料参考自<a href=\"https://developer.mozilla.org/en/\" target=\"_blank\" rel=\"external\">mdn</a>等开发者网站或技术大牛<a href=\"http://www.ruanyifeng.com/blog/\" target=\"_blank\" rel=\"external\">阮一峰</a>、<a href=\"http://www.oxxostudio.tw/articles/201405/about-me.html\" target=\"_blank\" rel=\"external\">oxxo</a>等博客内容。 如需转载，转载请注明出处。</p>\n</blockquote>\n<p><br></p>\n<h3 id=\"完\"><a href=\"#完\" class=\"headerlink\" title=\"完.\"></a>完.</h3>"},{"title":"关于 Css3 Grid","date":"2018-05-18T09:25:41.000Z","_content":"\n# CSS3 Grid\n\n<img class=\"br10\" src=\"/2018/05/18/css3-grid/c01.jpg\">\n\n\ncss布局： <span class=\"yellow\">Table</span> **->** <span class=\"blue\">Float + Position </span>**-->** <span class=\"green\">Flex</span>\n\n\nCSS Grid(网格) 布局（又称为 “Grid(网格)” ），是一个`二维`的基于网格的布局系统. 它的目标是完全改变我们基于网格的用户界面的布局方式。\n\n\nCSS Grid布局是目前CSS 中最强大的布局系统。与 **flexbox** 的一维布局系统不同，CSS Grid 布局是一个二维布局系统，也就意味着它可以同时处理`列和行`。\n\n通过将 CSS 规则应用于 **父元素** (成为 Grid Container 网格容器) 及 **子元素**（成为 Grid Items 网格项），你就可以轻松使用 Grid(网格) 布局。\n\n\n### 浏览器支持[caniuse](https://caniuse.com/#feat=css-grid)\n<img class=\"br10\" src=\"/2018/05/18/css3-grid/c02.jpg\">\n\n\n## 重要术语\n* 网格容器(Grid Container)\n* 网格项(Grid Item)\n* 网格线(Grid Line)\n* 网格轨道(Grid Track)\n* 网格单元格(Grid Cell)\n* 网格区域(Grid Area)\n* Grid(网格) 属性目录\n\n\n## 网格容器 \nGrid Container: 应用 display: grid 的元素。<br>\n这是所有网格项（Grid Items）的直接父级元素。\n```html\n    ## 在这个例子中，container 就是 网格容器(Grid Container) ##\n    <div class=\"container\">\n        <div class=\"item item-1\"></div>\n        <div class=\"item item-2\"></div>\n        <div class=\"item item-3\"></div>\n    </div>\n```\n\n\n## 网格项\nGrid Item: 网格容器（Grid Container）的子元素。<br>\n**（例如直接子元素）**\n```html\n    /** 注意 item 元素就是网格项(Grid Item)\n    但是 sub-item 不是。 **/\n    <div class=\"container\">\n        <div class=\"item\"></div> \n        <div class=\"item\">\n            <p class=\"sub-item\"></p>\n        </div>\n        <div class=\"item\"></div>\n    </div>\n```\n\n\n## 网格线\nGrid Line: 构成网格结构的分界线。<br>\n它们既可以是垂直的（“列网格线(column grid lines)”）<br> \n也可以是水平的（“行网格线(row grid lines)”）<br>\n并位于行或列的任一侧\n```html\n例如，这里的黄线就是一条列网格线\n```\n<img class=\"br10\" src=\"/2018/05/18/css3-grid/c03.png\">\n\n\n## 网格轨道\nGrid Track: 两条相邻网格线之间的空间。<br>\n你可以把它们想象成网格的列或行\n```html\n图是第二条和第三条 行网格线 之间的 网格轨道。\n```\n<img class=\"br10\" src=\"/2018/05/18/css3-grid/c04.png\">\n\n\n## 网格单元格\nGrid Cell: 两个相邻的行和两个相邻的列网格线之间的空间。<br>\n这是 Grid(网格) 系统的一个“单元”。\n```html\n图第1至第2条 行网格线 和第2至第3条 列网格线 交汇构成的 网格单元格\n```\n<img class=\"br10\" src=\"/2018/05/18/css3-grid/c05.png\">\n\n\n## 网格区域\nGrid Area: 4条网格线包围的总空间。<br>\n一个网格区域可以由任意数量的网格单元格组成。\n```html\n图是 行网格线1和3，以及列网格线1和3 之间的网格区域。\n```\n<img class=\"br10\" src=\"/2018/05/18/css3-grid/c06.png\">\n\n\n## Grid(网格) 属性目录\n**容器的属性** &#91;16个&#93;\n```css\n* display\n* grid-template-columns\n* grid-template-rows\n* grid-template-areas\n* grid-template\n* grid-column-gap\n* grid-row-gap\n* grid-gap\n* justify-items\n* align-items\n* justify-content\n* align-content\n* grid-auto-columns\n* grid-auto-rows\n* grid-auto-flow\n* grid\n```\n\n\n## Grid(网格) 属性目录\n**网格项的属性** &#91;9个&#93; \n```css\n* grid-column-start\n* grid-column-end\n* grid-row-start\n* grid-row-end\n* grid-column\n* grid-row\n* grid-area\n* justify-self\n* align-self\n```\n\n## display\n```css\n.container {\n    display: grid | inline-grid | subgrid;\n}\n```\n\n\n## 父元素 网格容器 属性 **display** <br>\n> 将元素定义为网格容器,并为其内容建立新的 网格格式上下文。\n\n* <span class=\"green\">grid</span> ：生成一个块级网格\n* <span class=\"green\">inline-grid</span> ：生成一个内联网格\n* <span class=\"green\">subgrid</span> ：嵌套网格\n```html\n subgrid:你希望它的行/列的大小继承自它的父级网格容器，而不是自己指定的。\n```\n\n\n## column && row\n* grid-template-column<span class=\"green\">(列)</span>\n* grid-template-row<span class=\"green\">(行)</span>\n\n```html\ncolumn: 指定的每个值来创建每列的列宽\nrow: 指定的每个值可以创建每行的高度\n```\n[demo](https://codepen.io/Frank_/pen/oEmEBX?editors=1100)\n\n\n## minmax()\n函数来创建网格轨道的最小或最大尺寸\n```html\n    minmax()函数接受两个参数：\n    第一个参数定义网格轨道的最小值，\n    第二个参数定义网格轨道的最大值。\n    可以接受任何长度值，也接受auto值。\n    auto值允许网格轨道基于内容的尺寸拉伸或挤压。\n```\n\n```css\ngrid-template-rows: minmax(100px, auto); \ngrid-template-columns: minmax(auto, 50%) 1fr 3em;\n```\n> 在这个示例中，第一行的高度最小值是100px，但其最大值为auto，允许行高可以变大超过100px。\n\n[demo](https://codepen.io/Frank_/pen/ZrwRjZ?editors=1100)\n\n\n\n## repeat() 重复网格轨道\n使用repeat()可以创建重复的网格轨道。\n\n> 这个适用于创建相等尺寸的网格项目和多个网格项目。\n\n```css\ngrid-template-columns: 60px repeat(2, 1fr);\ngrid-template-rows: repeat(2, 60px);\n```\n```html\n也接受两个参数：\n第一个参数定义网格轨道应该重复的次数;\n第二个参数定义每个轨道的尺寸。\n```\n[demo](https://codepen.io/Frank_/pen/ZrwRjZ?editors=1100)\n\n\n\n## grid-gap 间距\n\n只能创建列与列或行与行之间的间距\n> 但不能创建列和行与网格容器边缘的间距\n\n```css\n// 行间距 20px\n// grid-row-gap: 20px;\n// 列间距 5rem\n// grid-column-gap: 5rem;\n\n#第一个值是设置grid-row-gap的值#\n#第二个值设置grid-column-gap的值#\n  grid-gap: 50px 1em;\n```\n[demo](https://codepen.io/Frank_/pen/yvwpLe?editors=1100)\n\n\n## 通过网格线号码来定位网格项目\n\n```html\n网格线实际上是代表线的开始、结束，\n两者之间就是网格列或行。\n```\n> 每条线是从网格轨道开始，网格的网格线从1开始，每条网格线逐步增加1\n\n<br>\n<img class=\"br10\" src=\"/2018/05/18/css3-grid/c08.png\">\n\n## 网格线号\n<img class=\"br10\" src=\"/2018/05/18/css3-grid/c07.jpg\">\n\n[demo](https://codepen.io/Frank_/pen/jZJZZz?editors=1100)\n\n## 网格线号\n```css\ngrid-row-start: 2;\ngrid-row-end: 3;\ngrid-column-start: 2;\ngrid-column-end: 3;\n```\n\n```html\n两列三行的网格创建三条列网格线和四条行网格线。\nitem1就是由行和列的号码重新定位。\n----------------------------\n如果一个网格项目跨度只有一行或一列，\n那么grid-row-end和grid-column-end不是必需的。\n```\n<img class=\"br10\" src=\"/2018/05/18/css3-grid/c09.jpg\">\n\n[demo](https://codepen.io/Frank_/pen/jZJZZz?editors=1100)\n\n\n## 网格 \n简写: 两个值\n\n```html\ngrid-row是grid-row-start和grid-row-end的简写。\ngrid-column是grid-column-start和grid-column-end的简写。\n```\n```csss\ngrid-row: 2;\ngrid-column: 3 / 4;\n```\n```html\n如果提供两个值，\n第一个值是grid-row-start、grid-column-start的值，\n第二个值是grid-row-end、grid-column-end的值，\n两者之间必须要用/隔开。\n```\n\n[demo](https://codepen.io/Frank_/pen/jZJZZz?editors=1100)\n\n## 网格\n简写: 四个值\n\n```css\ngrid-area: 2 / 2 / 3 / 3;\n```\n\n```html\n如果指定四个值:\n第一个值对应grid-row-start，\n第二个值对应grid-column-start，\n第三个值对应grid-row-end\n第四个值对应grid-column-end\n```\n\n[demo](https://codepen.io/Frank_/pen/jZJZZz?editors=1100)\n\n\n## 网格项目跨行或跨列\n\n> 默认情况下网格项目跨度只有一个列和行，但可以跨越多个行和列\n\n```css\ngrid-column-start: 1;\ngrid-column-end: 4;\n```\n```html\n可以通过设置grid-column-end和grid-column-start距离多个网络线号实现多个列跨越。\n```\n\n<img class=\"br10\" src=\"/2018/05/18/css3-grid/c10.jpg\">\n\n[demo](https://codepen.io/Frank_/pen/RQdywY?editors=1100)\n\n\n## 网格项目跨行或跨列\n```css\ngrid-row-start: 1;\ngrid-row-end: 5;\n```\n```html\n同样的可以通过grid-row-end和grid-row-start距离多个网格号实现多个行跨越。\n```\n<img class=\"br10\" src=\"/2018/05/18/css3-grid/c11.jpg\">\n\n[demo](https://codepen.io/Frank_/pen/RQdywY?editors=1100)\n\n\n## 网格项目跨行或跨列  \n> 合并 span\n\n> 关键词span后面紧随数字，表示合并多少个列或行。\n\n```css\ngrid-row: 2 / span 2;\ngrid-column: span 2;\n```\n<img class=\"br10\" src=\"/2018/05/18/css3-grid/c12.jpg\">\n\n[demo](https://codepen.io/Frank_/pen/RQdywY?editors=1100)\n\n\n\n## 网格线命名\n\n* 定义网格时，网格线可以被命名。\n* 网格线名称也可以设置网格项目位置。\n\n```css\ngrid-template-rows:    [row-1-start] 1fr [row-2-start] 1fr [row-2-end];\ngrid-template-columns: [col-1-start] 1fr [col-2-start] 1fr [col-3-start] 1fr [col-3-end];\n```\n```html\ngrid-template-rows和grid-template-columns定义你的网格，将名称分配给网格线。\n分配网格线名称必须用方括号[网格线名称]，\n然后后面紧跟网格轨道的尺寸值。\n```\n<img class=\"br10\" src=\"/2018/05/18/css3-grid/c13.png\">\n\n[demo](https://codepen.io/Frank_/pen/LQarGv?editors=1100)\n\n```html\n可以在方括号中添加多个名称来命名网格线名称，\n使用多外名称命名网格线名称时，\n名称间要用空格隔开。\n```\n```css\ngrid-template-rows:    [row-start row-1-start] 1fr [row-1-end row-2-start] 1fr [row-2-end row-end];\ngrid-template-columns: [col-start] 1fr [col-2-start] 1fr [col-3-start] 1fr [col-end];\n```\n<img class=\"br10\" src=\"/2018/05/18/css3-grid/c14.png\"><br>\n> 每一个网格线的名称可以用来定位网格项目的位置。\n\n\n\n## 通过网格线名称设置网格项目位置\n```html\n使用网格线名称设置网格项目位置和使用网格线号码设置网格项目位置类似。\n```\n```css\ngrid-row-start:    row-2-start;\ngrid-row-end:      row-end;\ngrid-column-start: col-2-start;\ngrid-column-end:   col-end;\n```\n<img class=\"br10\" src=\"/2018/05/18/css3-grid/c15.png\"><br>\n> 引用网格线名称的时候不应该带方括号\n\n[demo](https://codepen.io/Frank_/pen/LQarGv?editors=1100)\n\n```html\ngrid-row和grid-column简写属性也适用于网格线名称，也可以用来设置网格项目的位置。\n```\n```css\ngrid-row:    row-2-start / row-end;\ngrid-column: col-2-start / col-end;\n```\n<img class=\"br10\" src=\"/2018/05/18/css3-grid/c16.png\">\n\n[demo](https://codepen.io/Frank_/pen/LQarGv?editors=1100)\n\n\n## 使用相同的名称命名网格线和设置网格项目位置\n```html\n使用repeat()函数可以给网格线分配相同的名称。\n这可以节省一定的时间。\n```\n```css\ngrid-template-rows: repeat(3, [row-start] 1fr [row-end]);\ngrid-template-columns: repeat(3, [col-start] 1fr [col-end]);\n```\n\n```html\n使用repeat()函数可以给网格线命名，\n这也导致多个网格线具有相同的网格线名称。\n~~~~~~~~~~~~~~~~~~~~~~\n相同网格线名称指定网格线的位置和名称，\n也且会自动在网格线名称后面添加对应的数字，\n使其网格线名称也是唯一的标识符。\n```\n<img class=\"br10\" src=\"/2018/05/18/css3-grid/c17.png\">\n\n\n### 使用相同的网格线名称可以设置网格项目的位置\n```css\ngrid-row: row-start 2 / row-end 3;\ngrid-column: col-start / col-start 3;\n```\n> 网格线的名称和数字之间需要用空格分开。\n\n```html\n在这个示例中，\nitem1放置位置是row-start第2条开始，至row-end的第3条结束，\n这用来设置item1在行的起始和结束位置；\n-------------------\ncol-start的第1条开始，至col-start的第3条结束\n（col-start的第3条也对应的是col-end的第2条），\n用来设置item1在列的起始位置和结束位置。\n```\n<img class=\"br10\" src=\"/2018/05/18/css3-grid/c18.png\">\n\n\n### 通过网格区域命名和定位网格项目 （一）\n```html\n通过引用 grid-area 属性指定的 网格区域(Grid Area) 名称来定义网格模板。\n重复网格区域的名称导致内容跨越这些单元格。\n一个点号（.）代表一个空的网格单元。\n这个语法本身可视作网格的可视化结构。\n```\n```html\n<grid-area-name>：\n由网格项的 grid-area 指定的网格区域名称\n.（点号） ：代表一个空的网格单元\nnone：不定义网格区域\n```\n```css\n.container {\n  grid-template-areas: \n    \" | . | none | ...\"\n    \"...\";\n}\n```\n```css\n .container {\n  grid-template-columns: 50px 50px 50px 50px;\n  grid-template-rows: auto;\n  grid-template-areas: \n    \"header header header header\"\n    \"main main . sidebar\"\n    \"footer footer footer footer\";\n}\n.item-a {\n  grid-area: header;\n}\n.item-b {\n  grid-area: main;\n}\n.item-c {\n  grid-area: sidebar;\n}\n.item-d {\n  grid-area: footer;\n}\n```\n```html\n上面的代码将创建一个 4 列 3 行的网格。\n整个顶行将由 header 区域 组成。\n中间一排将由两个 main 区域，\n一个是空单元格，一个 sidebar 区域组成。\n最后一行全是 footer 区域组成。\n```\n<img class=\"br10\" src=\"/2018/05/18/css3-grid/c34.png\">\n```html\n你的声明中的每一行都需要有相同数量的单元格。\n你可以使用任意数量的相邻的 点. 来声明单个空单元格。 \n只要这些点.之间没有空隙隔开，他们就表示一个单一的单元格。\n```\n```html\n注意你 [并非]用这个语法来命名\b\b网格线，只是命名网格区域。\n当你使用这种语法时，区域两端的\b\b网格线实际上是自动命名的。\n如果你的网格区域的名字是 foo，\n该区域的起始 行网格线 和起始 列网格线 的名称将是 foo-start，\n而最后一行 行网格线 和最后一列 列网格线 的名字是 foo-end。\n这意味着一些网格线可能有多个名字，\n如上例中最左边的网格线，它将有三个名称：header-start，main-start 和 footer-start 。\n```\n\n\n### 通过网格区域命名和定位网格项目 (二)\n```html\n像网格线名称一样，网格区域的名称也可以使用grid-template-areas属性来命名。\n引用网格区域名称也可以设置网格项目位置。\n```\n```css\ngrid-template-areas: \"header header\"\n                     \"content sidebar\"\n                     \"footer footer\";\ngrid-template-rows:  150px 1fr 100px;\ngrid-template-columns: 1fr 200px;\n```\n```html\n设置网格区域的名称应该放置在单引号或双引号内，每个名称由一个空格符分开。\n网格区域的名称，每组（单引号或双引号内的网格区域名称）定义了网格的一行，\n每个网格区域名称定义网格的一列。\n```\n<img class=\"br10\" src=\"/2018/05/18/css3-grid/c19.png\">\n\n\n\n```html\ngrid-row-start、grid-row-end、\ngrid-column-start和grid-column-end\n可以引用网格区域名称，用来设置网格项目位置。\n```\n```css\ngrid-row-start:    header;\ngrid-row-end:      header;\ngrid-column-start: header;\ngrid-column-end:   header;\n```\n<img class=\"br10\" src=\"/2018/05/18/css3-grid/c20.png\">\n\n\n```css\ngrid-row:    footer;\ngrid-column: footer;\n```\n```html\n简写的grid-row和grid-column也可以引用网格区域名称，\n设置网格项目的位置。\n```\n<img class=\"br10\" src=\"/2018/05/18/css3-grid/c21.png\">\n\n\n```css\ngrid-area: sidebar;\n```\n```html\ngrid-area简写属性也可以引用网格区域的名称来设置网格项目的位置。\n```\n<img class=\"br10\" src=\"/2018/05/18/css3-grid/c22.png\">\n\n\n\n## 隐式网格\n```html\n当网格项目确认在显式网格之外时就会创建隐性网格，\n当没有足够的空间或者显式的网格轨道来设置网格项目，\n此时网格项目就会自动创建隐式网格。\n```\n```html\n使用grid-auto-rows、\ngrid-auto-columns和grid-auto-flow\n属性可以定义隐式的网格。\n```\n```css\ngrid-template-rows:    70px;\ngrid-template-columns: repeat(2, 1fr);\ngrid-auto-rows:        140px;\n```\n\n\n<img class=\"br10\" src=\"/2018/05/18/css3-grid/c23.jpg\">\n\n```css\ngrid-template-rows:    70px;\ngrid-template-columns: repeat(2, 1fr);\ngrid-auto-rows:        140px;\n```\n```html\n在这个例子中我们只定义了一行（轨道），\n所以item1和item2的高都是70px。\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n第二行（轨道）自动创建了item3和item4空间。\ngrid-auto-rows定义隐式网格中的行（轨道）的大小，\n因此item3和item4的高度是140px。\n```\n[demo1](https://codepen.io/Frank_/pen/ZxBoeV?editors=1100)\n\n\n\n### 网格默认流方向\n```css\n//网格默认流方向是row\ngrid-auto-row: row\n```\n<img class=\"br10\" src=\"/2018/05/18/css3-grid/c24.jpg\">\n\n[demo2](https://codepen.io/Frank_/pen/ZxBoeV?editors=1100)\n\n\n### 更改网格流方向\n```css\n//可以把网格流的方向改变成column\ngrid-auto-flow: column\n```\n<img class=\"br10\" src=\"/2018/05/18/css3-grid/c25.jpg\">\n\n[demo2](https://codepen.io/Frank_/pen/ZxBoeV?editors=1100)\n\n\n```css\ngrid-template-columns: 100px 200px;\ngrid-auto-flow:        column;\ngrid-auto-columns:     1fr;\n```\n```html\n在这个例子中，我们只定义了前两列的轨道尺寸。\nitem1的尺寸是100px，item2的尺寸是200px。\n-------------------------------------------\n使用grid-auto-flow:column自动创建了隐式网格，\n用来放置item3、item4和item5，\n并且这三个列（轨道）的尺寸由grid-auto-columns来定义。\n```\n<img class=\"br10\" src=\"/2018/05/18/css3-grid/c26.jpg\">\n\n[demo3](https://codepen.io/Frank_/pen/ZxBoeV?editors=1100)\n\n\n### 隐式地命名网格区域名称\n```html\n通常可以将网格线命名成任何你想命名的名称，\n如果网格线名称添加-start和-end的后缀，\n其实也隐式的创建一个网格区域，可以用来设置网格项目的位置。\n```\n```css\ngrid-template-rows:    [outer-start] 1fr [inner-start] 1fr [inner-end] 1fr [outer-end];\ngrid-template-columns: [outer-start] 1fr [inner-start] 1fr [inner-end] 1fr [inner-end];\n```\n```html\n在这个示例中，\n行和列都具有inner-start和inner-end网格线名称，\n同时也对应的创建一个隐式网格区域名称inner。\n```\n\n<img class=\"br10\" src=\"/2018/05/18/css3-grid/c27.png\">\n```css\ngrid-area: inner\n```\n> 网格项目定位可以通过网格区域名称来设置，而不需要使用网格线名称。\n\n\n### 隐式命名网格线名称\n```html\n隐式的指定网格线反向指定了隐式的网格区域名称，\n命名的网格区域隐式的命名了网格线名称。\n```\n```css\ngrid-template-areas:   \"header header\"\n                        \"content sidebar\"\n                        \"footer footer\";\ngrid-template-rows:    80px 1fr 40px;\ngrid-template-columns: 1fr 200px;\n```\n<img class=\"br10\" src=\"/2018/05/18/css3-grid/c28.png\">\n\n[demo](https://codepen.io/Frank_/pen/vRyrOW?editors=1100)\n\n\n```css\ngrid-row-start:    header-start;\ngrid-row-end:      content-start;\ngrid-column-start: footer-start;\ngrid-column-end:   sidebar-end;\n```\n<img class=\"br10\" src=\"/2018/05/18/css3-grid/c29.png\">\n\n> 在这个示例中,header通过隐式的网格线名称设置其位置。\n\n### 网格项目层级\n 网格项目可以具有层级和堆栈，必要时可能通过z-index属性来指定\n\n```css\n.item-a,\n.item-b {\n    grid-row-start:  1;\n    grid-column-end: span 2;\n}\n.item-a { \n    grid-column-start: 1; \n    z-index: 1; \n}\n.item-b1 { \n    grid-column-start: 2;\n}\n```\n<img class=\"br10\" src=\"/2018/05/18/css3-grid/c30.jpg\">\n\n[demo](https://codepen.io/Frank_/pen/PRbaeX?editors=1100)\n\n```html\n在这个例子中，itema和itemb的开始行都是1，\nitem-a列的开始是1，\nitem-b列的开始是2，\n并且它们都跨越两列。\n两个网格项目都是由网格线数字定位，结果这两个网格项目重叠了。\n```\n```html\n默认情况下，item-b在item1上面，\n但是，我们在item-a中设置了z-index:1;\n导致item-a在item-b之上。\n当然 ，我们可以设置item-b:z-index:2\n```\n<img class=\"br10\" src=\"/2018/05/18/css3-grid/c30.jpg\">\n\n\n\n## 网格项目对齐方式（Box Alignment）\n\n```html\njustify-items和justify-self指定网格项目沿着行轴对齐方式；\nalign-items和align-self指定网格项目沿着列轴对齐方式。\n```\n\n\n### 容器的属性\n\n> justify-items和align-items应用在网格容器上\n\n**它们的属性值有：**\n```css\nauto\nnormal\nstart\nend\ncenter\nstretch\nbaseline\nfirst baseline\nlast baseline\n```\n[demo](https://codepen.io/Frank_/pen/VXPQgQ?editors=1100)\n\n```css\n.container {\n  //定义在容器元素\n  //水平方向\n  // justify-items: start;\n  justify-items: center;\n  // justify-items: end;\n  // justify-items: stretch;\n  //垂直方向\n  // align-items: start;\n  align-items: center;\n  // align-items: end;\n  // align-items: stretch;\n}\n```\n<img class=\"br10\" src=\"/2018/05/18/css3-grid/c31.jpg\">\n\n[demo](https://codepen.io/Frank_/pen/VXPQgQ?editors=1100)\n\n\n\n> align-self和justify-self属性用于网格项目自身对齐方式。\n\n**它们主要接受以下属性值：**\n```css\nauto\nnormal\nstart\nend\ncenter\nstretch\nbaseline\nfirst baseline\nlast baseline\n```\n\n\n**单个元素对齐方式**\n```css\n.item-a { \n    justify-self: center;\n    align-self: center ;\n}\n```\n<img class=\"br10\" src=\"/2018/05/18/css3-grid/c32.jpg\">\n\n[demo](https://codepen.io/Frank_/pen/OvWvGM?editors=1100)\n\n\n\n### 网格轨道对齐方式\n网格轨道对齐可以相对于网格容器行和列轴。\n```html\nalign-content指定网格轨道沿着行轴对齐方式；\njustify-content指定网格轨道沿着列轴对齐方式。\n```\n**它们支持下面属性：**\n```css\nnormal\nstart\nend\ncenter\nstretch\nspace-around\nspace-between\nspace-evenly\nbaseline\nfirst baseline\nlast baseline\n```\n\n```css\n.container{\n  justify-content: start | center | end;\n  justify-content: space-around;\n  justify-content: space-between;\n  justify-content: space-evenly;\n  \n  align-content: start | center | end;\n  align-content: space-around;\n  align-content: space-between;\n  align-content: space-evenly;\n}\n```\n<img class=\"br10\" src=\"/2018/05/18/css3-grid/c33.jpg\">\n\n[demo](https://codepen.io/Frank_/pen/NYdMva?editors=1100)\n\n\n\n\n## <span class=\"yellow3\">参考资料</span>\n\n+ https://www.w3cplus.com/css/learncssgrid.html\n+ http://www.css88.com/archives/8510\n+ https://caniuse.com/#feat=css-grid\n+ https://www.w3cplus.com/css3/how-the-minmax-function-works.html?utm_source=tuicool&utm_medium=referral\n+ https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout\n+ https://css-tricks.com/snippets/css/complete-guide-grid/\n+ https://gridbyexample.com/\n\n\n<br/>\n\n> 声明:本资料仅供学习交流，严禁使用于任何商业用途! \n相关资料参考自[w3cplus](https://www.w3cplus.com/css/learncssgrid.html)、[css88](http://www.css88.com/archives/8510)、[css-tricks](https://css-tricks.com/snippets/css/complete-guide-grid/)等博客内容。 如需转载，转载请注明出处。\n\n\n<br/>\n### 完.\n\n\n\n","source":"_posts/css3-grid.md","raw":"---\ntitle: 关于 Css3 Grid \ndate: 2018-05-18 17:25:41\ncategories: 前端\ntags: \n- css\n- grid\n---\n\n# CSS3 Grid\n\n<img class=\"br10\" src=\"/2018/05/18/css3-grid/c01.jpg\">\n\n\ncss布局： <span class=\"yellow\">Table</span> **->** <span class=\"blue\">Float + Position </span>**-->** <span class=\"green\">Flex</span>\n\n\nCSS Grid(网格) 布局（又称为 “Grid(网格)” ），是一个`二维`的基于网格的布局系统. 它的目标是完全改变我们基于网格的用户界面的布局方式。\n\n\nCSS Grid布局是目前CSS 中最强大的布局系统。与 **flexbox** 的一维布局系统不同，CSS Grid 布局是一个二维布局系统，也就意味着它可以同时处理`列和行`。\n\n通过将 CSS 规则应用于 **父元素** (成为 Grid Container 网格容器) 及 **子元素**（成为 Grid Items 网格项），你就可以轻松使用 Grid(网格) 布局。\n\n\n### 浏览器支持[caniuse](https://caniuse.com/#feat=css-grid)\n<img class=\"br10\" src=\"/2018/05/18/css3-grid/c02.jpg\">\n\n\n## 重要术语\n* 网格容器(Grid Container)\n* 网格项(Grid Item)\n* 网格线(Grid Line)\n* 网格轨道(Grid Track)\n* 网格单元格(Grid Cell)\n* 网格区域(Grid Area)\n* Grid(网格) 属性目录\n\n\n## 网格容器 \nGrid Container: 应用 display: grid 的元素。<br>\n这是所有网格项（Grid Items）的直接父级元素。\n```html\n    ## 在这个例子中，container 就是 网格容器(Grid Container) ##\n    <div class=\"container\">\n        <div class=\"item item-1\"></div>\n        <div class=\"item item-2\"></div>\n        <div class=\"item item-3\"></div>\n    </div>\n```\n\n\n## 网格项\nGrid Item: 网格容器（Grid Container）的子元素。<br>\n**（例如直接子元素）**\n```html\n    /** 注意 item 元素就是网格项(Grid Item)\n    但是 sub-item 不是。 **/\n    <div class=\"container\">\n        <div class=\"item\"></div> \n        <div class=\"item\">\n            <p class=\"sub-item\"></p>\n        </div>\n        <div class=\"item\"></div>\n    </div>\n```\n\n\n## 网格线\nGrid Line: 构成网格结构的分界线。<br>\n它们既可以是垂直的（“列网格线(column grid lines)”）<br> \n也可以是水平的（“行网格线(row grid lines)”）<br>\n并位于行或列的任一侧\n```html\n例如，这里的黄线就是一条列网格线\n```\n<img class=\"br10\" src=\"/2018/05/18/css3-grid/c03.png\">\n\n\n## 网格轨道\nGrid Track: 两条相邻网格线之间的空间。<br>\n你可以把它们想象成网格的列或行\n```html\n图是第二条和第三条 行网格线 之间的 网格轨道。\n```\n<img class=\"br10\" src=\"/2018/05/18/css3-grid/c04.png\">\n\n\n## 网格单元格\nGrid Cell: 两个相邻的行和两个相邻的列网格线之间的空间。<br>\n这是 Grid(网格) 系统的一个“单元”。\n```html\n图第1至第2条 行网格线 和第2至第3条 列网格线 交汇构成的 网格单元格\n```\n<img class=\"br10\" src=\"/2018/05/18/css3-grid/c05.png\">\n\n\n## 网格区域\nGrid Area: 4条网格线包围的总空间。<br>\n一个网格区域可以由任意数量的网格单元格组成。\n```html\n图是 行网格线1和3，以及列网格线1和3 之间的网格区域。\n```\n<img class=\"br10\" src=\"/2018/05/18/css3-grid/c06.png\">\n\n\n## Grid(网格) 属性目录\n**容器的属性** &#91;16个&#93;\n```css\n* display\n* grid-template-columns\n* grid-template-rows\n* grid-template-areas\n* grid-template\n* grid-column-gap\n* grid-row-gap\n* grid-gap\n* justify-items\n* align-items\n* justify-content\n* align-content\n* grid-auto-columns\n* grid-auto-rows\n* grid-auto-flow\n* grid\n```\n\n\n## Grid(网格) 属性目录\n**网格项的属性** &#91;9个&#93; \n```css\n* grid-column-start\n* grid-column-end\n* grid-row-start\n* grid-row-end\n* grid-column\n* grid-row\n* grid-area\n* justify-self\n* align-self\n```\n\n## display\n```css\n.container {\n    display: grid | inline-grid | subgrid;\n}\n```\n\n\n## 父元素 网格容器 属性 **display** <br>\n> 将元素定义为网格容器,并为其内容建立新的 网格格式上下文。\n\n* <span class=\"green\">grid</span> ：生成一个块级网格\n* <span class=\"green\">inline-grid</span> ：生成一个内联网格\n* <span class=\"green\">subgrid</span> ：嵌套网格\n```html\n subgrid:你希望它的行/列的大小继承自它的父级网格容器，而不是自己指定的。\n```\n\n\n## column && row\n* grid-template-column<span class=\"green\">(列)</span>\n* grid-template-row<span class=\"green\">(行)</span>\n\n```html\ncolumn: 指定的每个值来创建每列的列宽\nrow: 指定的每个值可以创建每行的高度\n```\n[demo](https://codepen.io/Frank_/pen/oEmEBX?editors=1100)\n\n\n## minmax()\n函数来创建网格轨道的最小或最大尺寸\n```html\n    minmax()函数接受两个参数：\n    第一个参数定义网格轨道的最小值，\n    第二个参数定义网格轨道的最大值。\n    可以接受任何长度值，也接受auto值。\n    auto值允许网格轨道基于内容的尺寸拉伸或挤压。\n```\n\n```css\ngrid-template-rows: minmax(100px, auto); \ngrid-template-columns: minmax(auto, 50%) 1fr 3em;\n```\n> 在这个示例中，第一行的高度最小值是100px，但其最大值为auto，允许行高可以变大超过100px。\n\n[demo](https://codepen.io/Frank_/pen/ZrwRjZ?editors=1100)\n\n\n\n## repeat() 重复网格轨道\n使用repeat()可以创建重复的网格轨道。\n\n> 这个适用于创建相等尺寸的网格项目和多个网格项目。\n\n```css\ngrid-template-columns: 60px repeat(2, 1fr);\ngrid-template-rows: repeat(2, 60px);\n```\n```html\n也接受两个参数：\n第一个参数定义网格轨道应该重复的次数;\n第二个参数定义每个轨道的尺寸。\n```\n[demo](https://codepen.io/Frank_/pen/ZrwRjZ?editors=1100)\n\n\n\n## grid-gap 间距\n\n只能创建列与列或行与行之间的间距\n> 但不能创建列和行与网格容器边缘的间距\n\n```css\n// 行间距 20px\n// grid-row-gap: 20px;\n// 列间距 5rem\n// grid-column-gap: 5rem;\n\n#第一个值是设置grid-row-gap的值#\n#第二个值设置grid-column-gap的值#\n  grid-gap: 50px 1em;\n```\n[demo](https://codepen.io/Frank_/pen/yvwpLe?editors=1100)\n\n\n## 通过网格线号码来定位网格项目\n\n```html\n网格线实际上是代表线的开始、结束，\n两者之间就是网格列或行。\n```\n> 每条线是从网格轨道开始，网格的网格线从1开始，每条网格线逐步增加1\n\n<br>\n<img class=\"br10\" src=\"/2018/05/18/css3-grid/c08.png\">\n\n## 网格线号\n<img class=\"br10\" src=\"/2018/05/18/css3-grid/c07.jpg\">\n\n[demo](https://codepen.io/Frank_/pen/jZJZZz?editors=1100)\n\n## 网格线号\n```css\ngrid-row-start: 2;\ngrid-row-end: 3;\ngrid-column-start: 2;\ngrid-column-end: 3;\n```\n\n```html\n两列三行的网格创建三条列网格线和四条行网格线。\nitem1就是由行和列的号码重新定位。\n----------------------------\n如果一个网格项目跨度只有一行或一列，\n那么grid-row-end和grid-column-end不是必需的。\n```\n<img class=\"br10\" src=\"/2018/05/18/css3-grid/c09.jpg\">\n\n[demo](https://codepen.io/Frank_/pen/jZJZZz?editors=1100)\n\n\n## 网格 \n简写: 两个值\n\n```html\ngrid-row是grid-row-start和grid-row-end的简写。\ngrid-column是grid-column-start和grid-column-end的简写。\n```\n```csss\ngrid-row: 2;\ngrid-column: 3 / 4;\n```\n```html\n如果提供两个值，\n第一个值是grid-row-start、grid-column-start的值，\n第二个值是grid-row-end、grid-column-end的值，\n两者之间必须要用/隔开。\n```\n\n[demo](https://codepen.io/Frank_/pen/jZJZZz?editors=1100)\n\n## 网格\n简写: 四个值\n\n```css\ngrid-area: 2 / 2 / 3 / 3;\n```\n\n```html\n如果指定四个值:\n第一个值对应grid-row-start，\n第二个值对应grid-column-start，\n第三个值对应grid-row-end\n第四个值对应grid-column-end\n```\n\n[demo](https://codepen.io/Frank_/pen/jZJZZz?editors=1100)\n\n\n## 网格项目跨行或跨列\n\n> 默认情况下网格项目跨度只有一个列和行，但可以跨越多个行和列\n\n```css\ngrid-column-start: 1;\ngrid-column-end: 4;\n```\n```html\n可以通过设置grid-column-end和grid-column-start距离多个网络线号实现多个列跨越。\n```\n\n<img class=\"br10\" src=\"/2018/05/18/css3-grid/c10.jpg\">\n\n[demo](https://codepen.io/Frank_/pen/RQdywY?editors=1100)\n\n\n## 网格项目跨行或跨列\n```css\ngrid-row-start: 1;\ngrid-row-end: 5;\n```\n```html\n同样的可以通过grid-row-end和grid-row-start距离多个网格号实现多个行跨越。\n```\n<img class=\"br10\" src=\"/2018/05/18/css3-grid/c11.jpg\">\n\n[demo](https://codepen.io/Frank_/pen/RQdywY?editors=1100)\n\n\n## 网格项目跨行或跨列  \n> 合并 span\n\n> 关键词span后面紧随数字，表示合并多少个列或行。\n\n```css\ngrid-row: 2 / span 2;\ngrid-column: span 2;\n```\n<img class=\"br10\" src=\"/2018/05/18/css3-grid/c12.jpg\">\n\n[demo](https://codepen.io/Frank_/pen/RQdywY?editors=1100)\n\n\n\n## 网格线命名\n\n* 定义网格时，网格线可以被命名。\n* 网格线名称也可以设置网格项目位置。\n\n```css\ngrid-template-rows:    [row-1-start] 1fr [row-2-start] 1fr [row-2-end];\ngrid-template-columns: [col-1-start] 1fr [col-2-start] 1fr [col-3-start] 1fr [col-3-end];\n```\n```html\ngrid-template-rows和grid-template-columns定义你的网格，将名称分配给网格线。\n分配网格线名称必须用方括号[网格线名称]，\n然后后面紧跟网格轨道的尺寸值。\n```\n<img class=\"br10\" src=\"/2018/05/18/css3-grid/c13.png\">\n\n[demo](https://codepen.io/Frank_/pen/LQarGv?editors=1100)\n\n```html\n可以在方括号中添加多个名称来命名网格线名称，\n使用多外名称命名网格线名称时，\n名称间要用空格隔开。\n```\n```css\ngrid-template-rows:    [row-start row-1-start] 1fr [row-1-end row-2-start] 1fr [row-2-end row-end];\ngrid-template-columns: [col-start] 1fr [col-2-start] 1fr [col-3-start] 1fr [col-end];\n```\n<img class=\"br10\" src=\"/2018/05/18/css3-grid/c14.png\"><br>\n> 每一个网格线的名称可以用来定位网格项目的位置。\n\n\n\n## 通过网格线名称设置网格项目位置\n```html\n使用网格线名称设置网格项目位置和使用网格线号码设置网格项目位置类似。\n```\n```css\ngrid-row-start:    row-2-start;\ngrid-row-end:      row-end;\ngrid-column-start: col-2-start;\ngrid-column-end:   col-end;\n```\n<img class=\"br10\" src=\"/2018/05/18/css3-grid/c15.png\"><br>\n> 引用网格线名称的时候不应该带方括号\n\n[demo](https://codepen.io/Frank_/pen/LQarGv?editors=1100)\n\n```html\ngrid-row和grid-column简写属性也适用于网格线名称，也可以用来设置网格项目的位置。\n```\n```css\ngrid-row:    row-2-start / row-end;\ngrid-column: col-2-start / col-end;\n```\n<img class=\"br10\" src=\"/2018/05/18/css3-grid/c16.png\">\n\n[demo](https://codepen.io/Frank_/pen/LQarGv?editors=1100)\n\n\n## 使用相同的名称命名网格线和设置网格项目位置\n```html\n使用repeat()函数可以给网格线分配相同的名称。\n这可以节省一定的时间。\n```\n```css\ngrid-template-rows: repeat(3, [row-start] 1fr [row-end]);\ngrid-template-columns: repeat(3, [col-start] 1fr [col-end]);\n```\n\n```html\n使用repeat()函数可以给网格线命名，\n这也导致多个网格线具有相同的网格线名称。\n~~~~~~~~~~~~~~~~~~~~~~\n相同网格线名称指定网格线的位置和名称，\n也且会自动在网格线名称后面添加对应的数字，\n使其网格线名称也是唯一的标识符。\n```\n<img class=\"br10\" src=\"/2018/05/18/css3-grid/c17.png\">\n\n\n### 使用相同的网格线名称可以设置网格项目的位置\n```css\ngrid-row: row-start 2 / row-end 3;\ngrid-column: col-start / col-start 3;\n```\n> 网格线的名称和数字之间需要用空格分开。\n\n```html\n在这个示例中，\nitem1放置位置是row-start第2条开始，至row-end的第3条结束，\n这用来设置item1在行的起始和结束位置；\n-------------------\ncol-start的第1条开始，至col-start的第3条结束\n（col-start的第3条也对应的是col-end的第2条），\n用来设置item1在列的起始位置和结束位置。\n```\n<img class=\"br10\" src=\"/2018/05/18/css3-grid/c18.png\">\n\n\n### 通过网格区域命名和定位网格项目 （一）\n```html\n通过引用 grid-area 属性指定的 网格区域(Grid Area) 名称来定义网格模板。\n重复网格区域的名称导致内容跨越这些单元格。\n一个点号（.）代表一个空的网格单元。\n这个语法本身可视作网格的可视化结构。\n```\n```html\n<grid-area-name>：\n由网格项的 grid-area 指定的网格区域名称\n.（点号） ：代表一个空的网格单元\nnone：不定义网格区域\n```\n```css\n.container {\n  grid-template-areas: \n    \" | . | none | ...\"\n    \"...\";\n}\n```\n```css\n .container {\n  grid-template-columns: 50px 50px 50px 50px;\n  grid-template-rows: auto;\n  grid-template-areas: \n    \"header header header header\"\n    \"main main . sidebar\"\n    \"footer footer footer footer\";\n}\n.item-a {\n  grid-area: header;\n}\n.item-b {\n  grid-area: main;\n}\n.item-c {\n  grid-area: sidebar;\n}\n.item-d {\n  grid-area: footer;\n}\n```\n```html\n上面的代码将创建一个 4 列 3 行的网格。\n整个顶行将由 header 区域 组成。\n中间一排将由两个 main 区域，\n一个是空单元格，一个 sidebar 区域组成。\n最后一行全是 footer 区域组成。\n```\n<img class=\"br10\" src=\"/2018/05/18/css3-grid/c34.png\">\n```html\n你的声明中的每一行都需要有相同数量的单元格。\n你可以使用任意数量的相邻的 点. 来声明单个空单元格。 \n只要这些点.之间没有空隙隔开，他们就表示一个单一的单元格。\n```\n```html\n注意你 [并非]用这个语法来命名\b\b网格线，只是命名网格区域。\n当你使用这种语法时，区域两端的\b\b网格线实际上是自动命名的。\n如果你的网格区域的名字是 foo，\n该区域的起始 行网格线 和起始 列网格线 的名称将是 foo-start，\n而最后一行 行网格线 和最后一列 列网格线 的名字是 foo-end。\n这意味着一些网格线可能有多个名字，\n如上例中最左边的网格线，它将有三个名称：header-start，main-start 和 footer-start 。\n```\n\n\n### 通过网格区域命名和定位网格项目 (二)\n```html\n像网格线名称一样，网格区域的名称也可以使用grid-template-areas属性来命名。\n引用网格区域名称也可以设置网格项目位置。\n```\n```css\ngrid-template-areas: \"header header\"\n                     \"content sidebar\"\n                     \"footer footer\";\ngrid-template-rows:  150px 1fr 100px;\ngrid-template-columns: 1fr 200px;\n```\n```html\n设置网格区域的名称应该放置在单引号或双引号内，每个名称由一个空格符分开。\n网格区域的名称，每组（单引号或双引号内的网格区域名称）定义了网格的一行，\n每个网格区域名称定义网格的一列。\n```\n<img class=\"br10\" src=\"/2018/05/18/css3-grid/c19.png\">\n\n\n\n```html\ngrid-row-start、grid-row-end、\ngrid-column-start和grid-column-end\n可以引用网格区域名称，用来设置网格项目位置。\n```\n```css\ngrid-row-start:    header;\ngrid-row-end:      header;\ngrid-column-start: header;\ngrid-column-end:   header;\n```\n<img class=\"br10\" src=\"/2018/05/18/css3-grid/c20.png\">\n\n\n```css\ngrid-row:    footer;\ngrid-column: footer;\n```\n```html\n简写的grid-row和grid-column也可以引用网格区域名称，\n设置网格项目的位置。\n```\n<img class=\"br10\" src=\"/2018/05/18/css3-grid/c21.png\">\n\n\n```css\ngrid-area: sidebar;\n```\n```html\ngrid-area简写属性也可以引用网格区域的名称来设置网格项目的位置。\n```\n<img class=\"br10\" src=\"/2018/05/18/css3-grid/c22.png\">\n\n\n\n## 隐式网格\n```html\n当网格项目确认在显式网格之外时就会创建隐性网格，\n当没有足够的空间或者显式的网格轨道来设置网格项目，\n此时网格项目就会自动创建隐式网格。\n```\n```html\n使用grid-auto-rows、\ngrid-auto-columns和grid-auto-flow\n属性可以定义隐式的网格。\n```\n```css\ngrid-template-rows:    70px;\ngrid-template-columns: repeat(2, 1fr);\ngrid-auto-rows:        140px;\n```\n\n\n<img class=\"br10\" src=\"/2018/05/18/css3-grid/c23.jpg\">\n\n```css\ngrid-template-rows:    70px;\ngrid-template-columns: repeat(2, 1fr);\ngrid-auto-rows:        140px;\n```\n```html\n在这个例子中我们只定义了一行（轨道），\n所以item1和item2的高都是70px。\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n第二行（轨道）自动创建了item3和item4空间。\ngrid-auto-rows定义隐式网格中的行（轨道）的大小，\n因此item3和item4的高度是140px。\n```\n[demo1](https://codepen.io/Frank_/pen/ZxBoeV?editors=1100)\n\n\n\n### 网格默认流方向\n```css\n//网格默认流方向是row\ngrid-auto-row: row\n```\n<img class=\"br10\" src=\"/2018/05/18/css3-grid/c24.jpg\">\n\n[demo2](https://codepen.io/Frank_/pen/ZxBoeV?editors=1100)\n\n\n### 更改网格流方向\n```css\n//可以把网格流的方向改变成column\ngrid-auto-flow: column\n```\n<img class=\"br10\" src=\"/2018/05/18/css3-grid/c25.jpg\">\n\n[demo2](https://codepen.io/Frank_/pen/ZxBoeV?editors=1100)\n\n\n```css\ngrid-template-columns: 100px 200px;\ngrid-auto-flow:        column;\ngrid-auto-columns:     1fr;\n```\n```html\n在这个例子中，我们只定义了前两列的轨道尺寸。\nitem1的尺寸是100px，item2的尺寸是200px。\n-------------------------------------------\n使用grid-auto-flow:column自动创建了隐式网格，\n用来放置item3、item4和item5，\n并且这三个列（轨道）的尺寸由grid-auto-columns来定义。\n```\n<img class=\"br10\" src=\"/2018/05/18/css3-grid/c26.jpg\">\n\n[demo3](https://codepen.io/Frank_/pen/ZxBoeV?editors=1100)\n\n\n### 隐式地命名网格区域名称\n```html\n通常可以将网格线命名成任何你想命名的名称，\n如果网格线名称添加-start和-end的后缀，\n其实也隐式的创建一个网格区域，可以用来设置网格项目的位置。\n```\n```css\ngrid-template-rows:    [outer-start] 1fr [inner-start] 1fr [inner-end] 1fr [outer-end];\ngrid-template-columns: [outer-start] 1fr [inner-start] 1fr [inner-end] 1fr [inner-end];\n```\n```html\n在这个示例中，\n行和列都具有inner-start和inner-end网格线名称，\n同时也对应的创建一个隐式网格区域名称inner。\n```\n\n<img class=\"br10\" src=\"/2018/05/18/css3-grid/c27.png\">\n```css\ngrid-area: inner\n```\n> 网格项目定位可以通过网格区域名称来设置，而不需要使用网格线名称。\n\n\n### 隐式命名网格线名称\n```html\n隐式的指定网格线反向指定了隐式的网格区域名称，\n命名的网格区域隐式的命名了网格线名称。\n```\n```css\ngrid-template-areas:   \"header header\"\n                        \"content sidebar\"\n                        \"footer footer\";\ngrid-template-rows:    80px 1fr 40px;\ngrid-template-columns: 1fr 200px;\n```\n<img class=\"br10\" src=\"/2018/05/18/css3-grid/c28.png\">\n\n[demo](https://codepen.io/Frank_/pen/vRyrOW?editors=1100)\n\n\n```css\ngrid-row-start:    header-start;\ngrid-row-end:      content-start;\ngrid-column-start: footer-start;\ngrid-column-end:   sidebar-end;\n```\n<img class=\"br10\" src=\"/2018/05/18/css3-grid/c29.png\">\n\n> 在这个示例中,header通过隐式的网格线名称设置其位置。\n\n### 网格项目层级\n 网格项目可以具有层级和堆栈，必要时可能通过z-index属性来指定\n\n```css\n.item-a,\n.item-b {\n    grid-row-start:  1;\n    grid-column-end: span 2;\n}\n.item-a { \n    grid-column-start: 1; \n    z-index: 1; \n}\n.item-b1 { \n    grid-column-start: 2;\n}\n```\n<img class=\"br10\" src=\"/2018/05/18/css3-grid/c30.jpg\">\n\n[demo](https://codepen.io/Frank_/pen/PRbaeX?editors=1100)\n\n```html\n在这个例子中，itema和itemb的开始行都是1，\nitem-a列的开始是1，\nitem-b列的开始是2，\n并且它们都跨越两列。\n两个网格项目都是由网格线数字定位，结果这两个网格项目重叠了。\n```\n```html\n默认情况下，item-b在item1上面，\n但是，我们在item-a中设置了z-index:1;\n导致item-a在item-b之上。\n当然 ，我们可以设置item-b:z-index:2\n```\n<img class=\"br10\" src=\"/2018/05/18/css3-grid/c30.jpg\">\n\n\n\n## 网格项目对齐方式（Box Alignment）\n\n```html\njustify-items和justify-self指定网格项目沿着行轴对齐方式；\nalign-items和align-self指定网格项目沿着列轴对齐方式。\n```\n\n\n### 容器的属性\n\n> justify-items和align-items应用在网格容器上\n\n**它们的属性值有：**\n```css\nauto\nnormal\nstart\nend\ncenter\nstretch\nbaseline\nfirst baseline\nlast baseline\n```\n[demo](https://codepen.io/Frank_/pen/VXPQgQ?editors=1100)\n\n```css\n.container {\n  //定义在容器元素\n  //水平方向\n  // justify-items: start;\n  justify-items: center;\n  // justify-items: end;\n  // justify-items: stretch;\n  //垂直方向\n  // align-items: start;\n  align-items: center;\n  // align-items: end;\n  // align-items: stretch;\n}\n```\n<img class=\"br10\" src=\"/2018/05/18/css3-grid/c31.jpg\">\n\n[demo](https://codepen.io/Frank_/pen/VXPQgQ?editors=1100)\n\n\n\n> align-self和justify-self属性用于网格项目自身对齐方式。\n\n**它们主要接受以下属性值：**\n```css\nauto\nnormal\nstart\nend\ncenter\nstretch\nbaseline\nfirst baseline\nlast baseline\n```\n\n\n**单个元素对齐方式**\n```css\n.item-a { \n    justify-self: center;\n    align-self: center ;\n}\n```\n<img class=\"br10\" src=\"/2018/05/18/css3-grid/c32.jpg\">\n\n[demo](https://codepen.io/Frank_/pen/OvWvGM?editors=1100)\n\n\n\n### 网格轨道对齐方式\n网格轨道对齐可以相对于网格容器行和列轴。\n```html\nalign-content指定网格轨道沿着行轴对齐方式；\njustify-content指定网格轨道沿着列轴对齐方式。\n```\n**它们支持下面属性：**\n```css\nnormal\nstart\nend\ncenter\nstretch\nspace-around\nspace-between\nspace-evenly\nbaseline\nfirst baseline\nlast baseline\n```\n\n```css\n.container{\n  justify-content: start | center | end;\n  justify-content: space-around;\n  justify-content: space-between;\n  justify-content: space-evenly;\n  \n  align-content: start | center | end;\n  align-content: space-around;\n  align-content: space-between;\n  align-content: space-evenly;\n}\n```\n<img class=\"br10\" src=\"/2018/05/18/css3-grid/c33.jpg\">\n\n[demo](https://codepen.io/Frank_/pen/NYdMva?editors=1100)\n\n\n\n\n## <span class=\"yellow3\">参考资料</span>\n\n+ https://www.w3cplus.com/css/learncssgrid.html\n+ http://www.css88.com/archives/8510\n+ https://caniuse.com/#feat=css-grid\n+ https://www.w3cplus.com/css3/how-the-minmax-function-works.html?utm_source=tuicool&utm_medium=referral\n+ https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout\n+ https://css-tricks.com/snippets/css/complete-guide-grid/\n+ https://gridbyexample.com/\n\n\n<br/>\n\n> 声明:本资料仅供学习交流，严禁使用于任何商业用途! \n相关资料参考自[w3cplus](https://www.w3cplus.com/css/learncssgrid.html)、[css88](http://www.css88.com/archives/8510)、[css-tricks](https://css-tricks.com/snippets/css/complete-guide-grid/)等博客内容。 如需转载，转载请注明出处。\n\n\n<br/>\n### 完.\n\n\n\n","slug":"css3-grid","published":1,"updated":"2022-08-30T04:25:07.510Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl7fovitr00020do7hrzyeyfx","content":"<h1 id=\"CSS3-Grid\"><a href=\"#CSS3-Grid\" class=\"headerlink\" title=\"CSS3 Grid\"></a>CSS3 Grid</h1><p><img class=\"br10\" src=\"/2018/05/18/css3-grid/c01.jpg\"></p>\n<p>css布局： <span class=\"yellow\">Table</span> <strong>-&gt;</strong> <span class=\"blue\">Float + Position </span><strong>–&gt;</strong> <span class=\"green\">Flex</span></p>\n<p>CSS Grid(网格) 布局（又称为 “Grid(网格)” ），是一个<code>二维</code>的基于网格的布局系统. 它的目标是完全改变我们基于网格的用户界面的布局方式。</p>\n<p>CSS Grid布局是目前CSS 中最强大的布局系统。与 <strong>flexbox</strong> 的一维布局系统不同，CSS Grid 布局是一个二维布局系统，也就意味着它可以同时处理<code>列和行</code>。</p>\n<p>通过将 CSS 规则应用于 <strong>父元素</strong> (成为 Grid Container 网格容器) 及 <strong>子元素</strong>（成为 Grid Items 网格项），你就可以轻松使用 Grid(网格) 布局。</p>\n<h3 id=\"浏览器支持caniuse\"><a href=\"#浏览器支持caniuse\" class=\"headerlink\" title=\"浏览器支持caniuse\"></a>浏览器支持<a href=\"https://caniuse.com/#feat=css-grid\" target=\"_blank\" rel=\"external\">caniuse</a></h3><p><img class=\"br10\" src=\"/2018/05/18/css3-grid/c02.jpg\"></p>\n<h2 id=\"重要术语\"><a href=\"#重要术语\" class=\"headerlink\" title=\"重要术语\"></a>重要术语</h2><ul>\n<li>网格容器(Grid Container)</li>\n<li>网格项(Grid Item)</li>\n<li>网格线(Grid Line)</li>\n<li>网格轨道(Grid Track)</li>\n<li>网格单元格(Grid Cell)</li>\n<li>网格区域(Grid Area)</li>\n<li>Grid(网格) 属性目录</li>\n</ul>\n<h2 id=\"网格容器\"><a href=\"#网格容器\" class=\"headerlink\" title=\"网格容器\"></a>网格容器</h2><p>Grid Container: 应用 display: grid 的元素。<br><br>这是所有网格项（Grid Items）的直接父级元素。<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">## 在这个例子中，container 就是 网格容器(Grid Container) ##</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"container\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item item-1\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item item-2\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item item-3\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<h2 id=\"网格项\"><a href=\"#网格项\" class=\"headerlink\" title=\"网格项\"></a>网格项</h2><p>Grid Item: 网格容器（Grid Container）的子元素。<br><br><strong>（例如直接子元素）</strong><br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">/** 注意 item 元素就是网格项(Grid Item)</div><div class=\"line\">但是 sub-item 不是。 **/</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"container\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span> </div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item\"</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">\"sub-item\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<h2 id=\"网格线\"><a href=\"#网格线\" class=\"headerlink\" title=\"网格线\"></a>网格线</h2><p>Grid Line: 构成网格结构的分界线。<br><br>它们既可以是垂直的（“列网格线(column grid lines)”）<br><br>也可以是水平的（“行网格线(row grid lines)”）<br><br>并位于行或列的任一侧<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">例如，这里的黄线就是一条列网格线</div></pre></td></tr></table></figure></p>\n<p><img class=\"br10\" src=\"/2018/05/18/css3-grid/c03.png\"></p>\n<h2 id=\"网格轨道\"><a href=\"#网格轨道\" class=\"headerlink\" title=\"网格轨道\"></a>网格轨道</h2><p>Grid Track: 两条相邻网格线之间的空间。<br><br>你可以把它们想象成网格的列或行<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">图是第二条和第三条 行网格线 之间的 网格轨道。</div></pre></td></tr></table></figure></p>\n<p><img class=\"br10\" src=\"/2018/05/18/css3-grid/c04.png\"></p>\n<h2 id=\"网格单元格\"><a href=\"#网格单元格\" class=\"headerlink\" title=\"网格单元格\"></a>网格单元格</h2><p>Grid Cell: 两个相邻的行和两个相邻的列网格线之间的空间。<br><br>这是 Grid(网格) 系统的一个“单元”。<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">图第1至第2条 行网格线 和第2至第3条 列网格线 交汇构成的 网格单元格</div></pre></td></tr></table></figure></p>\n<p><img class=\"br10\" src=\"/2018/05/18/css3-grid/c05.png\"></p>\n<h2 id=\"网格区域\"><a href=\"#网格区域\" class=\"headerlink\" title=\"网格区域\"></a>网格区域</h2><p>Grid Area: 4条网格线包围的总空间。<br><br>一个网格区域可以由任意数量的网格单元格组成。<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">图是 行网格线1和3，以及列网格线1和3 之间的网格区域。</div></pre></td></tr></table></figure></p>\n<p><img class=\"br10\" src=\"/2018/05/18/css3-grid/c06.png\"></p>\n<h2 id=\"Grid-网格-属性目录\"><a href=\"#Grid-网格-属性目录\" class=\"headerlink\" title=\"Grid(网格) 属性目录\"></a>Grid(网格) 属性目录</h2><p><strong>容器的属性</strong> &#91;16个&#93;<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\">* <span class=\"selector-tag\">display</span></div><div class=\"line\">* <span class=\"selector-tag\">grid-template-columns</span></div><div class=\"line\">* <span class=\"selector-tag\">grid-template-rows</span></div><div class=\"line\">* <span class=\"selector-tag\">grid-template-areas</span></div><div class=\"line\">* <span class=\"selector-tag\">grid-template</span></div><div class=\"line\">* <span class=\"selector-tag\">grid-column-gap</span></div><div class=\"line\">* <span class=\"selector-tag\">grid-row-gap</span></div><div class=\"line\">* <span class=\"selector-tag\">grid-gap</span></div><div class=\"line\">* <span class=\"selector-tag\">justify-items</span></div><div class=\"line\">* <span class=\"selector-tag\">align-items</span></div><div class=\"line\">* <span class=\"selector-tag\">justify-content</span></div><div class=\"line\">* <span class=\"selector-tag\">align-content</span></div><div class=\"line\">* <span class=\"selector-tag\">grid-auto-columns</span></div><div class=\"line\">* <span class=\"selector-tag\">grid-auto-rows</span></div><div class=\"line\">* <span class=\"selector-tag\">grid-auto-flow</span></div><div class=\"line\">* <span class=\"selector-tag\">grid</span></div></pre></td></tr></table></figure></p>\n<h2 id=\"Grid-网格-属性目录-1\"><a href=\"#Grid-网格-属性目录-1\" class=\"headerlink\" title=\"Grid(网格) 属性目录\"></a>Grid(网格) 属性目录</h2><p><strong>网格项的属性</strong> &#91;9个&#93;<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">* <span class=\"selector-tag\">grid-column-start</span></div><div class=\"line\">* <span class=\"selector-tag\">grid-column-end</span></div><div class=\"line\">* <span class=\"selector-tag\">grid-row-start</span></div><div class=\"line\">* <span class=\"selector-tag\">grid-row-end</span></div><div class=\"line\">* <span class=\"selector-tag\">grid-column</span></div><div class=\"line\">* <span class=\"selector-tag\">grid-row</span></div><div class=\"line\">* <span class=\"selector-tag\">grid-area</span></div><div class=\"line\">* <span class=\"selector-tag\">justify-self</span></div><div class=\"line\">* <span class=\"selector-tag\">align-self</span></div></pre></td></tr></table></figure></p>\n<h2 id=\"display\"><a href=\"#display\" class=\"headerlink\" title=\"display\"></a>display</h2><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.container</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">display</span>: grid | inline-grid | subgrid;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"父元素-网格容器-属性-display\"><a href=\"#父元素-网格容器-属性-display\" class=\"headerlink\" title=\"父元素 网格容器 属性 display \"></a>父元素 网格容器 属性 <strong>display</strong> <br></h2><blockquote>\n<p>将元素定义为网格容器,并为其内容建立新的 网格格式上下文。</p>\n</blockquote>\n<ul>\n<li><span class=\"green\">grid</span> ：生成一个块级网格</li>\n<li><span class=\"green\">inline-grid</span> ：生成一个内联网格</li>\n<li><span class=\"green\">subgrid</span> ：嵌套网格<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">subgrid:你希望它的行/列的大小继承自它的父级网格容器，而不是自己指定的。</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"column-amp-amp-row\"><a href=\"#column-amp-amp-row\" class=\"headerlink\" title=\"column &amp;&amp; row\"></a>column &amp;&amp; row</h2><ul>\n<li>grid-template-column<span class=\"green\">(列)</span></li>\n<li>grid-template-row<span class=\"green\">(行)</span></li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">column: 指定的每个值来创建每列的列宽</div><div class=\"line\">row: 指定的每个值可以创建每行的高度</div></pre></td></tr></table></figure>\n<p><a href=\"https://codepen.io/Frank_/pen/oEmEBX?editors=1100\" target=\"_blank\" rel=\"external\">demo</a></p>\n<h2 id=\"minmax\"><a href=\"#minmax\" class=\"headerlink\" title=\"minmax()\"></a>minmax()</h2><p>函数来创建网格轨道的最小或最大尺寸<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">minmax()函数接受两个参数：</div><div class=\"line\">第一个参数定义网格轨道的最小值，</div><div class=\"line\">第二个参数定义网格轨道的最大值。</div><div class=\"line\">可以接受任何长度值，也接受auto值。</div><div class=\"line\">auto值允许网格轨道基于内容的尺寸拉伸或挤压。</div></pre></td></tr></table></figure></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">grid-template-rows</span>: <span class=\"selector-tag\">minmax</span>(100<span class=\"selector-tag\">px</span>, <span class=\"selector-tag\">auto</span>); </div><div class=\"line\"><span class=\"selector-tag\">grid-template-columns</span>: <span class=\"selector-tag\">minmax</span>(<span class=\"selector-tag\">auto</span>, 50%) 1<span class=\"selector-tag\">fr</span> 3<span class=\"selector-tag\">em</span>;</div></pre></td></tr></table></figure>\n<blockquote>\n<p>在这个示例中，第一行的高度最小值是100px，但其最大值为auto，允许行高可以变大超过100px。</p>\n</blockquote>\n<p><a href=\"https://codepen.io/Frank_/pen/ZrwRjZ?editors=1100\" target=\"_blank\" rel=\"external\">demo</a></p>\n<h2 id=\"repeat-重复网格轨道\"><a href=\"#repeat-重复网格轨道\" class=\"headerlink\" title=\"repeat() 重复网格轨道\"></a>repeat() 重复网格轨道</h2><p>使用repeat()可以创建重复的网格轨道。</p>\n<blockquote>\n<p>这个适用于创建相等尺寸的网格项目和多个网格项目。</p>\n</blockquote>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">grid-template-columns</span>: 60<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">repeat</span>(2, 1<span class=\"selector-tag\">fr</span>);</div><div class=\"line\"><span class=\"selector-tag\">grid-template-rows</span>: <span class=\"selector-tag\">repeat</span>(2, 60<span class=\"selector-tag\">px</span>);</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">也接受两个参数：</div><div class=\"line\">第一个参数定义网格轨道应该重复的次数;</div><div class=\"line\">第二个参数定义每个轨道的尺寸。</div></pre></td></tr></table></figure>\n<p><a href=\"https://codepen.io/Frank_/pen/ZrwRjZ?editors=1100\" target=\"_blank\" rel=\"external\">demo</a></p>\n<h2 id=\"grid-gap-间距\"><a href=\"#grid-gap-间距\" class=\"headerlink\" title=\"grid-gap 间距\"></a>grid-gap 间距</h2><p>只能创建列与列或行与行之间的间距</p>\n<blockquote>\n<p>但不能创建列和行与网格容器边缘的间距</p>\n</blockquote>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">// 行间距 20px</div><div class=\"line\">// grid-row-gap: 20px;</div><div class=\"line\">// 列间距 5rem</div><div class=\"line\">// grid-column-gap: 5rem;</div><div class=\"line\"></div><div class=\"line\">#第一个值是设置<span class=\"selector-tag\">grid-row-gap</span>的值#</div><div class=\"line\">#第二个值设置<span class=\"selector-tag\">grid-column-gap</span>的值#</div><div class=\"line\">  <span class=\"selector-tag\">grid-gap</span>: 50<span class=\"selector-tag\">px</span> 1<span class=\"selector-tag\">em</span>;</div></pre></td></tr></table></figure>\n<p><a href=\"https://codepen.io/Frank_/pen/yvwpLe?editors=1100\" target=\"_blank\" rel=\"external\">demo</a></p>\n<h2 id=\"通过网格线号码来定位网格项目\"><a href=\"#通过网格线号码来定位网格项目\" class=\"headerlink\" title=\"通过网格线号码来定位网格项目\"></a>通过网格线号码来定位网格项目</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">网格线实际上是代表线的开始、结束，</div><div class=\"line\">两者之间就是网格列或行。</div></pre></td></tr></table></figure>\n<blockquote>\n<p>每条线是从网格轨道开始，网格的网格线从1开始，每条网格线逐步增加1</p>\n</blockquote>\n<p><br><br><img class=\"br10\" src=\"/2018/05/18/css3-grid/c08.png\"></p>\n<h2 id=\"网格线号\"><a href=\"#网格线号\" class=\"headerlink\" title=\"网格线号\"></a>网格线号</h2><p><img class=\"br10\" src=\"/2018/05/18/css3-grid/c07.jpg\"></p>\n<p><a href=\"https://codepen.io/Frank_/pen/jZJZZz?editors=1100\" target=\"_blank\" rel=\"external\">demo</a></p>\n<h2 id=\"网格线号-1\"><a href=\"#网格线号-1\" class=\"headerlink\" title=\"网格线号\"></a>网格线号</h2><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">grid-row-start</span>: 2;</div><div class=\"line\"><span class=\"selector-tag\">grid-row-end</span>: 3;</div><div class=\"line\"><span class=\"selector-tag\">grid-column-start</span>: 2;</div><div class=\"line\"><span class=\"selector-tag\">grid-column-end</span>: 3;</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">两列三行的网格创建三条列网格线和四条行网格线。</div><div class=\"line\">item1就是由行和列的号码重新定位。</div><div class=\"line\">----------------------------</div><div class=\"line\">如果一个网格项目跨度只有一行或一列，</div><div class=\"line\">那么grid-row-end和grid-column-end不是必需的。</div></pre></td></tr></table></figure>\n<p><img class=\"br10\" src=\"/2018/05/18/css3-grid/c09.jpg\"></p>\n<p><a href=\"https://codepen.io/Frank_/pen/jZJZZz?editors=1100\" target=\"_blank\" rel=\"external\">demo</a></p>\n<h2 id=\"网格\"><a href=\"#网格\" class=\"headerlink\" title=\"网格\"></a>网格</h2><p>简写: 两个值</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">grid-row是grid-row-start和grid-row-end的简写。</div><div class=\"line\">grid-column是grid-column-start和grid-column-end的简写。</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">grid-row: 2;</div><div class=\"line\">grid-column: 3 / 4;</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">如果提供两个值，</div><div class=\"line\">第一个值是grid-row-start、grid-column-start的值，</div><div class=\"line\">第二个值是grid-row-end、grid-column-end的值，</div><div class=\"line\">两者之间必须要用/隔开。</div></pre></td></tr></table></figure>\n<p><a href=\"https://codepen.io/Frank_/pen/jZJZZz?editors=1100\" target=\"_blank\" rel=\"external\">demo</a></p>\n<h2 id=\"网格-1\"><a href=\"#网格-1\" class=\"headerlink\" title=\"网格\"></a>网格</h2><p>简写: 四个值</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">grid-area: 2 / 2 / 3 / 3;</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">如果指定四个值:</div><div class=\"line\">第一个值对应grid-row-start，</div><div class=\"line\">第二个值对应grid-column-start，</div><div class=\"line\">第三个值对应grid-row-end</div><div class=\"line\">第四个值对应grid-column-end</div></pre></td></tr></table></figure>\n<p><a href=\"https://codepen.io/Frank_/pen/jZJZZz?editors=1100\" target=\"_blank\" rel=\"external\">demo</a></p>\n<h2 id=\"网格项目跨行或跨列\"><a href=\"#网格项目跨行或跨列\" class=\"headerlink\" title=\"网格项目跨行或跨列\"></a>网格项目跨行或跨列</h2><blockquote>\n<p>默认情况下网格项目跨度只有一个列和行，但可以跨越多个行和列</p>\n</blockquote>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">grid-column-start</span>: 1;</div><div class=\"line\"><span class=\"selector-tag\">grid-column-end</span>: 4;</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">可以通过设置grid-column-end和grid-column-start距离多个网络线号实现多个列跨越。</div></pre></td></tr></table></figure>\n<p><img class=\"br10\" src=\"/2018/05/18/css3-grid/c10.jpg\"></p>\n<p><a href=\"https://codepen.io/Frank_/pen/RQdywY?editors=1100\" target=\"_blank\" rel=\"external\">demo</a></p>\n<h2 id=\"网格项目跨行或跨列-1\"><a href=\"#网格项目跨行或跨列-1\" class=\"headerlink\" title=\"网格项目跨行或跨列\"></a>网格项目跨行或跨列</h2><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">grid-row-start</span>: 1;</div><div class=\"line\"><span class=\"selector-tag\">grid-row-end</span>: 5;</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">同样的可以通过grid-row-end和grid-row-start距离多个网格号实现多个行跨越。</div></pre></td></tr></table></figure>\n<p><img class=\"br10\" src=\"/2018/05/18/css3-grid/c11.jpg\"></p>\n<p><a href=\"https://codepen.io/Frank_/pen/RQdywY?editors=1100\" target=\"_blank\" rel=\"external\">demo</a></p>\n<h2 id=\"网格项目跨行或跨列-2\"><a href=\"#网格项目跨行或跨列-2\" class=\"headerlink\" title=\"网格项目跨行或跨列\"></a>网格项目跨行或跨列</h2><blockquote>\n<p>合并 span</p>\n<p>关键词span后面紧随数字，表示合并多少个列或行。</p>\n</blockquote>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">grid-row: 2 / span 2;</div><div class=\"line\"><span class=\"selector-tag\">grid-column</span>: <span class=\"selector-tag\">span</span> 2;</div></pre></td></tr></table></figure>\n<p><img class=\"br10\" src=\"/2018/05/18/css3-grid/c12.jpg\"></p>\n<p><a href=\"https://codepen.io/Frank_/pen/RQdywY?editors=1100\" target=\"_blank\" rel=\"external\">demo</a></p>\n<h2 id=\"网格线命名\"><a href=\"#网格线命名\" class=\"headerlink\" title=\"网格线命名\"></a>网格线命名</h2><ul>\n<li>定义网格时，网格线可以被命名。</li>\n<li>网格线名称也可以设置网格项目位置。</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">grid-template-rows</span>:    <span class=\"selector-attr\">[row-1-start]</span> 1<span class=\"selector-tag\">fr</span> <span class=\"selector-attr\">[row-2-start]</span> 1<span class=\"selector-tag\">fr</span> <span class=\"selector-attr\">[row-2-end]</span>;</div><div class=\"line\"><span class=\"selector-tag\">grid-template-columns</span>: <span class=\"selector-attr\">[col-1-start]</span> 1<span class=\"selector-tag\">fr</span> <span class=\"selector-attr\">[col-2-start]</span> 1<span class=\"selector-tag\">fr</span> <span class=\"selector-attr\">[col-3-start]</span> 1<span class=\"selector-tag\">fr</span> <span class=\"selector-attr\">[col-3-end]</span>;</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">grid-template-rows和grid-template-columns定义你的网格，将名称分配给网格线。</div><div class=\"line\">分配网格线名称必须用方括号[网格线名称]，</div><div class=\"line\">然后后面紧跟网格轨道的尺寸值。</div></pre></td></tr></table></figure>\n<p><img class=\"br10\" src=\"/2018/05/18/css3-grid/c13.png\"></p>\n<p><a href=\"https://codepen.io/Frank_/pen/LQarGv?editors=1100\" target=\"_blank\" rel=\"external\">demo</a></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">可以在方括号中添加多个名称来命名网格线名称，</div><div class=\"line\">使用多外名称命名网格线名称时，</div><div class=\"line\">名称间要用空格隔开。</div></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">grid-template-rows</span>:    <span class=\"selector-attr\">[row-start row-1-start]</span> 1<span class=\"selector-tag\">fr</span> <span class=\"selector-attr\">[row-1-end row-2-start]</span> 1<span class=\"selector-tag\">fr</span> <span class=\"selector-attr\">[row-2-end row-end]</span>;</div><div class=\"line\"><span class=\"selector-tag\">grid-template-columns</span>: <span class=\"selector-attr\">[col-start]</span> 1<span class=\"selector-tag\">fr</span> <span class=\"selector-attr\">[col-2-start]</span> 1<span class=\"selector-tag\">fr</span> <span class=\"selector-attr\">[col-3-start]</span> 1<span class=\"selector-tag\">fr</span> <span class=\"selector-attr\">[col-end]</span>;</div></pre></td></tr></table></figure>\n<p><img class=\"br10\" src=\"/2018/05/18/css3-grid/c14.png\"><br></p>\n<blockquote>\n<p>每一个网格线的名称可以用来定位网格项目的位置。</p>\n</blockquote>\n<h2 id=\"通过网格线名称设置网格项目位置\"><a href=\"#通过网格线名称设置网格项目位置\" class=\"headerlink\" title=\"通过网格线名称设置网格项目位置\"></a>通过网格线名称设置网格项目位置</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">使用网格线名称设置网格项目位置和使用网格线号码设置网格项目位置类似。</div></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">grid-row-start</span>:    <span class=\"selector-tag\">row-2-start</span>;</div><div class=\"line\"><span class=\"selector-tag\">grid-row-end</span>:      <span class=\"selector-tag\">row-end</span>;</div><div class=\"line\"><span class=\"selector-tag\">grid-column-start</span>: <span class=\"selector-tag\">col-2-start</span>;</div><div class=\"line\"><span class=\"selector-tag\">grid-column-end</span>:   <span class=\"selector-tag\">col-end</span>;</div></pre></td></tr></table></figure>\n<p><img class=\"br10\" src=\"/2018/05/18/css3-grid/c15.png\"><br></p>\n<blockquote>\n<p>引用网格线名称的时候不应该带方括号</p>\n</blockquote>\n<p><a href=\"https://codepen.io/Frank_/pen/LQarGv?editors=1100\" target=\"_blank\" rel=\"external\">demo</a></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">grid-row和grid-column简写属性也适用于网格线名称，也可以用来设置网格项目的位置。</div></pre></td></tr></table></figure>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">grid-row:    row-2-start / row-end;</div><div class=\"line\">grid-column: col-2-start / col-end;</div></pre></td></tr></table></figure>\n<p><img class=\"br10\" src=\"/2018/05/18/css3-grid/c16.png\"></p>\n<p><a href=\"https://codepen.io/Frank_/pen/LQarGv?editors=1100\" target=\"_blank\" rel=\"external\">demo</a></p>\n<h2 id=\"使用相同的名称命名网格线和设置网格项目位置\"><a href=\"#使用相同的名称命名网格线和设置网格项目位置\" class=\"headerlink\" title=\"使用相同的名称命名网格线和设置网格项目位置\"></a>使用相同的名称命名网格线和设置网格项目位置</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">使用repeat()函数可以给网格线分配相同的名称。</div><div class=\"line\">这可以节省一定的时间。</div></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">grid-template-rows</span>: <span class=\"selector-tag\">repeat</span>(3, <span class=\"selector-attr\">[row-start]</span> 1<span class=\"selector-tag\">fr</span> <span class=\"selector-attr\">[row-end]</span>);</div><div class=\"line\"><span class=\"selector-tag\">grid-template-columns</span>: <span class=\"selector-tag\">repeat</span>(3, <span class=\"selector-attr\">[col-start]</span> 1<span class=\"selector-tag\">fr</span> <span class=\"selector-attr\">[col-end]</span>);</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">使用repeat()函数可以给网格线命名，</div><div class=\"line\">这也导致多个网格线具有相同的网格线名称。</div><div class=\"line\">~~~~~~~~~~~~~~~~~~~~~~</div><div class=\"line\">相同网格线名称指定网格线的位置和名称，</div><div class=\"line\">也且会自动在网格线名称后面添加对应的数字，</div><div class=\"line\">使其网格线名称也是唯一的标识符。</div></pre></td></tr></table></figure>\n<p><img class=\"br10\" src=\"/2018/05/18/css3-grid/c17.png\"></p>\n<h3 id=\"使用相同的网格线名称可以设置网格项目的位置\"><a href=\"#使用相同的网格线名称可以设置网格项目的位置\" class=\"headerlink\" title=\"使用相同的网格线名称可以设置网格项目的位置\"></a>使用相同的网格线名称可以设置网格项目的位置</h3><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">grid-row: row-start 2 / row-end 3;</div><div class=\"line\">grid-column: col-start / col-start 3;</div></pre></td></tr></table></figure>\n<blockquote>\n<p>网格线的名称和数字之间需要用空格分开。</p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">在这个示例中，</div><div class=\"line\">item1放置位置是row-start第2条开始，至row-end的第3条结束，</div><div class=\"line\">这用来设置item1在行的起始和结束位置；</div><div class=\"line\">-------------------</div><div class=\"line\">col-start的第1条开始，至col-start的第3条结束</div><div class=\"line\">（col-start的第3条也对应的是col-end的第2条），</div><div class=\"line\">用来设置item1在列的起始位置和结束位置。</div></pre></td></tr></table></figure>\n<p><img class=\"br10\" src=\"/2018/05/18/css3-grid/c18.png\"></p>\n<h3 id=\"通过网格区域命名和定位网格项目-（一）\"><a href=\"#通过网格区域命名和定位网格项目-（一）\" class=\"headerlink\" title=\"通过网格区域命名和定位网格项目 （一）\"></a>通过网格区域命名和定位网格项目 （一）</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">通过引用 grid-area 属性指定的 网格区域(Grid Area) 名称来定义网格模板。</div><div class=\"line\">重复网格区域的名称导致内容跨越这些单元格。</div><div class=\"line\">一个点号（.）代表一个空的网格单元。</div><div class=\"line\">这个语法本身可视作网格的可视化结构。</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">grid-area-name</span>&gt;</span>：</div><div class=\"line\">由网格项的 grid-area 指定的网格区域名称</div><div class=\"line\">.（点号） ：代表一个空的网格单元</div><div class=\"line\">none：不定义网格区域</div></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.container</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">grid-template-areas</span>: </div><div class=\"line\">    <span class=\"string\">\" | . | none | ...\"</span></div><div class=\"line\">    <span class=\"string\">\"...\"</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\"> <span class=\"selector-class\">.container</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">grid-template-columns</span>: <span class=\"number\">50px</span> <span class=\"number\">50px</span> <span class=\"number\">50px</span> <span class=\"number\">50px</span>;</div><div class=\"line\">  <span class=\"attribute\">grid-template-rows</span>: auto;</div><div class=\"line\">  <span class=\"attribute\">grid-template-areas</span>: </div><div class=\"line\">    <span class=\"string\">\"header header header header\"</span></div><div class=\"line\">    <span class=\"string\">\"main main . sidebar\"</span></div><div class=\"line\">    <span class=\"string\">\"footer footer footer footer\"</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.item-a</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">grid-area</span>: header;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.item-b</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">grid-area</span>: main;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.item-c</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">grid-area</span>: sidebar;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.item-d</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">grid-area</span>: footer;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">上面的代码将创建一个 4 列 3 行的网格。</div><div class=\"line\">整个顶行将由 header 区域 组成。</div><div class=\"line\">中间一排将由两个 main 区域，</div><div class=\"line\">一个是空单元格，一个 sidebar 区域组成。</div><div class=\"line\">最后一行全是 footer 区域组成。</div></pre></td></tr></table></figure>\n<p><img class=\"br10\" src=\"/2018/05/18/css3-grid/c34.png\"><br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">你的声明中的每一行都需要有相同数量的单元格。</div><div class=\"line\">你可以使用任意数量的相邻的 点. 来声明单个空单元格。 </div><div class=\"line\">只要这些点.之间没有空隙隔开，他们就表示一个单一的单元格。</div></pre></td></tr></table></figure></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">注意你 [并非]用这个语法来命名\b\b网格线，只是命名网格区域。</div><div class=\"line\">当你使用这种语法时，区域两端的\b\b网格线实际上是自动命名的。</div><div class=\"line\">如果你的网格区域的名字是 foo，</div><div class=\"line\">该区域的起始 行网格线 和起始 列网格线 的名称将是 foo-start，</div><div class=\"line\">而最后一行 行网格线 和最后一列 列网格线 的名字是 foo-end。</div><div class=\"line\">这意味着一些网格线可能有多个名字，</div><div class=\"line\">如上例中最左边的网格线，它将有三个名称：header-start，main-start 和 footer-start 。</div></pre></td></tr></table></figure>\n<h3 id=\"通过网格区域命名和定位网格项目-二\"><a href=\"#通过网格区域命名和定位网格项目-二\" class=\"headerlink\" title=\"通过网格区域命名和定位网格项目 (二)\"></a>通过网格区域命名和定位网格项目 (二)</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">像网格线名称一样，网格区域的名称也可以使用grid-template-areas属性来命名。</div><div class=\"line\">引用网格区域名称也可以设置网格项目位置。</div></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">grid-template-areas</span>: \"<span class=\"selector-tag\">header</span> <span class=\"selector-tag\">header</span>\"</div><div class=\"line\">                     \"<span class=\"selector-tag\">content</span> <span class=\"selector-tag\">sidebar</span>\"</div><div class=\"line\">                     \"<span class=\"selector-tag\">footer</span> <span class=\"selector-tag\">footer</span>\";</div><div class=\"line\"><span class=\"selector-tag\">grid-template-rows</span>:  150<span class=\"selector-tag\">px</span> 1<span class=\"selector-tag\">fr</span> 100<span class=\"selector-tag\">px</span>;</div><div class=\"line\"><span class=\"selector-tag\">grid-template-columns</span>: 1<span class=\"selector-tag\">fr</span> 200<span class=\"selector-tag\">px</span>;</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">设置网格区域的名称应该放置在单引号或双引号内，每个名称由一个空格符分开。</div><div class=\"line\">网格区域的名称，每组（单引号或双引号内的网格区域名称）定义了网格的一行，</div><div class=\"line\">每个网格区域名称定义网格的一列。</div></pre></td></tr></table></figure>\n<p><img class=\"br10\" src=\"/2018/05/18/css3-grid/c19.png\"></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">grid-row-start、grid-row-end、</div><div class=\"line\">grid-column-start和grid-column-end</div><div class=\"line\">可以引用网格区域名称，用来设置网格项目位置。</div></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">grid-row-start</span>:    <span class=\"selector-tag\">header</span>;</div><div class=\"line\"><span class=\"selector-tag\">grid-row-end</span>:      <span class=\"selector-tag\">header</span>;</div><div class=\"line\"><span class=\"selector-tag\">grid-column-start</span>: <span class=\"selector-tag\">header</span>;</div><div class=\"line\"><span class=\"selector-tag\">grid-column-end</span>:   <span class=\"selector-tag\">header</span>;</div></pre></td></tr></table></figure>\n<p><img class=\"br10\" src=\"/2018/05/18/css3-grid/c20.png\"></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">grid-row</span>:    <span class=\"selector-tag\">footer</span>;</div><div class=\"line\"><span class=\"selector-tag\">grid-column</span>: <span class=\"selector-tag\">footer</span>;</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">简写的grid-row和grid-column也可以引用网格区域名称，</div><div class=\"line\">设置网格项目的位置。</div></pre></td></tr></table></figure>\n<p><img class=\"br10\" src=\"/2018/05/18/css3-grid/c21.png\"></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">grid-area</span>: <span class=\"selector-tag\">sidebar</span>;</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">grid-area简写属性也可以引用网格区域的名称来设置网格项目的位置。</div></pre></td></tr></table></figure>\n<p><img class=\"br10\" src=\"/2018/05/18/css3-grid/c22.png\"></p>\n<h2 id=\"隐式网格\"><a href=\"#隐式网格\" class=\"headerlink\" title=\"隐式网格\"></a>隐式网格</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">当网格项目确认在显式网格之外时就会创建隐性网格，</div><div class=\"line\">当没有足够的空间或者显式的网格轨道来设置网格项目，</div><div class=\"line\">此时网格项目就会自动创建隐式网格。</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">使用grid-auto-rows、</div><div class=\"line\">grid-auto-columns和grid-auto-flow</div><div class=\"line\">属性可以定义隐式的网格。</div></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">grid-template-rows</span>:    70<span class=\"selector-tag\">px</span>;</div><div class=\"line\"><span class=\"selector-tag\">grid-template-columns</span>: <span class=\"selector-tag\">repeat</span>(2, 1<span class=\"selector-tag\">fr</span>);</div><div class=\"line\"><span class=\"selector-tag\">grid-auto-rows</span>:        140<span class=\"selector-tag\">px</span>;</div></pre></td></tr></table></figure>\n<p><img class=\"br10\" src=\"/2018/05/18/css3-grid/c23.jpg\"></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">grid-template-rows</span>:    70<span class=\"selector-tag\">px</span>;</div><div class=\"line\"><span class=\"selector-tag\">grid-template-columns</span>: <span class=\"selector-tag\">repeat</span>(2, 1<span class=\"selector-tag\">fr</span>);</div><div class=\"line\"><span class=\"selector-tag\">grid-auto-rows</span>:        140<span class=\"selector-tag\">px</span>;</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">在这个例子中我们只定义了一行（轨道），</div><div class=\"line\">所以item1和item2的高都是70px。</div><div class=\"line\">~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</div><div class=\"line\">第二行（轨道）自动创建了item3和item4空间。</div><div class=\"line\">grid-auto-rows定义隐式网格中的行（轨道）的大小，</div><div class=\"line\">因此item3和item4的高度是140px。</div></pre></td></tr></table></figure>\n<p><a href=\"https://codepen.io/Frank_/pen/ZxBoeV?editors=1100\" target=\"_blank\" rel=\"external\">demo1</a></p>\n<h3 id=\"网格默认流方向\"><a href=\"#网格默认流方向\" class=\"headerlink\" title=\"网格默认流方向\"></a>网格默认流方向</h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">//网格默认流方向是row</div><div class=\"line\"><span class=\"selector-tag\">grid-auto-row</span>: <span class=\"selector-tag\">row</span></div></pre></td></tr></table></figure>\n<p><img class=\"br10\" src=\"/2018/05/18/css3-grid/c24.jpg\"></p>\n<p><a href=\"https://codepen.io/Frank_/pen/ZxBoeV?editors=1100\" target=\"_blank\" rel=\"external\">demo2</a></p>\n<h3 id=\"更改网格流方向\"><a href=\"#更改网格流方向\" class=\"headerlink\" title=\"更改网格流方向\"></a>更改网格流方向</h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">//可以把网格流的方向改变成column</div><div class=\"line\"><span class=\"selector-tag\">grid-auto-flow</span>: <span class=\"selector-tag\">column</span></div></pre></td></tr></table></figure>\n<p><img class=\"br10\" src=\"/2018/05/18/css3-grid/c25.jpg\"></p>\n<p><a href=\"https://codepen.io/Frank_/pen/ZxBoeV?editors=1100\" target=\"_blank\" rel=\"external\">demo2</a></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">grid-template-columns</span>: 100<span class=\"selector-tag\">px</span> 200<span class=\"selector-tag\">px</span>;</div><div class=\"line\"><span class=\"selector-tag\">grid-auto-flow</span>:        <span class=\"selector-tag\">column</span>;</div><div class=\"line\"><span class=\"selector-tag\">grid-auto-columns</span>:     1<span class=\"selector-tag\">fr</span>;</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">在这个例子中，我们只定义了前两列的轨道尺寸。</div><div class=\"line\">item1的尺寸是100px，item2的尺寸是200px。</div><div class=\"line\">-------------------------------------------</div><div class=\"line\">使用grid-auto-flow:column自动创建了隐式网格，</div><div class=\"line\">用来放置item3、item4和item5，</div><div class=\"line\">并且这三个列（轨道）的尺寸由grid-auto-columns来定义。</div></pre></td></tr></table></figure>\n<p><img class=\"br10\" src=\"/2018/05/18/css3-grid/c26.jpg\"></p>\n<p><a href=\"https://codepen.io/Frank_/pen/ZxBoeV?editors=1100\" target=\"_blank\" rel=\"external\">demo3</a></p>\n<h3 id=\"隐式地命名网格区域名称\"><a href=\"#隐式地命名网格区域名称\" class=\"headerlink\" title=\"隐式地命名网格区域名称\"></a>隐式地命名网格区域名称</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">通常可以将网格线命名成任何你想命名的名称，</div><div class=\"line\">如果网格线名称添加-start和-end的后缀，</div><div class=\"line\">其实也隐式的创建一个网格区域，可以用来设置网格项目的位置。</div></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">grid-template-rows</span>:    <span class=\"selector-attr\">[outer-start]</span> 1<span class=\"selector-tag\">fr</span> <span class=\"selector-attr\">[inner-start]</span> 1<span class=\"selector-tag\">fr</span> <span class=\"selector-attr\">[inner-end]</span> 1<span class=\"selector-tag\">fr</span> <span class=\"selector-attr\">[outer-end]</span>;</div><div class=\"line\"><span class=\"selector-tag\">grid-template-columns</span>: <span class=\"selector-attr\">[outer-start]</span> 1<span class=\"selector-tag\">fr</span> <span class=\"selector-attr\">[inner-start]</span> 1<span class=\"selector-tag\">fr</span> <span class=\"selector-attr\">[inner-end]</span> 1<span class=\"selector-tag\">fr</span> <span class=\"selector-attr\">[inner-end]</span>;</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">在这个示例中，</div><div class=\"line\">行和列都具有inner-start和inner-end网格线名称，</div><div class=\"line\">同时也对应的创建一个隐式网格区域名称inner。</div></pre></td></tr></table></figure>\n<p><img class=\"br10\" src=\"/2018/05/18/css3-grid/c27.png\"><br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">grid-area</span>: <span class=\"selector-tag\">inner</span></div></pre></td></tr></table></figure></p>\n<blockquote>\n<p>网格项目定位可以通过网格区域名称来设置，而不需要使用网格线名称。</p>\n</blockquote>\n<h3 id=\"隐式命名网格线名称\"><a href=\"#隐式命名网格线名称\" class=\"headerlink\" title=\"隐式命名网格线名称\"></a>隐式命名网格线名称</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">隐式的指定网格线反向指定了隐式的网格区域名称，</div><div class=\"line\">命名的网格区域隐式的命名了网格线名称。</div></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">grid-template-areas</span>:   \"<span class=\"selector-tag\">header</span> <span class=\"selector-tag\">header</span>\"</div><div class=\"line\">                        \"<span class=\"selector-tag\">content</span> <span class=\"selector-tag\">sidebar</span>\"</div><div class=\"line\">                        \"<span class=\"selector-tag\">footer</span> <span class=\"selector-tag\">footer</span>\";</div><div class=\"line\"><span class=\"selector-tag\">grid-template-rows</span>:    80<span class=\"selector-tag\">px</span> 1<span class=\"selector-tag\">fr</span> 40<span class=\"selector-tag\">px</span>;</div><div class=\"line\"><span class=\"selector-tag\">grid-template-columns</span>: 1<span class=\"selector-tag\">fr</span> 200<span class=\"selector-tag\">px</span>;</div></pre></td></tr></table></figure>\n<p><img class=\"br10\" src=\"/2018/05/18/css3-grid/c28.png\"></p>\n<p><a href=\"https://codepen.io/Frank_/pen/vRyrOW?editors=1100\" target=\"_blank\" rel=\"external\">demo</a></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">grid-row-start</span>:    <span class=\"selector-tag\">header-start</span>;</div><div class=\"line\"><span class=\"selector-tag\">grid-row-end</span>:      <span class=\"selector-tag\">content-start</span>;</div><div class=\"line\"><span class=\"selector-tag\">grid-column-start</span>: <span class=\"selector-tag\">footer-start</span>;</div><div class=\"line\"><span class=\"selector-tag\">grid-column-end</span>:   <span class=\"selector-tag\">sidebar-end</span>;</div></pre></td></tr></table></figure>\n<p><img class=\"br10\" src=\"/2018/05/18/css3-grid/c29.png\"></p>\n<blockquote>\n<p>在这个示例中,header通过隐式的网格线名称设置其位置。</p>\n</blockquote>\n<h3 id=\"网格项目层级\"><a href=\"#网格项目层级\" class=\"headerlink\" title=\"网格项目层级\"></a>网格项目层级</h3><p> 网格项目可以具有层级和堆栈，必要时可能通过z-index属性来指定</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.item-a</span>,</div><div class=\"line\"><span class=\"selector-class\">.item-b</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">grid-row-start</span>:  <span class=\"number\">1</span>;</div><div class=\"line\">    <span class=\"attribute\">grid-column-end</span>: span <span class=\"number\">2</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.item-a</span> &#123; </div><div class=\"line\">    <span class=\"attribute\">grid-column-start</span>: <span class=\"number\">1</span>; </div><div class=\"line\">    <span class=\"attribute\">z-index</span>: <span class=\"number\">1</span>; </div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.item-b1</span> &#123; </div><div class=\"line\">    <span class=\"attribute\">grid-column-start</span>: <span class=\"number\">2</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><img class=\"br10\" src=\"/2018/05/18/css3-grid/c30.jpg\"></p>\n<p><a href=\"https://codepen.io/Frank_/pen/PRbaeX?editors=1100\" target=\"_blank\" rel=\"external\">demo</a></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">在这个例子中，itema和itemb的开始行都是1，</div><div class=\"line\">item-a列的开始是1，</div><div class=\"line\">item-b列的开始是2，</div><div class=\"line\">并且它们都跨越两列。</div><div class=\"line\">两个网格项目都是由网格线数字定位，结果这两个网格项目重叠了。</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">默认情况下，item-b在item1上面，</div><div class=\"line\">但是，我们在item-a中设置了z-index:1;</div><div class=\"line\">导致item-a在item-b之上。</div><div class=\"line\">当然 ，我们可以设置item-b:z-index:2</div></pre></td></tr></table></figure>\n<p><img class=\"br10\" src=\"/2018/05/18/css3-grid/c30.jpg\"></p>\n<h2 id=\"网格项目对齐方式（Box-Alignment）\"><a href=\"#网格项目对齐方式（Box-Alignment）\" class=\"headerlink\" title=\"网格项目对齐方式（Box Alignment）\"></a>网格项目对齐方式（Box Alignment）</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">justify-items和justify-self指定网格项目沿着行轴对齐方式；</div><div class=\"line\">align-items和align-self指定网格项目沿着列轴对齐方式。</div></pre></td></tr></table></figure>\n<h3 id=\"容器的属性\"><a href=\"#容器的属性\" class=\"headerlink\" title=\"容器的属性\"></a>容器的属性</h3><blockquote>\n<p>justify-items和align-items应用在网格容器上</p>\n</blockquote>\n<p><strong>它们的属性值有：</strong><br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">auto</span></div><div class=\"line\"><span class=\"selector-tag\">normal</span></div><div class=\"line\"><span class=\"selector-tag\">start</span></div><div class=\"line\"><span class=\"selector-tag\">end</span></div><div class=\"line\"><span class=\"selector-tag\">center</span></div><div class=\"line\"><span class=\"selector-tag\">stretch</span></div><div class=\"line\"><span class=\"selector-tag\">baseline</span></div><div class=\"line\"><span class=\"selector-tag\">first</span> <span class=\"selector-tag\">baseline</span></div><div class=\"line\"><span class=\"selector-tag\">last</span> <span class=\"selector-tag\">baseline</span></div></pre></td></tr></table></figure></p>\n<p><a href=\"https://codepen.io/Frank_/pen/VXPQgQ?editors=1100\" target=\"_blank\" rel=\"external\">demo</a></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.container</span> &#123;</div><div class=\"line\">  //定义在容器元素</div><div class=\"line\">  //水平方向</div><div class=\"line\">  // justify-items: start;</div><div class=\"line\">  <span class=\"selector-tag\">justify-items</span>: <span class=\"selector-tag\">center</span>;</div><div class=\"line\">  // justify-items: end;</div><div class=\"line\">  // justify-items: stretch;</div><div class=\"line\">  //垂直方向</div><div class=\"line\">  // align-items: start;</div><div class=\"line\">  <span class=\"selector-tag\">align-items</span>: <span class=\"selector-tag\">center</span>;</div><div class=\"line\">  // align-items: end;</div><div class=\"line\">  // align-items: stretch;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><img class=\"br10\" src=\"/2018/05/18/css3-grid/c31.jpg\"></p>\n<p><a href=\"https://codepen.io/Frank_/pen/VXPQgQ?editors=1100\" target=\"_blank\" rel=\"external\">demo</a></p>\n<blockquote>\n<p>align-self和justify-self属性用于网格项目自身对齐方式。</p>\n</blockquote>\n<p><strong>它们主要接受以下属性值：</strong><br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">auto</span></div><div class=\"line\"><span class=\"selector-tag\">normal</span></div><div class=\"line\"><span class=\"selector-tag\">start</span></div><div class=\"line\"><span class=\"selector-tag\">end</span></div><div class=\"line\"><span class=\"selector-tag\">center</span></div><div class=\"line\"><span class=\"selector-tag\">stretch</span></div><div class=\"line\"><span class=\"selector-tag\">baseline</span></div><div class=\"line\"><span class=\"selector-tag\">first</span> <span class=\"selector-tag\">baseline</span></div><div class=\"line\"><span class=\"selector-tag\">last</span> <span class=\"selector-tag\">baseline</span></div></pre></td></tr></table></figure></p>\n<p><strong>单个元素对齐方式</strong><br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.item-a</span> &#123; </div><div class=\"line\">    <span class=\"attribute\">justify-self</span>: center;</div><div class=\"line\">    <span class=\"attribute\">align-self</span>: center ;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p><img class=\"br10\" src=\"/2018/05/18/css3-grid/c32.jpg\"></p>\n<p><a href=\"https://codepen.io/Frank_/pen/OvWvGM?editors=1100\" target=\"_blank\" rel=\"external\">demo</a></p>\n<h3 id=\"网格轨道对齐方式\"><a href=\"#网格轨道对齐方式\" class=\"headerlink\" title=\"网格轨道对齐方式\"></a>网格轨道对齐方式</h3><p>网格轨道对齐可以相对于网格容器行和列轴。<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">align-content指定网格轨道沿着行轴对齐方式；</div><div class=\"line\">justify-content指定网格轨道沿着列轴对齐方式。</div></pre></td></tr></table></figure></p>\n<p><strong>它们支持下面属性：</strong><br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">normal</span></div><div class=\"line\"><span class=\"selector-tag\">start</span></div><div class=\"line\"><span class=\"selector-tag\">end</span></div><div class=\"line\"><span class=\"selector-tag\">center</span></div><div class=\"line\"><span class=\"selector-tag\">stretch</span></div><div class=\"line\"><span class=\"selector-tag\">space-around</span></div><div class=\"line\"><span class=\"selector-tag\">space-between</span></div><div class=\"line\"><span class=\"selector-tag\">space-evenly</span></div><div class=\"line\"><span class=\"selector-tag\">baseline</span></div><div class=\"line\"><span class=\"selector-tag\">first</span> <span class=\"selector-tag\">baseline</span></div><div class=\"line\"><span class=\"selector-tag\">last</span> <span class=\"selector-tag\">baseline</span></div></pre></td></tr></table></figure></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.container</span>&#123;</div><div class=\"line\">  <span class=\"attribute\">justify-content</span>: start | center | end;</div><div class=\"line\">  <span class=\"attribute\">justify-content</span>: space-around;</div><div class=\"line\">  <span class=\"attribute\">justify-content</span>: space-between;</div><div class=\"line\">  <span class=\"attribute\">justify-content</span>: space-evenly;</div><div class=\"line\">  </div><div class=\"line\">  <span class=\"attribute\">align-content</span>: start | center | end;</div><div class=\"line\">  <span class=\"attribute\">align-content</span>: space-around;</div><div class=\"line\">  <span class=\"attribute\">align-content</span>: space-between;</div><div class=\"line\">  <span class=\"attribute\">align-content</span>: space-evenly;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><img class=\"br10\" src=\"/2018/05/18/css3-grid/c33.jpg\"></p>\n<p><a href=\"https://codepen.io/Frank_/pen/NYdMva?editors=1100\" target=\"_blank\" rel=\"external\">demo</a></p>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a><span class=\"yellow3\">参考资料</span></h2><ul>\n<li><a href=\"https://www.w3cplus.com/css/learncssgrid.html\" target=\"_blank\" rel=\"external\">https://www.w3cplus.com/css/learncssgrid.html</a></li>\n<li><a href=\"http://www.css88.com/archives/8510\" target=\"_blank\" rel=\"external\">http://www.css88.com/archives/8510</a></li>\n<li><a href=\"https://caniuse.com/#feat=css-grid\" target=\"_blank\" rel=\"external\">https://caniuse.com/#feat=css-grid</a></li>\n<li><a href=\"https://www.w3cplus.com/css3/how-the-minmax-function-works.html?utm_source=tuicool&amp;utm_medium=referral\" target=\"_blank\" rel=\"external\">https://www.w3cplus.com/css3/how-the-minmax-function-works.html?utm_source=tuicool&amp;utm_medium=referral</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout\" target=\"_blank\" rel=\"external\">https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout</a></li>\n<li><a href=\"https://css-tricks.com/snippets/css/complete-guide-grid/\" target=\"_blank\" rel=\"external\">https://css-tricks.com/snippets/css/complete-guide-grid/</a></li>\n<li><a href=\"https://gridbyexample.com/\" target=\"_blank\" rel=\"external\">https://gridbyexample.com/</a></li>\n</ul>\n<p><br></p>\n<blockquote>\n<p>声明:本资料仅供学习交流，严禁使用于任何商业用途!<br>相关资料参考自<a href=\"https://www.w3cplus.com/css/learncssgrid.html\" target=\"_blank\" rel=\"external\">w3cplus</a>、<a href=\"http://www.css88.com/archives/8510\" target=\"_blank\" rel=\"external\">css88</a>、<a href=\"https://css-tricks.com/snippets/css/complete-guide-grid/\" target=\"_blank\" rel=\"external\">css-tricks</a>等博客内容。 如需转载，转载请注明出处。</p>\n</blockquote>\n<p><br></p>\n<h3 id=\"完\"><a href=\"#完\" class=\"headerlink\" title=\"完.\"></a>完.</h3>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"CSS3-Grid\"><a href=\"#CSS3-Grid\" class=\"headerlink\" title=\"CSS3 Grid\"></a>CSS3 Grid</h1><p><img class=\"br10\" src=\"/2018/05/18/css3-grid/c01.jpg\"></p>\n<p>css布局： <span class=\"yellow\">Table</span> <strong>-&gt;</strong> <span class=\"blue\">Float + Position </span><strong>–&gt;</strong> <span class=\"green\">Flex</span></p>\n<p>CSS Grid(网格) 布局（又称为 “Grid(网格)” ），是一个<code>二维</code>的基于网格的布局系统. 它的目标是完全改变我们基于网格的用户界面的布局方式。</p>\n<p>CSS Grid布局是目前CSS 中最强大的布局系统。与 <strong>flexbox</strong> 的一维布局系统不同，CSS Grid 布局是一个二维布局系统，也就意味着它可以同时处理<code>列和行</code>。</p>\n<p>通过将 CSS 规则应用于 <strong>父元素</strong> (成为 Grid Container 网格容器) 及 <strong>子元素</strong>（成为 Grid Items 网格项），你就可以轻松使用 Grid(网格) 布局。</p>\n<h3 id=\"浏览器支持caniuse\"><a href=\"#浏览器支持caniuse\" class=\"headerlink\" title=\"浏览器支持caniuse\"></a>浏览器支持<a href=\"https://caniuse.com/#feat=css-grid\" target=\"_blank\" rel=\"external\">caniuse</a></h3><p><img class=\"br10\" src=\"/2018/05/18/css3-grid/c02.jpg\"></p>\n<h2 id=\"重要术语\"><a href=\"#重要术语\" class=\"headerlink\" title=\"重要术语\"></a>重要术语</h2><ul>\n<li>网格容器(Grid Container)</li>\n<li>网格项(Grid Item)</li>\n<li>网格线(Grid Line)</li>\n<li>网格轨道(Grid Track)</li>\n<li>网格单元格(Grid Cell)</li>\n<li>网格区域(Grid Area)</li>\n<li>Grid(网格) 属性目录</li>\n</ul>\n<h2 id=\"网格容器\"><a href=\"#网格容器\" class=\"headerlink\" title=\"网格容器\"></a>网格容器</h2><p>Grid Container: 应用 display: grid 的元素。<br><br>这是所有网格项（Grid Items）的直接父级元素。<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">## 在这个例子中，container 就是 网格容器(Grid Container) ##</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"container\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item item-1\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item item-2\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item item-3\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<h2 id=\"网格项\"><a href=\"#网格项\" class=\"headerlink\" title=\"网格项\"></a>网格项</h2><p>Grid Item: 网格容器（Grid Container）的子元素。<br><br><strong>（例如直接子元素）</strong><br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">/** 注意 item 元素就是网格项(Grid Item)</div><div class=\"line\">但是 sub-item 不是。 **/</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"container\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span> </div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item\"</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">\"sub-item\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<h2 id=\"网格线\"><a href=\"#网格线\" class=\"headerlink\" title=\"网格线\"></a>网格线</h2><p>Grid Line: 构成网格结构的分界线。<br><br>它们既可以是垂直的（“列网格线(column grid lines)”）<br><br>也可以是水平的（“行网格线(row grid lines)”）<br><br>并位于行或列的任一侧<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">例如，这里的黄线就是一条列网格线</div></pre></td></tr></table></figure></p>\n<p><img class=\"br10\" src=\"/2018/05/18/css3-grid/c03.png\"></p>\n<h2 id=\"网格轨道\"><a href=\"#网格轨道\" class=\"headerlink\" title=\"网格轨道\"></a>网格轨道</h2><p>Grid Track: 两条相邻网格线之间的空间。<br><br>你可以把它们想象成网格的列或行<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">图是第二条和第三条 行网格线 之间的 网格轨道。</div></pre></td></tr></table></figure></p>\n<p><img class=\"br10\" src=\"/2018/05/18/css3-grid/c04.png\"></p>\n<h2 id=\"网格单元格\"><a href=\"#网格单元格\" class=\"headerlink\" title=\"网格单元格\"></a>网格单元格</h2><p>Grid Cell: 两个相邻的行和两个相邻的列网格线之间的空间。<br><br>这是 Grid(网格) 系统的一个“单元”。<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">图第1至第2条 行网格线 和第2至第3条 列网格线 交汇构成的 网格单元格</div></pre></td></tr></table></figure></p>\n<p><img class=\"br10\" src=\"/2018/05/18/css3-grid/c05.png\"></p>\n<h2 id=\"网格区域\"><a href=\"#网格区域\" class=\"headerlink\" title=\"网格区域\"></a>网格区域</h2><p>Grid Area: 4条网格线包围的总空间。<br><br>一个网格区域可以由任意数量的网格单元格组成。<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">图是 行网格线1和3，以及列网格线1和3 之间的网格区域。</div></pre></td></tr></table></figure></p>\n<p><img class=\"br10\" src=\"/2018/05/18/css3-grid/c06.png\"></p>\n<h2 id=\"Grid-网格-属性目录\"><a href=\"#Grid-网格-属性目录\" class=\"headerlink\" title=\"Grid(网格) 属性目录\"></a>Grid(网格) 属性目录</h2><p><strong>容器的属性</strong> &#91;16个&#93;<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\">* <span class=\"selector-tag\">display</span></div><div class=\"line\">* <span class=\"selector-tag\">grid-template-columns</span></div><div class=\"line\">* <span class=\"selector-tag\">grid-template-rows</span></div><div class=\"line\">* <span class=\"selector-tag\">grid-template-areas</span></div><div class=\"line\">* <span class=\"selector-tag\">grid-template</span></div><div class=\"line\">* <span class=\"selector-tag\">grid-column-gap</span></div><div class=\"line\">* <span class=\"selector-tag\">grid-row-gap</span></div><div class=\"line\">* <span class=\"selector-tag\">grid-gap</span></div><div class=\"line\">* <span class=\"selector-tag\">justify-items</span></div><div class=\"line\">* <span class=\"selector-tag\">align-items</span></div><div class=\"line\">* <span class=\"selector-tag\">justify-content</span></div><div class=\"line\">* <span class=\"selector-tag\">align-content</span></div><div class=\"line\">* <span class=\"selector-tag\">grid-auto-columns</span></div><div class=\"line\">* <span class=\"selector-tag\">grid-auto-rows</span></div><div class=\"line\">* <span class=\"selector-tag\">grid-auto-flow</span></div><div class=\"line\">* <span class=\"selector-tag\">grid</span></div></pre></td></tr></table></figure></p>\n<h2 id=\"Grid-网格-属性目录-1\"><a href=\"#Grid-网格-属性目录-1\" class=\"headerlink\" title=\"Grid(网格) 属性目录\"></a>Grid(网格) 属性目录</h2><p><strong>网格项的属性</strong> &#91;9个&#93;<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">* <span class=\"selector-tag\">grid-column-start</span></div><div class=\"line\">* <span class=\"selector-tag\">grid-column-end</span></div><div class=\"line\">* <span class=\"selector-tag\">grid-row-start</span></div><div class=\"line\">* <span class=\"selector-tag\">grid-row-end</span></div><div class=\"line\">* <span class=\"selector-tag\">grid-column</span></div><div class=\"line\">* <span class=\"selector-tag\">grid-row</span></div><div class=\"line\">* <span class=\"selector-tag\">grid-area</span></div><div class=\"line\">* <span class=\"selector-tag\">justify-self</span></div><div class=\"line\">* <span class=\"selector-tag\">align-self</span></div></pre></td></tr></table></figure></p>\n<h2 id=\"display\"><a href=\"#display\" class=\"headerlink\" title=\"display\"></a>display</h2><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.container</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">display</span>: grid | inline-grid | subgrid;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"父元素-网格容器-属性-display\"><a href=\"#父元素-网格容器-属性-display\" class=\"headerlink\" title=\"父元素 网格容器 属性 display \"></a>父元素 网格容器 属性 <strong>display</strong> <br></h2><blockquote>\n<p>将元素定义为网格容器,并为其内容建立新的 网格格式上下文。</p>\n</blockquote>\n<ul>\n<li><span class=\"green\">grid</span> ：生成一个块级网格</li>\n<li><span class=\"green\">inline-grid</span> ：生成一个内联网格</li>\n<li><span class=\"green\">subgrid</span> ：嵌套网格<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">subgrid:你希望它的行/列的大小继承自它的父级网格容器，而不是自己指定的。</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"column-amp-amp-row\"><a href=\"#column-amp-amp-row\" class=\"headerlink\" title=\"column &amp;&amp; row\"></a>column &amp;&amp; row</h2><ul>\n<li>grid-template-column<span class=\"green\">(列)</span></li>\n<li>grid-template-row<span class=\"green\">(行)</span></li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">column: 指定的每个值来创建每列的列宽</div><div class=\"line\">row: 指定的每个值可以创建每行的高度</div></pre></td></tr></table></figure>\n<p><a href=\"https://codepen.io/Frank_/pen/oEmEBX?editors=1100\" target=\"_blank\" rel=\"external\">demo</a></p>\n<h2 id=\"minmax\"><a href=\"#minmax\" class=\"headerlink\" title=\"minmax()\"></a>minmax()</h2><p>函数来创建网格轨道的最小或最大尺寸<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">minmax()函数接受两个参数：</div><div class=\"line\">第一个参数定义网格轨道的最小值，</div><div class=\"line\">第二个参数定义网格轨道的最大值。</div><div class=\"line\">可以接受任何长度值，也接受auto值。</div><div class=\"line\">auto值允许网格轨道基于内容的尺寸拉伸或挤压。</div></pre></td></tr></table></figure></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">grid-template-rows</span>: <span class=\"selector-tag\">minmax</span>(100<span class=\"selector-tag\">px</span>, <span class=\"selector-tag\">auto</span>); </div><div class=\"line\"><span class=\"selector-tag\">grid-template-columns</span>: <span class=\"selector-tag\">minmax</span>(<span class=\"selector-tag\">auto</span>, 50%) 1<span class=\"selector-tag\">fr</span> 3<span class=\"selector-tag\">em</span>;</div></pre></td></tr></table></figure>\n<blockquote>\n<p>在这个示例中，第一行的高度最小值是100px，但其最大值为auto，允许行高可以变大超过100px。</p>\n</blockquote>\n<p><a href=\"https://codepen.io/Frank_/pen/ZrwRjZ?editors=1100\" target=\"_blank\" rel=\"external\">demo</a></p>\n<h2 id=\"repeat-重复网格轨道\"><a href=\"#repeat-重复网格轨道\" class=\"headerlink\" title=\"repeat() 重复网格轨道\"></a>repeat() 重复网格轨道</h2><p>使用repeat()可以创建重复的网格轨道。</p>\n<blockquote>\n<p>这个适用于创建相等尺寸的网格项目和多个网格项目。</p>\n</blockquote>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">grid-template-columns</span>: 60<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">repeat</span>(2, 1<span class=\"selector-tag\">fr</span>);</div><div class=\"line\"><span class=\"selector-tag\">grid-template-rows</span>: <span class=\"selector-tag\">repeat</span>(2, 60<span class=\"selector-tag\">px</span>);</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">也接受两个参数：</div><div class=\"line\">第一个参数定义网格轨道应该重复的次数;</div><div class=\"line\">第二个参数定义每个轨道的尺寸。</div></pre></td></tr></table></figure>\n<p><a href=\"https://codepen.io/Frank_/pen/ZrwRjZ?editors=1100\" target=\"_blank\" rel=\"external\">demo</a></p>\n<h2 id=\"grid-gap-间距\"><a href=\"#grid-gap-间距\" class=\"headerlink\" title=\"grid-gap 间距\"></a>grid-gap 间距</h2><p>只能创建列与列或行与行之间的间距</p>\n<blockquote>\n<p>但不能创建列和行与网格容器边缘的间距</p>\n</blockquote>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">// 行间距 20px</div><div class=\"line\">// grid-row-gap: 20px;</div><div class=\"line\">// 列间距 5rem</div><div class=\"line\">// grid-column-gap: 5rem;</div><div class=\"line\"></div><div class=\"line\">#第一个值是设置<span class=\"selector-tag\">grid-row-gap</span>的值#</div><div class=\"line\">#第二个值设置<span class=\"selector-tag\">grid-column-gap</span>的值#</div><div class=\"line\">  <span class=\"selector-tag\">grid-gap</span>: 50<span class=\"selector-tag\">px</span> 1<span class=\"selector-tag\">em</span>;</div></pre></td></tr></table></figure>\n<p><a href=\"https://codepen.io/Frank_/pen/yvwpLe?editors=1100\" target=\"_blank\" rel=\"external\">demo</a></p>\n<h2 id=\"通过网格线号码来定位网格项目\"><a href=\"#通过网格线号码来定位网格项目\" class=\"headerlink\" title=\"通过网格线号码来定位网格项目\"></a>通过网格线号码来定位网格项目</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">网格线实际上是代表线的开始、结束，</div><div class=\"line\">两者之间就是网格列或行。</div></pre></td></tr></table></figure>\n<blockquote>\n<p>每条线是从网格轨道开始，网格的网格线从1开始，每条网格线逐步增加1</p>\n</blockquote>\n<p><br><br><img class=\"br10\" src=\"/2018/05/18/css3-grid/c08.png\"></p>\n<h2 id=\"网格线号\"><a href=\"#网格线号\" class=\"headerlink\" title=\"网格线号\"></a>网格线号</h2><p><img class=\"br10\" src=\"/2018/05/18/css3-grid/c07.jpg\"></p>\n<p><a href=\"https://codepen.io/Frank_/pen/jZJZZz?editors=1100\" target=\"_blank\" rel=\"external\">demo</a></p>\n<h2 id=\"网格线号-1\"><a href=\"#网格线号-1\" class=\"headerlink\" title=\"网格线号\"></a>网格线号</h2><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">grid-row-start</span>: 2;</div><div class=\"line\"><span class=\"selector-tag\">grid-row-end</span>: 3;</div><div class=\"line\"><span class=\"selector-tag\">grid-column-start</span>: 2;</div><div class=\"line\"><span class=\"selector-tag\">grid-column-end</span>: 3;</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">两列三行的网格创建三条列网格线和四条行网格线。</div><div class=\"line\">item1就是由行和列的号码重新定位。</div><div class=\"line\">----------------------------</div><div class=\"line\">如果一个网格项目跨度只有一行或一列，</div><div class=\"line\">那么grid-row-end和grid-column-end不是必需的。</div></pre></td></tr></table></figure>\n<p><img class=\"br10\" src=\"/2018/05/18/css3-grid/c09.jpg\"></p>\n<p><a href=\"https://codepen.io/Frank_/pen/jZJZZz?editors=1100\" target=\"_blank\" rel=\"external\">demo</a></p>\n<h2 id=\"网格\"><a href=\"#网格\" class=\"headerlink\" title=\"网格\"></a>网格</h2><p>简写: 两个值</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">grid-row是grid-row-start和grid-row-end的简写。</div><div class=\"line\">grid-column是grid-column-start和grid-column-end的简写。</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">grid-row: 2;</div><div class=\"line\">grid-column: 3 / 4;</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">如果提供两个值，</div><div class=\"line\">第一个值是grid-row-start、grid-column-start的值，</div><div class=\"line\">第二个值是grid-row-end、grid-column-end的值，</div><div class=\"line\">两者之间必须要用/隔开。</div></pre></td></tr></table></figure>\n<p><a href=\"https://codepen.io/Frank_/pen/jZJZZz?editors=1100\" target=\"_blank\" rel=\"external\">demo</a></p>\n<h2 id=\"网格-1\"><a href=\"#网格-1\" class=\"headerlink\" title=\"网格\"></a>网格</h2><p>简写: 四个值</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">grid-area: 2 / 2 / 3 / 3;</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">如果指定四个值:</div><div class=\"line\">第一个值对应grid-row-start，</div><div class=\"line\">第二个值对应grid-column-start，</div><div class=\"line\">第三个值对应grid-row-end</div><div class=\"line\">第四个值对应grid-column-end</div></pre></td></tr></table></figure>\n<p><a href=\"https://codepen.io/Frank_/pen/jZJZZz?editors=1100\" target=\"_blank\" rel=\"external\">demo</a></p>\n<h2 id=\"网格项目跨行或跨列\"><a href=\"#网格项目跨行或跨列\" class=\"headerlink\" title=\"网格项目跨行或跨列\"></a>网格项目跨行或跨列</h2><blockquote>\n<p>默认情况下网格项目跨度只有一个列和行，但可以跨越多个行和列</p>\n</blockquote>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">grid-column-start</span>: 1;</div><div class=\"line\"><span class=\"selector-tag\">grid-column-end</span>: 4;</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">可以通过设置grid-column-end和grid-column-start距离多个网络线号实现多个列跨越。</div></pre></td></tr></table></figure>\n<p><img class=\"br10\" src=\"/2018/05/18/css3-grid/c10.jpg\"></p>\n<p><a href=\"https://codepen.io/Frank_/pen/RQdywY?editors=1100\" target=\"_blank\" rel=\"external\">demo</a></p>\n<h2 id=\"网格项目跨行或跨列-1\"><a href=\"#网格项目跨行或跨列-1\" class=\"headerlink\" title=\"网格项目跨行或跨列\"></a>网格项目跨行或跨列</h2><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">grid-row-start</span>: 1;</div><div class=\"line\"><span class=\"selector-tag\">grid-row-end</span>: 5;</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">同样的可以通过grid-row-end和grid-row-start距离多个网格号实现多个行跨越。</div></pre></td></tr></table></figure>\n<p><img class=\"br10\" src=\"/2018/05/18/css3-grid/c11.jpg\"></p>\n<p><a href=\"https://codepen.io/Frank_/pen/RQdywY?editors=1100\" target=\"_blank\" rel=\"external\">demo</a></p>\n<h2 id=\"网格项目跨行或跨列-2\"><a href=\"#网格项目跨行或跨列-2\" class=\"headerlink\" title=\"网格项目跨行或跨列\"></a>网格项目跨行或跨列</h2><blockquote>\n<p>合并 span</p>\n<p>关键词span后面紧随数字，表示合并多少个列或行。</p>\n</blockquote>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">grid-row: 2 / span 2;</div><div class=\"line\"><span class=\"selector-tag\">grid-column</span>: <span class=\"selector-tag\">span</span> 2;</div></pre></td></tr></table></figure>\n<p><img class=\"br10\" src=\"/2018/05/18/css3-grid/c12.jpg\"></p>\n<p><a href=\"https://codepen.io/Frank_/pen/RQdywY?editors=1100\" target=\"_blank\" rel=\"external\">demo</a></p>\n<h2 id=\"网格线命名\"><a href=\"#网格线命名\" class=\"headerlink\" title=\"网格线命名\"></a>网格线命名</h2><ul>\n<li>定义网格时，网格线可以被命名。</li>\n<li>网格线名称也可以设置网格项目位置。</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">grid-template-rows</span>:    <span class=\"selector-attr\">[row-1-start]</span> 1<span class=\"selector-tag\">fr</span> <span class=\"selector-attr\">[row-2-start]</span> 1<span class=\"selector-tag\">fr</span> <span class=\"selector-attr\">[row-2-end]</span>;</div><div class=\"line\"><span class=\"selector-tag\">grid-template-columns</span>: <span class=\"selector-attr\">[col-1-start]</span> 1<span class=\"selector-tag\">fr</span> <span class=\"selector-attr\">[col-2-start]</span> 1<span class=\"selector-tag\">fr</span> <span class=\"selector-attr\">[col-3-start]</span> 1<span class=\"selector-tag\">fr</span> <span class=\"selector-attr\">[col-3-end]</span>;</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">grid-template-rows和grid-template-columns定义你的网格，将名称分配给网格线。</div><div class=\"line\">分配网格线名称必须用方括号[网格线名称]，</div><div class=\"line\">然后后面紧跟网格轨道的尺寸值。</div></pre></td></tr></table></figure>\n<p><img class=\"br10\" src=\"/2018/05/18/css3-grid/c13.png\"></p>\n<p><a href=\"https://codepen.io/Frank_/pen/LQarGv?editors=1100\" target=\"_blank\" rel=\"external\">demo</a></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">可以在方括号中添加多个名称来命名网格线名称，</div><div class=\"line\">使用多外名称命名网格线名称时，</div><div class=\"line\">名称间要用空格隔开。</div></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">grid-template-rows</span>:    <span class=\"selector-attr\">[row-start row-1-start]</span> 1<span class=\"selector-tag\">fr</span> <span class=\"selector-attr\">[row-1-end row-2-start]</span> 1<span class=\"selector-tag\">fr</span> <span class=\"selector-attr\">[row-2-end row-end]</span>;</div><div class=\"line\"><span class=\"selector-tag\">grid-template-columns</span>: <span class=\"selector-attr\">[col-start]</span> 1<span class=\"selector-tag\">fr</span> <span class=\"selector-attr\">[col-2-start]</span> 1<span class=\"selector-tag\">fr</span> <span class=\"selector-attr\">[col-3-start]</span> 1<span class=\"selector-tag\">fr</span> <span class=\"selector-attr\">[col-end]</span>;</div></pre></td></tr></table></figure>\n<p><img class=\"br10\" src=\"/2018/05/18/css3-grid/c14.png\"><br></p>\n<blockquote>\n<p>每一个网格线的名称可以用来定位网格项目的位置。</p>\n</blockquote>\n<h2 id=\"通过网格线名称设置网格项目位置\"><a href=\"#通过网格线名称设置网格项目位置\" class=\"headerlink\" title=\"通过网格线名称设置网格项目位置\"></a>通过网格线名称设置网格项目位置</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">使用网格线名称设置网格项目位置和使用网格线号码设置网格项目位置类似。</div></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">grid-row-start</span>:    <span class=\"selector-tag\">row-2-start</span>;</div><div class=\"line\"><span class=\"selector-tag\">grid-row-end</span>:      <span class=\"selector-tag\">row-end</span>;</div><div class=\"line\"><span class=\"selector-tag\">grid-column-start</span>: <span class=\"selector-tag\">col-2-start</span>;</div><div class=\"line\"><span class=\"selector-tag\">grid-column-end</span>:   <span class=\"selector-tag\">col-end</span>;</div></pre></td></tr></table></figure>\n<p><img class=\"br10\" src=\"/2018/05/18/css3-grid/c15.png\"><br></p>\n<blockquote>\n<p>引用网格线名称的时候不应该带方括号</p>\n</blockquote>\n<p><a href=\"https://codepen.io/Frank_/pen/LQarGv?editors=1100\" target=\"_blank\" rel=\"external\">demo</a></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">grid-row和grid-column简写属性也适用于网格线名称，也可以用来设置网格项目的位置。</div></pre></td></tr></table></figure>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">grid-row:    row-2-start / row-end;</div><div class=\"line\">grid-column: col-2-start / col-end;</div></pre></td></tr></table></figure>\n<p><img class=\"br10\" src=\"/2018/05/18/css3-grid/c16.png\"></p>\n<p><a href=\"https://codepen.io/Frank_/pen/LQarGv?editors=1100\" target=\"_blank\" rel=\"external\">demo</a></p>\n<h2 id=\"使用相同的名称命名网格线和设置网格项目位置\"><a href=\"#使用相同的名称命名网格线和设置网格项目位置\" class=\"headerlink\" title=\"使用相同的名称命名网格线和设置网格项目位置\"></a>使用相同的名称命名网格线和设置网格项目位置</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">使用repeat()函数可以给网格线分配相同的名称。</div><div class=\"line\">这可以节省一定的时间。</div></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">grid-template-rows</span>: <span class=\"selector-tag\">repeat</span>(3, <span class=\"selector-attr\">[row-start]</span> 1<span class=\"selector-tag\">fr</span> <span class=\"selector-attr\">[row-end]</span>);</div><div class=\"line\"><span class=\"selector-tag\">grid-template-columns</span>: <span class=\"selector-tag\">repeat</span>(3, <span class=\"selector-attr\">[col-start]</span> 1<span class=\"selector-tag\">fr</span> <span class=\"selector-attr\">[col-end]</span>);</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">使用repeat()函数可以给网格线命名，</div><div class=\"line\">这也导致多个网格线具有相同的网格线名称。</div><div class=\"line\">~~~~~~~~~~~~~~~~~~~~~~</div><div class=\"line\">相同网格线名称指定网格线的位置和名称，</div><div class=\"line\">也且会自动在网格线名称后面添加对应的数字，</div><div class=\"line\">使其网格线名称也是唯一的标识符。</div></pre></td></tr></table></figure>\n<p><img class=\"br10\" src=\"/2018/05/18/css3-grid/c17.png\"></p>\n<h3 id=\"使用相同的网格线名称可以设置网格项目的位置\"><a href=\"#使用相同的网格线名称可以设置网格项目的位置\" class=\"headerlink\" title=\"使用相同的网格线名称可以设置网格项目的位置\"></a>使用相同的网格线名称可以设置网格项目的位置</h3><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">grid-row: row-start 2 / row-end 3;</div><div class=\"line\">grid-column: col-start / col-start 3;</div></pre></td></tr></table></figure>\n<blockquote>\n<p>网格线的名称和数字之间需要用空格分开。</p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">在这个示例中，</div><div class=\"line\">item1放置位置是row-start第2条开始，至row-end的第3条结束，</div><div class=\"line\">这用来设置item1在行的起始和结束位置；</div><div class=\"line\">-------------------</div><div class=\"line\">col-start的第1条开始，至col-start的第3条结束</div><div class=\"line\">（col-start的第3条也对应的是col-end的第2条），</div><div class=\"line\">用来设置item1在列的起始位置和结束位置。</div></pre></td></tr></table></figure>\n<p><img class=\"br10\" src=\"/2018/05/18/css3-grid/c18.png\"></p>\n<h3 id=\"通过网格区域命名和定位网格项目-（一）\"><a href=\"#通过网格区域命名和定位网格项目-（一）\" class=\"headerlink\" title=\"通过网格区域命名和定位网格项目 （一）\"></a>通过网格区域命名和定位网格项目 （一）</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">通过引用 grid-area 属性指定的 网格区域(Grid Area) 名称来定义网格模板。</div><div class=\"line\">重复网格区域的名称导致内容跨越这些单元格。</div><div class=\"line\">一个点号（.）代表一个空的网格单元。</div><div class=\"line\">这个语法本身可视作网格的可视化结构。</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">grid-area-name</span>&gt;</span>：</div><div class=\"line\">由网格项的 grid-area 指定的网格区域名称</div><div class=\"line\">.（点号） ：代表一个空的网格单元</div><div class=\"line\">none：不定义网格区域</div></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.container</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">grid-template-areas</span>: </div><div class=\"line\">    <span class=\"string\">\" | . | none | ...\"</span></div><div class=\"line\">    <span class=\"string\">\"...\"</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\"> <span class=\"selector-class\">.container</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">grid-template-columns</span>: <span class=\"number\">50px</span> <span class=\"number\">50px</span> <span class=\"number\">50px</span> <span class=\"number\">50px</span>;</div><div class=\"line\">  <span class=\"attribute\">grid-template-rows</span>: auto;</div><div class=\"line\">  <span class=\"attribute\">grid-template-areas</span>: </div><div class=\"line\">    <span class=\"string\">\"header header header header\"</span></div><div class=\"line\">    <span class=\"string\">\"main main . sidebar\"</span></div><div class=\"line\">    <span class=\"string\">\"footer footer footer footer\"</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.item-a</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">grid-area</span>: header;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.item-b</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">grid-area</span>: main;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.item-c</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">grid-area</span>: sidebar;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.item-d</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">grid-area</span>: footer;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">上面的代码将创建一个 4 列 3 行的网格。</div><div class=\"line\">整个顶行将由 header 区域 组成。</div><div class=\"line\">中间一排将由两个 main 区域，</div><div class=\"line\">一个是空单元格，一个 sidebar 区域组成。</div><div class=\"line\">最后一行全是 footer 区域组成。</div></pre></td></tr></table></figure>\n<p><img class=\"br10\" src=\"/2018/05/18/css3-grid/c34.png\"><br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">你的声明中的每一行都需要有相同数量的单元格。</div><div class=\"line\">你可以使用任意数量的相邻的 点. 来声明单个空单元格。 </div><div class=\"line\">只要这些点.之间没有空隙隔开，他们就表示一个单一的单元格。</div></pre></td></tr></table></figure></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">注意你 [并非]用这个语法来命名\b\b网格线，只是命名网格区域。</div><div class=\"line\">当你使用这种语法时，区域两端的\b\b网格线实际上是自动命名的。</div><div class=\"line\">如果你的网格区域的名字是 foo，</div><div class=\"line\">该区域的起始 行网格线 和起始 列网格线 的名称将是 foo-start，</div><div class=\"line\">而最后一行 行网格线 和最后一列 列网格线 的名字是 foo-end。</div><div class=\"line\">这意味着一些网格线可能有多个名字，</div><div class=\"line\">如上例中最左边的网格线，它将有三个名称：header-start，main-start 和 footer-start 。</div></pre></td></tr></table></figure>\n<h3 id=\"通过网格区域命名和定位网格项目-二\"><a href=\"#通过网格区域命名和定位网格项目-二\" class=\"headerlink\" title=\"通过网格区域命名和定位网格项目 (二)\"></a>通过网格区域命名和定位网格项目 (二)</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">像网格线名称一样，网格区域的名称也可以使用grid-template-areas属性来命名。</div><div class=\"line\">引用网格区域名称也可以设置网格项目位置。</div></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">grid-template-areas</span>: \"<span class=\"selector-tag\">header</span> <span class=\"selector-tag\">header</span>\"</div><div class=\"line\">                     \"<span class=\"selector-tag\">content</span> <span class=\"selector-tag\">sidebar</span>\"</div><div class=\"line\">                     \"<span class=\"selector-tag\">footer</span> <span class=\"selector-tag\">footer</span>\";</div><div class=\"line\"><span class=\"selector-tag\">grid-template-rows</span>:  150<span class=\"selector-tag\">px</span> 1<span class=\"selector-tag\">fr</span> 100<span class=\"selector-tag\">px</span>;</div><div class=\"line\"><span class=\"selector-tag\">grid-template-columns</span>: 1<span class=\"selector-tag\">fr</span> 200<span class=\"selector-tag\">px</span>;</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">设置网格区域的名称应该放置在单引号或双引号内，每个名称由一个空格符分开。</div><div class=\"line\">网格区域的名称，每组（单引号或双引号内的网格区域名称）定义了网格的一行，</div><div class=\"line\">每个网格区域名称定义网格的一列。</div></pre></td></tr></table></figure>\n<p><img class=\"br10\" src=\"/2018/05/18/css3-grid/c19.png\"></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">grid-row-start、grid-row-end、</div><div class=\"line\">grid-column-start和grid-column-end</div><div class=\"line\">可以引用网格区域名称，用来设置网格项目位置。</div></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">grid-row-start</span>:    <span class=\"selector-tag\">header</span>;</div><div class=\"line\"><span class=\"selector-tag\">grid-row-end</span>:      <span class=\"selector-tag\">header</span>;</div><div class=\"line\"><span class=\"selector-tag\">grid-column-start</span>: <span class=\"selector-tag\">header</span>;</div><div class=\"line\"><span class=\"selector-tag\">grid-column-end</span>:   <span class=\"selector-tag\">header</span>;</div></pre></td></tr></table></figure>\n<p><img class=\"br10\" src=\"/2018/05/18/css3-grid/c20.png\"></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">grid-row</span>:    <span class=\"selector-tag\">footer</span>;</div><div class=\"line\"><span class=\"selector-tag\">grid-column</span>: <span class=\"selector-tag\">footer</span>;</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">简写的grid-row和grid-column也可以引用网格区域名称，</div><div class=\"line\">设置网格项目的位置。</div></pre></td></tr></table></figure>\n<p><img class=\"br10\" src=\"/2018/05/18/css3-grid/c21.png\"></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">grid-area</span>: <span class=\"selector-tag\">sidebar</span>;</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">grid-area简写属性也可以引用网格区域的名称来设置网格项目的位置。</div></pre></td></tr></table></figure>\n<p><img class=\"br10\" src=\"/2018/05/18/css3-grid/c22.png\"></p>\n<h2 id=\"隐式网格\"><a href=\"#隐式网格\" class=\"headerlink\" title=\"隐式网格\"></a>隐式网格</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">当网格项目确认在显式网格之外时就会创建隐性网格，</div><div class=\"line\">当没有足够的空间或者显式的网格轨道来设置网格项目，</div><div class=\"line\">此时网格项目就会自动创建隐式网格。</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">使用grid-auto-rows、</div><div class=\"line\">grid-auto-columns和grid-auto-flow</div><div class=\"line\">属性可以定义隐式的网格。</div></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">grid-template-rows</span>:    70<span class=\"selector-tag\">px</span>;</div><div class=\"line\"><span class=\"selector-tag\">grid-template-columns</span>: <span class=\"selector-tag\">repeat</span>(2, 1<span class=\"selector-tag\">fr</span>);</div><div class=\"line\"><span class=\"selector-tag\">grid-auto-rows</span>:        140<span class=\"selector-tag\">px</span>;</div></pre></td></tr></table></figure>\n<p><img class=\"br10\" src=\"/2018/05/18/css3-grid/c23.jpg\"></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">grid-template-rows</span>:    70<span class=\"selector-tag\">px</span>;</div><div class=\"line\"><span class=\"selector-tag\">grid-template-columns</span>: <span class=\"selector-tag\">repeat</span>(2, 1<span class=\"selector-tag\">fr</span>);</div><div class=\"line\"><span class=\"selector-tag\">grid-auto-rows</span>:        140<span class=\"selector-tag\">px</span>;</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">在这个例子中我们只定义了一行（轨道），</div><div class=\"line\">所以item1和item2的高都是70px。</div><div class=\"line\">~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</div><div class=\"line\">第二行（轨道）自动创建了item3和item4空间。</div><div class=\"line\">grid-auto-rows定义隐式网格中的行（轨道）的大小，</div><div class=\"line\">因此item3和item4的高度是140px。</div></pre></td></tr></table></figure>\n<p><a href=\"https://codepen.io/Frank_/pen/ZxBoeV?editors=1100\" target=\"_blank\" rel=\"external\">demo1</a></p>\n<h3 id=\"网格默认流方向\"><a href=\"#网格默认流方向\" class=\"headerlink\" title=\"网格默认流方向\"></a>网格默认流方向</h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">//网格默认流方向是row</div><div class=\"line\"><span class=\"selector-tag\">grid-auto-row</span>: <span class=\"selector-tag\">row</span></div></pre></td></tr></table></figure>\n<p><img class=\"br10\" src=\"/2018/05/18/css3-grid/c24.jpg\"></p>\n<p><a href=\"https://codepen.io/Frank_/pen/ZxBoeV?editors=1100\" target=\"_blank\" rel=\"external\">demo2</a></p>\n<h3 id=\"更改网格流方向\"><a href=\"#更改网格流方向\" class=\"headerlink\" title=\"更改网格流方向\"></a>更改网格流方向</h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">//可以把网格流的方向改变成column</div><div class=\"line\"><span class=\"selector-tag\">grid-auto-flow</span>: <span class=\"selector-tag\">column</span></div></pre></td></tr></table></figure>\n<p><img class=\"br10\" src=\"/2018/05/18/css3-grid/c25.jpg\"></p>\n<p><a href=\"https://codepen.io/Frank_/pen/ZxBoeV?editors=1100\" target=\"_blank\" rel=\"external\">demo2</a></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">grid-template-columns</span>: 100<span class=\"selector-tag\">px</span> 200<span class=\"selector-tag\">px</span>;</div><div class=\"line\"><span class=\"selector-tag\">grid-auto-flow</span>:        <span class=\"selector-tag\">column</span>;</div><div class=\"line\"><span class=\"selector-tag\">grid-auto-columns</span>:     1<span class=\"selector-tag\">fr</span>;</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">在这个例子中，我们只定义了前两列的轨道尺寸。</div><div class=\"line\">item1的尺寸是100px，item2的尺寸是200px。</div><div class=\"line\">-------------------------------------------</div><div class=\"line\">使用grid-auto-flow:column自动创建了隐式网格，</div><div class=\"line\">用来放置item3、item4和item5，</div><div class=\"line\">并且这三个列（轨道）的尺寸由grid-auto-columns来定义。</div></pre></td></tr></table></figure>\n<p><img class=\"br10\" src=\"/2018/05/18/css3-grid/c26.jpg\"></p>\n<p><a href=\"https://codepen.io/Frank_/pen/ZxBoeV?editors=1100\" target=\"_blank\" rel=\"external\">demo3</a></p>\n<h3 id=\"隐式地命名网格区域名称\"><a href=\"#隐式地命名网格区域名称\" class=\"headerlink\" title=\"隐式地命名网格区域名称\"></a>隐式地命名网格区域名称</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">通常可以将网格线命名成任何你想命名的名称，</div><div class=\"line\">如果网格线名称添加-start和-end的后缀，</div><div class=\"line\">其实也隐式的创建一个网格区域，可以用来设置网格项目的位置。</div></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">grid-template-rows</span>:    <span class=\"selector-attr\">[outer-start]</span> 1<span class=\"selector-tag\">fr</span> <span class=\"selector-attr\">[inner-start]</span> 1<span class=\"selector-tag\">fr</span> <span class=\"selector-attr\">[inner-end]</span> 1<span class=\"selector-tag\">fr</span> <span class=\"selector-attr\">[outer-end]</span>;</div><div class=\"line\"><span class=\"selector-tag\">grid-template-columns</span>: <span class=\"selector-attr\">[outer-start]</span> 1<span class=\"selector-tag\">fr</span> <span class=\"selector-attr\">[inner-start]</span> 1<span class=\"selector-tag\">fr</span> <span class=\"selector-attr\">[inner-end]</span> 1<span class=\"selector-tag\">fr</span> <span class=\"selector-attr\">[inner-end]</span>;</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">在这个示例中，</div><div class=\"line\">行和列都具有inner-start和inner-end网格线名称，</div><div class=\"line\">同时也对应的创建一个隐式网格区域名称inner。</div></pre></td></tr></table></figure>\n<p><img class=\"br10\" src=\"/2018/05/18/css3-grid/c27.png\"><br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">grid-area</span>: <span class=\"selector-tag\">inner</span></div></pre></td></tr></table></figure></p>\n<blockquote>\n<p>网格项目定位可以通过网格区域名称来设置，而不需要使用网格线名称。</p>\n</blockquote>\n<h3 id=\"隐式命名网格线名称\"><a href=\"#隐式命名网格线名称\" class=\"headerlink\" title=\"隐式命名网格线名称\"></a>隐式命名网格线名称</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">隐式的指定网格线反向指定了隐式的网格区域名称，</div><div class=\"line\">命名的网格区域隐式的命名了网格线名称。</div></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">grid-template-areas</span>:   \"<span class=\"selector-tag\">header</span> <span class=\"selector-tag\">header</span>\"</div><div class=\"line\">                        \"<span class=\"selector-tag\">content</span> <span class=\"selector-tag\">sidebar</span>\"</div><div class=\"line\">                        \"<span class=\"selector-tag\">footer</span> <span class=\"selector-tag\">footer</span>\";</div><div class=\"line\"><span class=\"selector-tag\">grid-template-rows</span>:    80<span class=\"selector-tag\">px</span> 1<span class=\"selector-tag\">fr</span> 40<span class=\"selector-tag\">px</span>;</div><div class=\"line\"><span class=\"selector-tag\">grid-template-columns</span>: 1<span class=\"selector-tag\">fr</span> 200<span class=\"selector-tag\">px</span>;</div></pre></td></tr></table></figure>\n<p><img class=\"br10\" src=\"/2018/05/18/css3-grid/c28.png\"></p>\n<p><a href=\"https://codepen.io/Frank_/pen/vRyrOW?editors=1100\" target=\"_blank\" rel=\"external\">demo</a></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">grid-row-start</span>:    <span class=\"selector-tag\">header-start</span>;</div><div class=\"line\"><span class=\"selector-tag\">grid-row-end</span>:      <span class=\"selector-tag\">content-start</span>;</div><div class=\"line\"><span class=\"selector-tag\">grid-column-start</span>: <span class=\"selector-tag\">footer-start</span>;</div><div class=\"line\"><span class=\"selector-tag\">grid-column-end</span>:   <span class=\"selector-tag\">sidebar-end</span>;</div></pre></td></tr></table></figure>\n<p><img class=\"br10\" src=\"/2018/05/18/css3-grid/c29.png\"></p>\n<blockquote>\n<p>在这个示例中,header通过隐式的网格线名称设置其位置。</p>\n</blockquote>\n<h3 id=\"网格项目层级\"><a href=\"#网格项目层级\" class=\"headerlink\" title=\"网格项目层级\"></a>网格项目层级</h3><p> 网格项目可以具有层级和堆栈，必要时可能通过z-index属性来指定</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.item-a</span>,</div><div class=\"line\"><span class=\"selector-class\">.item-b</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">grid-row-start</span>:  <span class=\"number\">1</span>;</div><div class=\"line\">    <span class=\"attribute\">grid-column-end</span>: span <span class=\"number\">2</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.item-a</span> &#123; </div><div class=\"line\">    <span class=\"attribute\">grid-column-start</span>: <span class=\"number\">1</span>; </div><div class=\"line\">    <span class=\"attribute\">z-index</span>: <span class=\"number\">1</span>; </div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.item-b1</span> &#123; </div><div class=\"line\">    <span class=\"attribute\">grid-column-start</span>: <span class=\"number\">2</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><img class=\"br10\" src=\"/2018/05/18/css3-grid/c30.jpg\"></p>\n<p><a href=\"https://codepen.io/Frank_/pen/PRbaeX?editors=1100\" target=\"_blank\" rel=\"external\">demo</a></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">在这个例子中，itema和itemb的开始行都是1，</div><div class=\"line\">item-a列的开始是1，</div><div class=\"line\">item-b列的开始是2，</div><div class=\"line\">并且它们都跨越两列。</div><div class=\"line\">两个网格项目都是由网格线数字定位，结果这两个网格项目重叠了。</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">默认情况下，item-b在item1上面，</div><div class=\"line\">但是，我们在item-a中设置了z-index:1;</div><div class=\"line\">导致item-a在item-b之上。</div><div class=\"line\">当然 ，我们可以设置item-b:z-index:2</div></pre></td></tr></table></figure>\n<p><img class=\"br10\" src=\"/2018/05/18/css3-grid/c30.jpg\"></p>\n<h2 id=\"网格项目对齐方式（Box-Alignment）\"><a href=\"#网格项目对齐方式（Box-Alignment）\" class=\"headerlink\" title=\"网格项目对齐方式（Box Alignment）\"></a>网格项目对齐方式（Box Alignment）</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">justify-items和justify-self指定网格项目沿着行轴对齐方式；</div><div class=\"line\">align-items和align-self指定网格项目沿着列轴对齐方式。</div></pre></td></tr></table></figure>\n<h3 id=\"容器的属性\"><a href=\"#容器的属性\" class=\"headerlink\" title=\"容器的属性\"></a>容器的属性</h3><blockquote>\n<p>justify-items和align-items应用在网格容器上</p>\n</blockquote>\n<p><strong>它们的属性值有：</strong><br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">auto</span></div><div class=\"line\"><span class=\"selector-tag\">normal</span></div><div class=\"line\"><span class=\"selector-tag\">start</span></div><div class=\"line\"><span class=\"selector-tag\">end</span></div><div class=\"line\"><span class=\"selector-tag\">center</span></div><div class=\"line\"><span class=\"selector-tag\">stretch</span></div><div class=\"line\"><span class=\"selector-tag\">baseline</span></div><div class=\"line\"><span class=\"selector-tag\">first</span> <span class=\"selector-tag\">baseline</span></div><div class=\"line\"><span class=\"selector-tag\">last</span> <span class=\"selector-tag\">baseline</span></div></pre></td></tr></table></figure></p>\n<p><a href=\"https://codepen.io/Frank_/pen/VXPQgQ?editors=1100\" target=\"_blank\" rel=\"external\">demo</a></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.container</span> &#123;</div><div class=\"line\">  //定义在容器元素</div><div class=\"line\">  //水平方向</div><div class=\"line\">  // justify-items: start;</div><div class=\"line\">  <span class=\"selector-tag\">justify-items</span>: <span class=\"selector-tag\">center</span>;</div><div class=\"line\">  // justify-items: end;</div><div class=\"line\">  // justify-items: stretch;</div><div class=\"line\">  //垂直方向</div><div class=\"line\">  // align-items: start;</div><div class=\"line\">  <span class=\"selector-tag\">align-items</span>: <span class=\"selector-tag\">center</span>;</div><div class=\"line\">  // align-items: end;</div><div class=\"line\">  // align-items: stretch;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><img class=\"br10\" src=\"/2018/05/18/css3-grid/c31.jpg\"></p>\n<p><a href=\"https://codepen.io/Frank_/pen/VXPQgQ?editors=1100\" target=\"_blank\" rel=\"external\">demo</a></p>\n<blockquote>\n<p>align-self和justify-self属性用于网格项目自身对齐方式。</p>\n</blockquote>\n<p><strong>它们主要接受以下属性值：</strong><br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">auto</span></div><div class=\"line\"><span class=\"selector-tag\">normal</span></div><div class=\"line\"><span class=\"selector-tag\">start</span></div><div class=\"line\"><span class=\"selector-tag\">end</span></div><div class=\"line\"><span class=\"selector-tag\">center</span></div><div class=\"line\"><span class=\"selector-tag\">stretch</span></div><div class=\"line\"><span class=\"selector-tag\">baseline</span></div><div class=\"line\"><span class=\"selector-tag\">first</span> <span class=\"selector-tag\">baseline</span></div><div class=\"line\"><span class=\"selector-tag\">last</span> <span class=\"selector-tag\">baseline</span></div></pre></td></tr></table></figure></p>\n<p><strong>单个元素对齐方式</strong><br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.item-a</span> &#123; </div><div class=\"line\">    <span class=\"attribute\">justify-self</span>: center;</div><div class=\"line\">    <span class=\"attribute\">align-self</span>: center ;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p><img class=\"br10\" src=\"/2018/05/18/css3-grid/c32.jpg\"></p>\n<p><a href=\"https://codepen.io/Frank_/pen/OvWvGM?editors=1100\" target=\"_blank\" rel=\"external\">demo</a></p>\n<h3 id=\"网格轨道对齐方式\"><a href=\"#网格轨道对齐方式\" class=\"headerlink\" title=\"网格轨道对齐方式\"></a>网格轨道对齐方式</h3><p>网格轨道对齐可以相对于网格容器行和列轴。<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">align-content指定网格轨道沿着行轴对齐方式；</div><div class=\"line\">justify-content指定网格轨道沿着列轴对齐方式。</div></pre></td></tr></table></figure></p>\n<p><strong>它们支持下面属性：</strong><br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">normal</span></div><div class=\"line\"><span class=\"selector-tag\">start</span></div><div class=\"line\"><span class=\"selector-tag\">end</span></div><div class=\"line\"><span class=\"selector-tag\">center</span></div><div class=\"line\"><span class=\"selector-tag\">stretch</span></div><div class=\"line\"><span class=\"selector-tag\">space-around</span></div><div class=\"line\"><span class=\"selector-tag\">space-between</span></div><div class=\"line\"><span class=\"selector-tag\">space-evenly</span></div><div class=\"line\"><span class=\"selector-tag\">baseline</span></div><div class=\"line\"><span class=\"selector-tag\">first</span> <span class=\"selector-tag\">baseline</span></div><div class=\"line\"><span class=\"selector-tag\">last</span> <span class=\"selector-tag\">baseline</span></div></pre></td></tr></table></figure></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.container</span>&#123;</div><div class=\"line\">  <span class=\"attribute\">justify-content</span>: start | center | end;</div><div class=\"line\">  <span class=\"attribute\">justify-content</span>: space-around;</div><div class=\"line\">  <span class=\"attribute\">justify-content</span>: space-between;</div><div class=\"line\">  <span class=\"attribute\">justify-content</span>: space-evenly;</div><div class=\"line\">  </div><div class=\"line\">  <span class=\"attribute\">align-content</span>: start | center | end;</div><div class=\"line\">  <span class=\"attribute\">align-content</span>: space-around;</div><div class=\"line\">  <span class=\"attribute\">align-content</span>: space-between;</div><div class=\"line\">  <span class=\"attribute\">align-content</span>: space-evenly;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><img class=\"br10\" src=\"/2018/05/18/css3-grid/c33.jpg\"></p>\n<p><a href=\"https://codepen.io/Frank_/pen/NYdMva?editors=1100\" target=\"_blank\" rel=\"external\">demo</a></p>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a><span class=\"yellow3\">参考资料</span></h2><ul>\n<li><a href=\"https://www.w3cplus.com/css/learncssgrid.html\" target=\"_blank\" rel=\"external\">https://www.w3cplus.com/css/learncssgrid.html</a></li>\n<li><a href=\"http://www.css88.com/archives/8510\" target=\"_blank\" rel=\"external\">http://www.css88.com/archives/8510</a></li>\n<li><a href=\"https://caniuse.com/#feat=css-grid\" target=\"_blank\" rel=\"external\">https://caniuse.com/#feat=css-grid</a></li>\n<li><a href=\"https://www.w3cplus.com/css3/how-the-minmax-function-works.html?utm_source=tuicool&amp;utm_medium=referral\" target=\"_blank\" rel=\"external\">https://www.w3cplus.com/css3/how-the-minmax-function-works.html?utm_source=tuicool&amp;utm_medium=referral</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout\" target=\"_blank\" rel=\"external\">https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout</a></li>\n<li><a href=\"https://css-tricks.com/snippets/css/complete-guide-grid/\" target=\"_blank\" rel=\"external\">https://css-tricks.com/snippets/css/complete-guide-grid/</a></li>\n<li><a href=\"https://gridbyexample.com/\" target=\"_blank\" rel=\"external\">https://gridbyexample.com/</a></li>\n</ul>\n<p><br></p>\n<blockquote>\n<p>声明:本资料仅供学习交流，严禁使用于任何商业用途!<br>相关资料参考自<a href=\"https://www.w3cplus.com/css/learncssgrid.html\" target=\"_blank\" rel=\"external\">w3cplus</a>、<a href=\"http://www.css88.com/archives/8510\" target=\"_blank\" rel=\"external\">css88</a>、<a href=\"https://css-tricks.com/snippets/css/complete-guide-grid/\" target=\"_blank\" rel=\"external\">css-tricks</a>等博客内容。 如需转载，转载请注明出处。</p>\n</blockquote>\n<p><br></p>\n<h3 id=\"完\"><a href=\"#完\" class=\"headerlink\" title=\"完.\"></a>完.</h3>"},{"title":"「记」♥《潜规则》- 中国历史中的真实游戏 吴思","date":"2018-02-21T10:29:39.000Z","_content":"\n<div  align=\"center\">    \n    <img src=\"/2018/02/21/qianguize/q1.jpg\">\n</div>\n\n> __云南人民出版社__\n> 豆瓣评分: **`8.3`**\n> *版次*: \n> `第1版 (2001年1月)` \n> _Pages_: 272\n\n<br /> \n\n现在说起潜规则，似乎只剩下演艺圈的男女之事了。但还原历史的时候，潜规则的存在范围其实是每一个角落。单说个简单的，譬如人们见面发烟，先是来回推几次手，嘴上说着不不，烟却已经在手指之间了。又如朋友聚会，你不喝酒，人家私下里就会嘀咕说这个人没出息酒都不会喝，因为交际的潜规则推搡着你必须喝酒，原本相交淡如水，这回是感情深一口闷。\n\n透过历史表象，揭示出隐藏在正式规则之下、实际上支配着社会运行的不成文的规矩，并将其名之日“潜规则”，进而指出潜规则的产生在于现实的利害计算与趋利避害。「p01」\n\n所以人人都是被潜规则，而没有人主动掌握了潜规则。\n\n张居正总结说：人们怕那些吏，一定要贿赂那些吏，并不是指望从他们手里捞点好处，而是怕他们祸害自己。合法地祸害别人的能力，乃是官吏们的看家本领。这是一门真正的艺术，种种资源和财富正要据此分肥并重新调整。 「p04」\n\n这次释放更充分地体现了“合法伤害权”或者倒过来叫“合法恩惠权”的橡皮筋一般的特性。奈何他低估了合法伤害权的伸缩性。「p05」\n\n总之,合法伤害权是很值钱的。有了这种权力,没有钱可以有钱,没有敛钱的规矩可以创造出规矩。「p10」\n\n挥动伤人的利器需要使用者心存恶意,这就需要克服良心的障碍。“赇”则替人免除了这些麻烦。「p14」\n\n只要是狼和羊在一起，他们之间的关系就定局了。假如你愿意，尽可以规定羊称狼为父母，狼称羊为儿女。颠倒过来当然也可以，让狼跟羊叫爹娘或者叫主人，羊则有权把狼叫做儿子或者仆人。随便你怎么规定，反正狼要吃羊。「p26」\n\n无论哪个朝代，人的一生必定要做平一个等式：一生总收益等于一生总开支；节余是遗产，亏损是债务。「p48」\n\n他也把灰色收入视为理所当然,视为生活中必不可少的一部分。「p50」\n\n势力所及之处,人们之间的关系越来越不成体统,实施的政策也越来越背离帝国公开宣称的政策。「p66」\n\n实际上,必定有人利用一些小机会,试探性地违法乱纪一下。「p82」\n\n官场利益是向着制造利益和伤害的能力流动的，如果制造利和害的能力谁都有一点，就会呈现利益均沾的局面，不过这种能力的分布并不那么平均。「p104」\n\n从平均的方面说，每个在官场上有影响的官员都有理由认为：我们都没有说你的坏话，我们有能力害你却没有害你，我们甚至还说了你的好话，让你得了这么一个美差肥缺，难道你就不能出点血，让大家也沾点光么？「p104」\n\n打秋风、请客吃饭、表礼水礼、程仪、炭敬冰敬别敬、三节两寿等等，都是在此规律下支配的官场利益分配机制。「p104」\n\n真实的常规是:对局者双赢,老百姓买单。「p112」\n\n我们已经看到了三个层次的选任官员的方式。表层是理论上冠冕堂皇的“选贤任能”,中层是论资排辈和抽签,底层是权势集团的私下请托,或者叫走后门。「p122」\n\n此外,论资排辈和抽签本身堪称极其高明的流线型设计。如果要发明一种在官场中的阻力最小、压力最轻、各方面都能接受的肥缺分配办法，恐怕那就是论资排辈加抽签。资格和辈分是硬指标，不容易产生争议，这就能够持久。「p125」\n\n至于在相同资格和辈分的条件下抽签抓阄，这是把前程交给天意和命运安排，而天意和命运也是人人尊重，根本就无法反对的。「p125」\n\n在潜规则的生成过程中，当事人实际并不是两方，而是三方：交易双方再加上更高层次的正式制度代表。双方进行私下交易的时候确实是两个主体，但是，当他们隐蔽这种交易的时候，就变成以正式制度为对手的一个联盟。隐蔽本身就是一种策略，这种策略的存在，反映了更高层次的正式制度代表的存在。「p194」\n\n这些年我们老说假货泛滥，以为世风日下，人心不古，似乎过去就没有假货，至少没有那么多假货，看来这是偏见。实际上，不仅我国制造和贩卖假货的技艺高超、历史久远，假货的普及程度恐怕也不在今天之下。「p209」\n\n古今中外的地摊和行贩行为都差不多。大店名店则另是一路。造成重大差别的不是时间、地域和民族，而是具体的商业制度。「p211」\n\n这时我想起了西方经济学的经济人假定人是理性自利的，人们都要追求个人利益的最大化。因此，只要贪污的风险不大，贪污就是他们的最佳策略。「p226」\n\n理解中国历史和国情的关键，恰恰在于搞清楚隐蔽在漂亮文章下边的实际利害格局。没有这种格局的保障，那些规定不过表达了政府的善良愿望或者骗人唬人的企图。\n\n所有规则的设立，说到底，都遵循一条根本规则：暴力最强者说了算。这是一条元规则，决定规则的规则。\n\n这些老百姓，按照马克思的比喻，就好像是一麻袋毫无组织的土豆。而缺乏组织的土豆，一麻袋也好，一火车也好，在土豆们进行利害计算的时候，损益得失无异于一个土豆，并不像通常想象的那样是所有的土豆之和。零散的土豆无力保护自己的利益，需要高高在上的皇帝代表他们，赐予他们雨露阳光。\n\n真理未必总是讨人喜欢。\n\n身怀利器，杀心自起。\n\n在潜规则的生成过程中，当事人实际并不是两方，而是三方: 交易双方再加上更高层次的正式制度代表。双方进行私下交易的时候确实是两个主体，但是，当他们隐蔽这种交易的时候，就变成以正式制度为对手的一个联盟。隐蔽本身就是一种策略，这种策略的存在，反映了更高层次的正式制度代表的存在。\n\n道德操守是官僚集团自始自终卖力挥舞的一面大旗，它翻滚得如此夺目，根本就不容你不重视。 我完全承认，道德的力量是有效的，海瑞的刚直不阿可以为证。但道德的力量又是有限的，海瑞的罕见和盛名也可以为证。\n\n\n<br />\n\n> 此文内容为读书时把文中的精彩部分整理出来而做的笔记。<br />\n之所以想要做读书笔记，是因为常常高估了自己的记忆力。<br />\n把读书时候碰到美妙的地方都记下来，时常回味一下，让读书产生出更大的价值。\n\n`声明:本资料仅供学习交流，严禁使用于任何商业用途!  如需转载，转载请注明出处。`\n\n\n","source":"_posts/qianguize.md","raw":"---\ntitle: 「记」♥《潜规则》- 中国历史中的真实游戏 吴思 \ndate: 2018-02-21 18:29:39\ncategories: 札记\ntags:\n- v2018\n- 社会\n- 历史\n---\n\n<div  align=\"center\">    \n    <img src=\"/2018/02/21/qianguize/q1.jpg\">\n</div>\n\n> __云南人民出版社__\n> 豆瓣评分: **`8.3`**\n> *版次*: \n> `第1版 (2001年1月)` \n> _Pages_: 272\n\n<br /> \n\n现在说起潜规则，似乎只剩下演艺圈的男女之事了。但还原历史的时候，潜规则的存在范围其实是每一个角落。单说个简单的，譬如人们见面发烟，先是来回推几次手，嘴上说着不不，烟却已经在手指之间了。又如朋友聚会，你不喝酒，人家私下里就会嘀咕说这个人没出息酒都不会喝，因为交际的潜规则推搡着你必须喝酒，原本相交淡如水，这回是感情深一口闷。\n\n透过历史表象，揭示出隐藏在正式规则之下、实际上支配着社会运行的不成文的规矩，并将其名之日“潜规则”，进而指出潜规则的产生在于现实的利害计算与趋利避害。「p01」\n\n所以人人都是被潜规则，而没有人主动掌握了潜规则。\n\n张居正总结说：人们怕那些吏，一定要贿赂那些吏，并不是指望从他们手里捞点好处，而是怕他们祸害自己。合法地祸害别人的能力，乃是官吏们的看家本领。这是一门真正的艺术，种种资源和财富正要据此分肥并重新调整。 「p04」\n\n这次释放更充分地体现了“合法伤害权”或者倒过来叫“合法恩惠权”的橡皮筋一般的特性。奈何他低估了合法伤害权的伸缩性。「p05」\n\n总之,合法伤害权是很值钱的。有了这种权力,没有钱可以有钱,没有敛钱的规矩可以创造出规矩。「p10」\n\n挥动伤人的利器需要使用者心存恶意,这就需要克服良心的障碍。“赇”则替人免除了这些麻烦。「p14」\n\n只要是狼和羊在一起，他们之间的关系就定局了。假如你愿意，尽可以规定羊称狼为父母，狼称羊为儿女。颠倒过来当然也可以，让狼跟羊叫爹娘或者叫主人，羊则有权把狼叫做儿子或者仆人。随便你怎么规定，反正狼要吃羊。「p26」\n\n无论哪个朝代，人的一生必定要做平一个等式：一生总收益等于一生总开支；节余是遗产，亏损是债务。「p48」\n\n他也把灰色收入视为理所当然,视为生活中必不可少的一部分。「p50」\n\n势力所及之处,人们之间的关系越来越不成体统,实施的政策也越来越背离帝国公开宣称的政策。「p66」\n\n实际上,必定有人利用一些小机会,试探性地违法乱纪一下。「p82」\n\n官场利益是向着制造利益和伤害的能力流动的，如果制造利和害的能力谁都有一点，就会呈现利益均沾的局面，不过这种能力的分布并不那么平均。「p104」\n\n从平均的方面说，每个在官场上有影响的官员都有理由认为：我们都没有说你的坏话，我们有能力害你却没有害你，我们甚至还说了你的好话，让你得了这么一个美差肥缺，难道你就不能出点血，让大家也沾点光么？「p104」\n\n打秋风、请客吃饭、表礼水礼、程仪、炭敬冰敬别敬、三节两寿等等，都是在此规律下支配的官场利益分配机制。「p104」\n\n真实的常规是:对局者双赢,老百姓买单。「p112」\n\n我们已经看到了三个层次的选任官员的方式。表层是理论上冠冕堂皇的“选贤任能”,中层是论资排辈和抽签,底层是权势集团的私下请托,或者叫走后门。「p122」\n\n此外,论资排辈和抽签本身堪称极其高明的流线型设计。如果要发明一种在官场中的阻力最小、压力最轻、各方面都能接受的肥缺分配办法，恐怕那就是论资排辈加抽签。资格和辈分是硬指标，不容易产生争议，这就能够持久。「p125」\n\n至于在相同资格和辈分的条件下抽签抓阄，这是把前程交给天意和命运安排，而天意和命运也是人人尊重，根本就无法反对的。「p125」\n\n在潜规则的生成过程中，当事人实际并不是两方，而是三方：交易双方再加上更高层次的正式制度代表。双方进行私下交易的时候确实是两个主体，但是，当他们隐蔽这种交易的时候，就变成以正式制度为对手的一个联盟。隐蔽本身就是一种策略，这种策略的存在，反映了更高层次的正式制度代表的存在。「p194」\n\n这些年我们老说假货泛滥，以为世风日下，人心不古，似乎过去就没有假货，至少没有那么多假货，看来这是偏见。实际上，不仅我国制造和贩卖假货的技艺高超、历史久远，假货的普及程度恐怕也不在今天之下。「p209」\n\n古今中外的地摊和行贩行为都差不多。大店名店则另是一路。造成重大差别的不是时间、地域和民族，而是具体的商业制度。「p211」\n\n这时我想起了西方经济学的经济人假定人是理性自利的，人们都要追求个人利益的最大化。因此，只要贪污的风险不大，贪污就是他们的最佳策略。「p226」\n\n理解中国历史和国情的关键，恰恰在于搞清楚隐蔽在漂亮文章下边的实际利害格局。没有这种格局的保障，那些规定不过表达了政府的善良愿望或者骗人唬人的企图。\n\n所有规则的设立，说到底，都遵循一条根本规则：暴力最强者说了算。这是一条元规则，决定规则的规则。\n\n这些老百姓，按照马克思的比喻，就好像是一麻袋毫无组织的土豆。而缺乏组织的土豆，一麻袋也好，一火车也好，在土豆们进行利害计算的时候，损益得失无异于一个土豆，并不像通常想象的那样是所有的土豆之和。零散的土豆无力保护自己的利益，需要高高在上的皇帝代表他们，赐予他们雨露阳光。\n\n真理未必总是讨人喜欢。\n\n身怀利器，杀心自起。\n\n在潜规则的生成过程中，当事人实际并不是两方，而是三方: 交易双方再加上更高层次的正式制度代表。双方进行私下交易的时候确实是两个主体，但是，当他们隐蔽这种交易的时候，就变成以正式制度为对手的一个联盟。隐蔽本身就是一种策略，这种策略的存在，反映了更高层次的正式制度代表的存在。\n\n道德操守是官僚集团自始自终卖力挥舞的一面大旗，它翻滚得如此夺目，根本就不容你不重视。 我完全承认，道德的力量是有效的，海瑞的刚直不阿可以为证。但道德的力量又是有限的，海瑞的罕见和盛名也可以为证。\n\n\n<br />\n\n> 此文内容为读书时把文中的精彩部分整理出来而做的笔记。<br />\n之所以想要做读书笔记，是因为常常高估了自己的记忆力。<br />\n把读书时候碰到美妙的地方都记下来，时常回味一下，让读书产生出更大的价值。\n\n`声明:本资料仅供学习交流，严禁使用于任何商业用途!  如需转载，转载请注明出处。`\n\n\n","slug":"qianguize","published":1,"updated":"2022-08-30T04:25:07.587Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl7fovitv00050do7e4s34lxi","content":"<div align=\"center\"><br>    <img src=\"/2018/02/21/qianguize/q1.jpg\"><br></div>\n\n<blockquote>\n<p><strong>云南人民出版社</strong><br>豆瓣评分: <strong><code>8.3</code></strong><br><em>版次</em>:<br><code>第1版 (2001年1月)</code><br><em>Pages</em>: 272</p>\n</blockquote>\n<p><br> </p>\n<p>现在说起潜规则，似乎只剩下演艺圈的男女之事了。但还原历史的时候，潜规则的存在范围其实是每一个角落。单说个简单的，譬如人们见面发烟，先是来回推几次手，嘴上说着不不，烟却已经在手指之间了。又如朋友聚会，你不喝酒，人家私下里就会嘀咕说这个人没出息酒都不会喝，因为交际的潜规则推搡着你必须喝酒，原本相交淡如水，这回是感情深一口闷。</p>\n<p>透过历史表象，揭示出隐藏在正式规则之下、实际上支配着社会运行的不成文的规矩，并将其名之日“潜规则”，进而指出潜规则的产生在于现实的利害计算与趋利避害。「p01」</p>\n<p>所以人人都是被潜规则，而没有人主动掌握了潜规则。</p>\n<p>张居正总结说：人们怕那些吏，一定要贿赂那些吏，并不是指望从他们手里捞点好处，而是怕他们祸害自己。合法地祸害别人的能力，乃是官吏们的看家本领。这是一门真正的艺术，种种资源和财富正要据此分肥并重新调整。 「p04」</p>\n<p>这次释放更充分地体现了“合法伤害权”或者倒过来叫“合法恩惠权”的橡皮筋一般的特性。奈何他低估了合法伤害权的伸缩性。「p05」</p>\n<p>总之,合法伤害权是很值钱的。有了这种权力,没有钱可以有钱,没有敛钱的规矩可以创造出规矩。「p10」</p>\n<p>挥动伤人的利器需要使用者心存恶意,这就需要克服良心的障碍。“赇”则替人免除了这些麻烦。「p14」</p>\n<p>只要是狼和羊在一起，他们之间的关系就定局了。假如你愿意，尽可以规定羊称狼为父母，狼称羊为儿女。颠倒过来当然也可以，让狼跟羊叫爹娘或者叫主人，羊则有权把狼叫做儿子或者仆人。随便你怎么规定，反正狼要吃羊。「p26」</p>\n<p>无论哪个朝代，人的一生必定要做平一个等式：一生总收益等于一生总开支；节余是遗产，亏损是债务。「p48」</p>\n<p>他也把灰色收入视为理所当然,视为生活中必不可少的一部分。「p50」</p>\n<p>势力所及之处,人们之间的关系越来越不成体统,实施的政策也越来越背离帝国公开宣称的政策。「p66」</p>\n<p>实际上,必定有人利用一些小机会,试探性地违法乱纪一下。「p82」</p>\n<p>官场利益是向着制造利益和伤害的能力流动的，如果制造利和害的能力谁都有一点，就会呈现利益均沾的局面，不过这种能力的分布并不那么平均。「p104」</p>\n<p>从平均的方面说，每个在官场上有影响的官员都有理由认为：我们都没有说你的坏话，我们有能力害你却没有害你，我们甚至还说了你的好话，让你得了这么一个美差肥缺，难道你就不能出点血，让大家也沾点光么？「p104」</p>\n<p>打秋风、请客吃饭、表礼水礼、程仪、炭敬冰敬别敬、三节两寿等等，都是在此规律下支配的官场利益分配机制。「p104」</p>\n<p>真实的常规是:对局者双赢,老百姓买单。「p112」</p>\n<p>我们已经看到了三个层次的选任官员的方式。表层是理论上冠冕堂皇的“选贤任能”,中层是论资排辈和抽签,底层是权势集团的私下请托,或者叫走后门。「p122」</p>\n<p>此外,论资排辈和抽签本身堪称极其高明的流线型设计。如果要发明一种在官场中的阻力最小、压力最轻、各方面都能接受的肥缺分配办法，恐怕那就是论资排辈加抽签。资格和辈分是硬指标，不容易产生争议，这就能够持久。「p125」</p>\n<p>至于在相同资格和辈分的条件下抽签抓阄，这是把前程交给天意和命运安排，而天意和命运也是人人尊重，根本就无法反对的。「p125」</p>\n<p>在潜规则的生成过程中，当事人实际并不是两方，而是三方：交易双方再加上更高层次的正式制度代表。双方进行私下交易的时候确实是两个主体，但是，当他们隐蔽这种交易的时候，就变成以正式制度为对手的一个联盟。隐蔽本身就是一种策略，这种策略的存在，反映了更高层次的正式制度代表的存在。「p194」</p>\n<p>这些年我们老说假货泛滥，以为世风日下，人心不古，似乎过去就没有假货，至少没有那么多假货，看来这是偏见。实际上，不仅我国制造和贩卖假货的技艺高超、历史久远，假货的普及程度恐怕也不在今天之下。「p209」</p>\n<p>古今中外的地摊和行贩行为都差不多。大店名店则另是一路。造成重大差别的不是时间、地域和民族，而是具体的商业制度。「p211」</p>\n<p>这时我想起了西方经济学的经济人假定人是理性自利的，人们都要追求个人利益的最大化。因此，只要贪污的风险不大，贪污就是他们的最佳策略。「p226」</p>\n<p>理解中国历史和国情的关键，恰恰在于搞清楚隐蔽在漂亮文章下边的实际利害格局。没有这种格局的保障，那些规定不过表达了政府的善良愿望或者骗人唬人的企图。</p>\n<p>所有规则的设立，说到底，都遵循一条根本规则：暴力最强者说了算。这是一条元规则，决定规则的规则。</p>\n<p>这些老百姓，按照马克思的比喻，就好像是一麻袋毫无组织的土豆。而缺乏组织的土豆，一麻袋也好，一火车也好，在土豆们进行利害计算的时候，损益得失无异于一个土豆，并不像通常想象的那样是所有的土豆之和。零散的土豆无力保护自己的利益，需要高高在上的皇帝代表他们，赐予他们雨露阳光。</p>\n<p>真理未必总是讨人喜欢。</p>\n<p>身怀利器，杀心自起。</p>\n<p>在潜规则的生成过程中，当事人实际并不是两方，而是三方: 交易双方再加上更高层次的正式制度代表。双方进行私下交易的时候确实是两个主体，但是，当他们隐蔽这种交易的时候，就变成以正式制度为对手的一个联盟。隐蔽本身就是一种策略，这种策略的存在，反映了更高层次的正式制度代表的存在。</p>\n<p>道德操守是官僚集团自始自终卖力挥舞的一面大旗，它翻滚得如此夺目，根本就不容你不重视。 我完全承认，道德的力量是有效的，海瑞的刚直不阿可以为证。但道德的力量又是有限的，海瑞的罕见和盛名也可以为证。</p>\n<p><br></p>\n<blockquote>\n<p>此文内容为读书时把文中的精彩部分整理出来而做的笔记。<br><br>之所以想要做读书笔记，是因为常常高估了自己的记忆力。<br><br>把读书时候碰到美妙的地方都记下来，时常回味一下，让读书产生出更大的价值。</p>\n</blockquote>\n<p><code>声明:本资料仅供学习交流，严禁使用于任何商业用途!  如需转载，转载请注明出处。</code></p>\n","site":{"data":{}},"excerpt":"","more":"<div align=\"center\"><br>    <img src=\"/2018/02/21/qianguize/q1.jpg\"><br></div>\n\n<blockquote>\n<p><strong>云南人民出版社</strong><br>豆瓣评分: <strong><code>8.3</code></strong><br><em>版次</em>:<br><code>第1版 (2001年1月)</code><br><em>Pages</em>: 272</p>\n</blockquote>\n<p><br> </p>\n<p>现在说起潜规则，似乎只剩下演艺圈的男女之事了。但还原历史的时候，潜规则的存在范围其实是每一个角落。单说个简单的，譬如人们见面发烟，先是来回推几次手，嘴上说着不不，烟却已经在手指之间了。又如朋友聚会，你不喝酒，人家私下里就会嘀咕说这个人没出息酒都不会喝，因为交际的潜规则推搡着你必须喝酒，原本相交淡如水，这回是感情深一口闷。</p>\n<p>透过历史表象，揭示出隐藏在正式规则之下、实际上支配着社会运行的不成文的规矩，并将其名之日“潜规则”，进而指出潜规则的产生在于现实的利害计算与趋利避害。「p01」</p>\n<p>所以人人都是被潜规则，而没有人主动掌握了潜规则。</p>\n<p>张居正总结说：人们怕那些吏，一定要贿赂那些吏，并不是指望从他们手里捞点好处，而是怕他们祸害自己。合法地祸害别人的能力，乃是官吏们的看家本领。这是一门真正的艺术，种种资源和财富正要据此分肥并重新调整。 「p04」</p>\n<p>这次释放更充分地体现了“合法伤害权”或者倒过来叫“合法恩惠权”的橡皮筋一般的特性。奈何他低估了合法伤害权的伸缩性。「p05」</p>\n<p>总之,合法伤害权是很值钱的。有了这种权力,没有钱可以有钱,没有敛钱的规矩可以创造出规矩。「p10」</p>\n<p>挥动伤人的利器需要使用者心存恶意,这就需要克服良心的障碍。“赇”则替人免除了这些麻烦。「p14」</p>\n<p>只要是狼和羊在一起，他们之间的关系就定局了。假如你愿意，尽可以规定羊称狼为父母，狼称羊为儿女。颠倒过来当然也可以，让狼跟羊叫爹娘或者叫主人，羊则有权把狼叫做儿子或者仆人。随便你怎么规定，反正狼要吃羊。「p26」</p>\n<p>无论哪个朝代，人的一生必定要做平一个等式：一生总收益等于一生总开支；节余是遗产，亏损是债务。「p48」</p>\n<p>他也把灰色收入视为理所当然,视为生活中必不可少的一部分。「p50」</p>\n<p>势力所及之处,人们之间的关系越来越不成体统,实施的政策也越来越背离帝国公开宣称的政策。「p66」</p>\n<p>实际上,必定有人利用一些小机会,试探性地违法乱纪一下。「p82」</p>\n<p>官场利益是向着制造利益和伤害的能力流动的，如果制造利和害的能力谁都有一点，就会呈现利益均沾的局面，不过这种能力的分布并不那么平均。「p104」</p>\n<p>从平均的方面说，每个在官场上有影响的官员都有理由认为：我们都没有说你的坏话，我们有能力害你却没有害你，我们甚至还说了你的好话，让你得了这么一个美差肥缺，难道你就不能出点血，让大家也沾点光么？「p104」</p>\n<p>打秋风、请客吃饭、表礼水礼、程仪、炭敬冰敬别敬、三节两寿等等，都是在此规律下支配的官场利益分配机制。「p104」</p>\n<p>真实的常规是:对局者双赢,老百姓买单。「p112」</p>\n<p>我们已经看到了三个层次的选任官员的方式。表层是理论上冠冕堂皇的“选贤任能”,中层是论资排辈和抽签,底层是权势集团的私下请托,或者叫走后门。「p122」</p>\n<p>此外,论资排辈和抽签本身堪称极其高明的流线型设计。如果要发明一种在官场中的阻力最小、压力最轻、各方面都能接受的肥缺分配办法，恐怕那就是论资排辈加抽签。资格和辈分是硬指标，不容易产生争议，这就能够持久。「p125」</p>\n<p>至于在相同资格和辈分的条件下抽签抓阄，这是把前程交给天意和命运安排，而天意和命运也是人人尊重，根本就无法反对的。「p125」</p>\n<p>在潜规则的生成过程中，当事人实际并不是两方，而是三方：交易双方再加上更高层次的正式制度代表。双方进行私下交易的时候确实是两个主体，但是，当他们隐蔽这种交易的时候，就变成以正式制度为对手的一个联盟。隐蔽本身就是一种策略，这种策略的存在，反映了更高层次的正式制度代表的存在。「p194」</p>\n<p>这些年我们老说假货泛滥，以为世风日下，人心不古，似乎过去就没有假货，至少没有那么多假货，看来这是偏见。实际上，不仅我国制造和贩卖假货的技艺高超、历史久远，假货的普及程度恐怕也不在今天之下。「p209」</p>\n<p>古今中外的地摊和行贩行为都差不多。大店名店则另是一路。造成重大差别的不是时间、地域和民族，而是具体的商业制度。「p211」</p>\n<p>这时我想起了西方经济学的经济人假定人是理性自利的，人们都要追求个人利益的最大化。因此，只要贪污的风险不大，贪污就是他们的最佳策略。「p226」</p>\n<p>理解中国历史和国情的关键，恰恰在于搞清楚隐蔽在漂亮文章下边的实际利害格局。没有这种格局的保障，那些规定不过表达了政府的善良愿望或者骗人唬人的企图。</p>\n<p>所有规则的设立，说到底，都遵循一条根本规则：暴力最强者说了算。这是一条元规则，决定规则的规则。</p>\n<p>这些老百姓，按照马克思的比喻，就好像是一麻袋毫无组织的土豆。而缺乏组织的土豆，一麻袋也好，一火车也好，在土豆们进行利害计算的时候，损益得失无异于一个土豆，并不像通常想象的那样是所有的土豆之和。零散的土豆无力保护自己的利益，需要高高在上的皇帝代表他们，赐予他们雨露阳光。</p>\n<p>真理未必总是讨人喜欢。</p>\n<p>身怀利器，杀心自起。</p>\n<p>在潜规则的生成过程中，当事人实际并不是两方，而是三方: 交易双方再加上更高层次的正式制度代表。双方进行私下交易的时候确实是两个主体，但是，当他们隐蔽这种交易的时候，就变成以正式制度为对手的一个联盟。隐蔽本身就是一种策略，这种策略的存在，反映了更高层次的正式制度代表的存在。</p>\n<p>道德操守是官僚集团自始自终卖力挥舞的一面大旗，它翻滚得如此夺目，根本就不容你不重视。 我完全承认，道德的力量是有效的，海瑞的刚直不阿可以为证。但道德的力量又是有限的，海瑞的罕见和盛名也可以为证。</p>\n<p><br></p>\n<blockquote>\n<p>此文内容为读书时把文中的精彩部分整理出来而做的笔记。<br><br>之所以想要做读书笔记，是因为常常高估了自己的记忆力。<br><br>把读书时候碰到美妙的地方都记下来，时常回味一下，让读书产生出更大的价值。</p>\n</blockquote>\n<p><code>声明:本资料仅供学习交流，严禁使用于任何商业用途!  如需转载，转载请注明出处。</code></p>\n"},{"title":"Css Blocks","date":"2018-06-01T12:16:23.000Z","_content":"\n\n## 为你的前端框架和应用组件快速构建CSS\n\nCSS Blocks 是一个符合工程化标准、面向可维护的CSS组件化体系，它可以编译高性能的样式表。\n\n\nBy combining an opinionated authoring system, build-time analysis and rewriting of templates, and a new type of CSS optimizer, css-blocks breathes new power and ease of use into the technologies and best practices that stylesheet developers already know and love.\n\n> Interested in contributing, or just seeing CSS Blocks in action? Head over to CONTRIBUTING.md to learn how to spin up the project!\n\n\n## 为什么选择 CSS Blocks?\n\n应用css-blocks到你的项目，你可以得到如下好处：\n\n- 💎 每个组件是独立的css文件\n- 📦 范围样式风格（Scoped Styles）\n- 🔎 几乎无延时运行\n- 🔥 超级快速构建样式\n- 🚀 优化复杂工程项目\n- 🚨 CSS异常处理机制\n- 💥 清除无用代码\n- ✨ 面向对象的CSS\n\n当然了，最重要是，CSS Blocks 是具备闪(超)电(级)般(快)的静态可分析能力的。\n\n## 关于闪电般静态分析能力\n\nStatic analysis means css-blocks can look at your project and know with certainty that any given CSS declaration will, will not, or might under certain conditions, be used on any given element in your templates.\n\n并确定任何给定的CSS声明将在您的模板中的任何给定元素上使用，或者在某些条件下不会被使用。\n\n静态分析能力意味着css-blocks可以遍历你的项目代码，并确定","source":"_posts/tem.md","raw":"---\ntitle: Css Blocks\ndate: 2018-06-01 20:16:23\ncategories: 前端\ntags: \n- css\n---\n\n\n## 为你的前端框架和应用组件快速构建CSS\n\nCSS Blocks 是一个符合工程化标准、面向可维护的CSS组件化体系，它可以编译高性能的样式表。\n\n\nBy combining an opinionated authoring system, build-time analysis and rewriting of templates, and a new type of CSS optimizer, css-blocks breathes new power and ease of use into the technologies and best practices that stylesheet developers already know and love.\n\n> Interested in contributing, or just seeing CSS Blocks in action? Head over to CONTRIBUTING.md to learn how to spin up the project!\n\n\n## 为什么选择 CSS Blocks?\n\n应用css-blocks到你的项目，你可以得到如下好处：\n\n- 💎 每个组件是独立的css文件\n- 📦 范围样式风格（Scoped Styles）\n- 🔎 几乎无延时运行\n- 🔥 超级快速构建样式\n- 🚀 优化复杂工程项目\n- 🚨 CSS异常处理机制\n- 💥 清除无用代码\n- ✨ 面向对象的CSS\n\n当然了，最重要是，CSS Blocks 是具备闪(超)电(级)般(快)的静态可分析能力的。\n\n## 关于闪电般静态分析能力\n\nStatic analysis means css-blocks can look at your project and know with certainty that any given CSS declaration will, will not, or might under certain conditions, be used on any given element in your templates.\n\n并确定任何给定的CSS声明将在您的模板中的任何给定元素上使用，或者在某些条件下不会被使用。\n\n静态分析能力意味着css-blocks可以遍历你的项目代码，并确定","slug":"tem","published":1,"updated":"2022-08-30T04:25:07.588Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl7fovity00060do75yayeh4u","content":"<h2 id=\"为你的前端框架和应用组件快速构建CSS\"><a href=\"#为你的前端框架和应用组件快速构建CSS\" class=\"headerlink\" title=\"为你的前端框架和应用组件快速构建CSS\"></a>为你的前端框架和应用组件快速构建CSS</h2><p>CSS Blocks 是一个符合工程化标准、面向可维护的CSS组件化体系，它可以编译高性能的样式表。</p>\n<p>By combining an opinionated authoring system, build-time analysis and rewriting of templates, and a new type of CSS optimizer, css-blocks breathes new power and ease of use into the technologies and best practices that stylesheet developers already know and love.</p>\n<blockquote>\n<p>Interested in contributing, or just seeing CSS Blocks in action? Head over to CONTRIBUTING.md to learn how to spin up the project!</p>\n</blockquote>\n<h2 id=\"为什么选择-CSS-Blocks\"><a href=\"#为什么选择-CSS-Blocks\" class=\"headerlink\" title=\"为什么选择 CSS Blocks?\"></a>为什么选择 CSS Blocks?</h2><p>应用css-blocks到你的项目，你可以得到如下好处：</p>\n<ul>\n<li>💎 每个组件是独立的css文件</li>\n<li>📦 范围样式风格（Scoped Styles）</li>\n<li>🔎 几乎无延时运行</li>\n<li>🔥 超级快速构建样式</li>\n<li>🚀 优化复杂工程项目</li>\n<li>🚨 CSS异常处理机制</li>\n<li>💥 清除无用代码</li>\n<li>✨ 面向对象的CSS</li>\n</ul>\n<p>当然了，最重要是，CSS Blocks 是具备闪(超)电(级)般(快)的静态可分析能力的。</p>\n<h2 id=\"关于闪电般静态分析能力\"><a href=\"#关于闪电般静态分析能力\" class=\"headerlink\" title=\"关于闪电般静态分析能力\"></a>关于闪电般静态分析能力</h2><p>Static analysis means css-blocks can look at your project and know with certainty that any given CSS declaration will, will not, or might under certain conditions, be used on any given element in your templates.</p>\n<p>并确定任何给定的CSS声明将在您的模板中的任何给定元素上使用，或者在某些条件下不会被使用。</p>\n<p>静态分析能力意味着css-blocks可以遍历你的项目代码，并确定</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"为你的前端框架和应用组件快速构建CSS\"><a href=\"#为你的前端框架和应用组件快速构建CSS\" class=\"headerlink\" title=\"为你的前端框架和应用组件快速构建CSS\"></a>为你的前端框架和应用组件快速构建CSS</h2><p>CSS Blocks 是一个符合工程化标准、面向可维护的CSS组件化体系，它可以编译高性能的样式表。</p>\n<p>By combining an opinionated authoring system, build-time analysis and rewriting of templates, and a new type of CSS optimizer, css-blocks breathes new power and ease of use into the technologies and best practices that stylesheet developers already know and love.</p>\n<blockquote>\n<p>Interested in contributing, or just seeing CSS Blocks in action? Head over to CONTRIBUTING.md to learn how to spin up the project!</p>\n</blockquote>\n<h2 id=\"为什么选择-CSS-Blocks\"><a href=\"#为什么选择-CSS-Blocks\" class=\"headerlink\" title=\"为什么选择 CSS Blocks?\"></a>为什么选择 CSS Blocks?</h2><p>应用css-blocks到你的项目，你可以得到如下好处：</p>\n<ul>\n<li>💎 每个组件是独立的css文件</li>\n<li>📦 范围样式风格（Scoped Styles）</li>\n<li>🔎 几乎无延时运行</li>\n<li>🔥 超级快速构建样式</li>\n<li>🚀 优化复杂工程项目</li>\n<li>🚨 CSS异常处理机制</li>\n<li>💥 清除无用代码</li>\n<li>✨ 面向对象的CSS</li>\n</ul>\n<p>当然了，最重要是，CSS Blocks 是具备闪(超)电(级)般(快)的静态可分析能力的。</p>\n<h2 id=\"关于闪电般静态分析能力\"><a href=\"#关于闪电般静态分析能力\" class=\"headerlink\" title=\"关于闪电般静态分析能力\"></a>关于闪电般静态分析能力</h2><p>Static analysis means css-blocks can look at your project and know with certainty that any given CSS declaration will, will not, or might under certain conditions, be used on any given element in your templates.</p>\n<p>并确定任何给定的CSS声明将在您的模板中的任何给定元素上使用，或者在某些条件下不会被使用。</p>\n<p>静态分析能力意味着css-blocks可以遍历你的项目代码，并确定</p>\n"},{"title":"「记」♥《围城》钱钟书","date":"2018-05-27T03:27:32.000Z","_content":"\n<div  align=\"center\">    \n    <img src=\"/2018/05/27/weicheng/w1.jpg\">\n</div>\n\n> __人民文学出版社__\n> 豆瓣评分: **`8.9`**\n> *版次*: \n> `第1版 (1980年10月)` \n>`第2版 (1991年2月1日)`\n> _Pages_: 377\n \n\n<br /> \n\n\n这船，依仗人的机巧，载满人的扰攘，寄满人的希望，热闹地行着，每分钟把沾污人气的一方水面，还给那无情、无尽、无际的大海。「p02」\n\n那女人平日就有一种孤芳自赏、落落难合的神情－－大宴会上没人敷衍的来宾或喜酒席上过时未嫁的少女所常有的神情－－此刻更流露出嫌恶，黑眼镜也遮盖不了。「p03」\n\n上帝会懊悔没在人身上添一条能摇的狗尾巴，因此减低了不知多少表情的效果。\n\n忠厚老实人的恶毒，像饭里的沙砾或者出骨鱼片里未淨的刺，会给人一种不期待的伤痛。「p05」\n\n一张文凭，仿佛有亚当、夏娃下身那片树叶的功用，可以遮羞包丑；小小一方纸能把一个人的空疏、寡陋、愚笨都掩盖起来。「p10」\n\n当着心爱的男人，每个女人都有返老还童的绝技。「p24」\n\n满天的星又密又忙，它们声息全无，而看来只觉得天上热闹。一梳月亮像形容未长成的女孩子，但见人己不羞缩，光明和轮廓都清新露，渐渐可烘衬夜景。小园草地里的小虫琐琐屑屑地在夜谈。不知那里的蛙群齐心协力地干号，像声浪给火煮得发沸。几星萤火优游来去，不像飞行，像在厚密的空气里漂浮；月光不到的阴黑处，一点萤火忽明，像夏夜的一只微绿的小眼睛。「p30」\n\n拼命追忆，只像把筛子去盛水。一着急，注意力集中不起来，思想的线索要打成结又松散了。隐约还有些事实的影子，但好比在热闹地方等人，瞥眼人堆里像是他，走上去找，又不见了。「p35」\n\n方鸿渐住家一个星期，感觉出国这四年光阴，对家乡好像荷叶上泻过的水，留不下一点痕迹。回来所碰见的还是四年前那些人，那些人还是做四年前所做的事，说四年前所说的话。「p38」\n\n方老先生因为拒绝了本县汉奸的引诱，有家难归，而政府并没给他什么名义，觉得他爱国而国不爱他，大有青年守节的孀妇不见宠于翁姑的怨抑。「p39」\n\n张先生跟外国人来往惯了，说话有个特征——也许在洋行、青年会、扶轮社等圈子里，这并没有什么奇特———喜欢中国话里夹无谓的英文字。他并无中文难达的新意，需要借英文来讲;所以他说话里嵌的英文字，还比不得嘴里嵌的金牙，因为金牙不仅妆点，尚可使用，只好比牙缝里嵌的肉屑，表示饭菜吃得好，此外全无用处。「p41」\n\n那年春天，气候特别好。这春气鼓动得人心像婴孩出齿时的牙龈肉，受到一种生机透芽的痛痒。「p46」\n\n有许多都市女孩子已经是装模作样的早熟女人，算不得孩子；有许多女孩子只是浑沌痴顽的无性别孩子，还说不上女人。「p49」\n\n她跟辛楣的长期认识并不会日积月累地成为恋爱，好比冬季每天的气候罢，你没法把今天的温度加在昨天的上面好把明天积成个和暖的春日。「p54」\n\n苏小姐不是听众，赵辛楣有本领使不出来。 (苏文纨对赵辛楣是没有情意的)「p55」\n\n那女孩子不过十六七岁，脸化妆得就像搓油摘粉调胭脂捏出来的假面具。鸿渐想上海不愧是文明先进之区，中学女孩子已经把门面油漆粉刷，招徕男人了。可是这女孩子的脸假得老实，因为决没人相信贴在她脸上的那张脂粉薄饼会是她的本来面目。「p57」\n\n他这两天有了意中人以后，对自己外表上的缺点，知道得不宽假地详尽，仿佛只有一套出客衣服的穷人知道上面每一个斑渍和补丁。「p64」\n\n婚姻是一座围城，城外的人想进去，城里的人想出来。\n\n在大学里，理科学生瞧不起文科学生，外国语文系学生瞧不起中国文学系学生，中国文学系学生瞧不起哲学系学生，哲学系学生瞧不起社会学系学生，社会学系学生瞧不起教育系学生，教育系学生没有谁可以给他们瞧不起了，只能瞧不起本系的先生。 「p76」\n\n女人有女人特别的聪明，轻盈活泼得跟她的举动一样。比了这种聪明，才学不过是沉淀渣滓。说女人有才学，就仿佛赞美一朵花，说它在天平上称起来有白菜番薯的斤两。真聪明的女人决不用功做成才女，她只巧妙的偷懒.「p79」\n\n见面有瘾的; 最初，约着见一面就能使见面的前后几天都沾着光，变成好日子。渐渐地恨不能天天见面了；到后来，恨不能刻刻见面了。「p83」\n\n大家照例称好，斜川客气地淡漠，仿佛领袖受民众欢迎时的表情。「p95」\n\n苏小姐知道他在看自己，回脸对他微笑，鸿渐要抵抗这魅力的决心，像出水的鱼，头尾在地上拍动，可是挣扎不起。「p99」\n\n觉得剩余的今夜只像海水浴的跳板，自己站在板的极端，会一跳冲进明天的快乐里，又兴奋，又战栗。「p101」\n\n有时候“不再坐一会么？“ 可以撵走人；有时候“再会”可以挽留人；唐小姐挽不住方鸿渐，所以加一句“希望你远行一路平安”。「p107」\n\n过些时，他才像从昏厥里醒过来，开始不住的心痛，就像因蜷曲而麻木的四肢，到伸直了血脉流通，就觉得刺痛。昨天囫囵吞地忍受的整块痛苦，当时没工夫辨别滋味，现在，牛反刍似的，零星断续，细嚼出深深没底的回味。「p110」\n\n有人失恋了，会把他们的伤心立刻像叫化子的烂腿，血淋淋地公开展览，博人怜悯，或者事过境迁，像战士的金疮旧斑，脱衣指示，使人惊佩。鸿渐只希望能在心理的黑暗里隐蔽着，仿佛害病的眼睛避光，破碎的皮肉怕风。「p111」\n\n他说的“让她三分”，不是“三分流水七分尘”的“三分”，是“天下只有三分月色”的“三分”。「p112」\n\n周家一天也呆不住了，只有回到父亲母亲那儿挤几天再说，像在外面挨了打的狗夹着尾巴窜回家。「p115」\n\n这两天来，人都气笨了，后脑里像棉花裹的鼓槌在打布蒙的鼓，模糊地沉重，一下一下的跳痛，想不出圆满的遮羞方式。「p115」\n\n可是，心里的痛苦不露在脸上，是桩难事。女人有化妆品的援助，胭脂涂得浓些，粉擦得厚些，红白分明会掩饰了内心的凄黯。\n\n在西洋家庭里，丈母娘跟女婿的争斗，是至今保存的古风，我们中国家庭里婆婆和媳妇的敌视，也不输于他们那样悠久的历史。只有媳妇怀孕，婆婆要依仗了她才能荣升祖母，于是对她开始迁就，到媳妇养了个真实不假的男孩子，婆婆更加让步。「p119」\n\n那女明星的娇声尖锐里含着浑浊，一大半像鼻子里哼出来的，又腻又粘,又软懒无力,与鼻子的主产品鼻涕具有同样品性。「p124」\n\n从前愚民政策是不许人民受教育，现代愚民政策是只许人民受某一种教育。不受教育的人，因为不识字，上人的当，受教育的人，因为识了字，上印刷品的当，像你们的报纸宣传品、训练干部讲义之类。「p130」\n\n本来苍白的脸色现在红得像生牛肉,两眼里新织满红血丝,肚子肥凸的像青蛙在鼓气，法国人在国际上的绰号是虾蟆，真正名副其实,可惊的是添了一团凶横的兽像。上海这地方比得上希腊神话里的魔女岛,好好一个人来了就会变成畜生。（讲从乡下人初出门的寒窘到租界巡捕的恶劣）「p133」\n\n狗为着追求水里肉骨头的影子，丧失了到嘴的肉骨头！跟爱人如愿以偿结了婚，恐怕那时肉骨头下肚，倒要对水怅惜这不可再见的影子了。「p138」\n\n我忽然想，就是我自己结婚行礼，在万目睽睽之下，也免不了像个被破获的扒手。因此我恍然大悟，那种眉花眼笑的美满结婚照相，全不是当时照的。「p139」\n\n鸿渐只有感佩，想女人这怪东西，要体贴起人来，真是无微不至，汗毛孔的折叠里都给她温存到。「p148」\n\n真料想不到小车厢会像有弹性，容得下这许多人。车厢仿佛沙丁鱼罐，里面的人紧紧的挤得身子都扁了。可是沙丁鱼的骨头，深藏在自己身体里，这些乘客的肘骨膝骨都向旁人的身体里硬嵌。罐装的沙丁鱼条条挺直，这些乘客都蜷曲波折，腰跟腿弯成几何学上有名目的角度。「p153」\n\n每逢它不肯走，汽车夫就破口臭骂，此刻骂得更利害了。骂来骂去，只有一个意思：汽车夫愿意跟汽车的母亲和祖母发生肉体恋爱。骂的话虽然欠缺变化，骂的力气愈来愈足。「p154」\n\n有位子坐的人，不但身体安稳，心理也占优势；他们可以冷眼端详那些没座位的人，而那些站的人只望着窗外，没勇气回看他们。「p156」\n\n掌柜写账的桌子边坐个胖女人坦白地摊开白而不坦的胸膛，喂孩子吃奶；奶是孩子吃的饭，所以也该在饭堂吃，证明这旅馆是科学管理的。她满腔都是肥腻腻的营养，小孩子吸的想是加糖的溶化猪油。她那样肥硕，表示这店里的饭菜也营养丰富；她靠掌柜坐着，算得不落言诠的好广告。「p156」\n\n亚当和夏娃为好奇心失去了天堂，顾尔廉也为好奇心失去了李梅亭安放他的天堂，恭维都挽回不来了，跟着的几句话险的使他进地狱。「p161」\n\n”两人“鸡生蛋”“蛋生鸡”的句法练习没有了期，反正谁嗓子高，谁的话就是真理。「p173」\n\n那寡妇远远的望着孙小姐，使她想起牛或马的瞪眼向人涓求，因为眼睛就是不会说话的动物的舌头。「p174」\n\n向吉安去的路上，他们都恨汽车又笨又慢，把他们跃跃欲前的心也拖累了不能自由，同时又怕到了吉安一场空，愿意这车走下去，走下去，永远在开动，永远不到达，替希望留着一线生机。「p177」\n\n鸿渐饿得睡不熟，身子像没有放文件的公文包，几乎腹背相贴，才领略出法国人所谓“长得像没有面包吃的日子”还不够亲切，长得像没有面包吃的日子，长得像失眠的夜，都比不上因没有面包吃而失眠的夜那样漫漫难度。 「p179」\n\n烤山薯这东西，本来像中国谚语里的私情男女，“偷着不如偷不着，”香味比滋味好；你闻的时候，觉得非吃不可，真到嘴，也不过尔尔。 「p179」\n\n那女同志跟她的男朋友宛如诗人“尽日觅不得,有时还自来”的妙句,忽然光顾,五个人欢喜得像遇见久别的情人,亲热得像狗迎接回家的主人。「p181」\n\n旅馆与银行间这条路径,他们的鞋子也走熟得不必有脚而能自身来回了。「p182」\n\n孙小姐满以为“贵人”指的自己，早低着头，一阵红的消息在脸上透漏，后来听见这话全不相干，这红像暖天向玻璃上呵的气，没成晕就散了。「p182」\n\n对于丑人，细看是一种残忍——除非他是坏人，你要惩罚他。「p183」\n\n两人参考生平关于女人的全部学问,来解释她为什么哭。结果英雄所见略同,说她的哭大半由于心理的痛苦;女孩子千里辞家,半途生病,举目无亲,自然要哭。「p185」\n\n像咱们这种旅行，最试验得出一个人的品性。旅行是最劳顿，最麻烦，叫人本相毕现的时候。经过长期苦旅行而彼此不讨厌的人，才可以结交作朋友。结婚以后的蜜月旅行是次序颠倒的，应该先同旅行一个月，一个月舟车仆仆以后，双方还没有彼此看破，彼此厌恶，还没有吵嘴翻脸，还要维持原来的婚约，这种夫妇保证不会离婚。「p188」\n\n你不讨厌，可是全无用处。「p188」\n\n现代人有两个流行的信仰。第一：女子无貌便是德，所以漂亮女人准比不上丑女人那样有思想，有品节；第二：男子无口才，就表示有道德，所以哑巴是天下最诚朴的人。「p204」\n\n鸿渐研究出西洋人丑得跟中国人不同:中国人丑像造物者偷工减料的结果，潦草塞责的丑;西洋人丑像造物者恶意的表现，所以丑得有计划、有作用。「p207」\n\n事实上，一个人的缺点正像猴子的尾巴，猴子蹲在地面的时候，尾巴是看不见的，直到他像树上爬，就把后部供大家瞻仰，可是这红臀长尾巴本来就有，并非地位爬高了的新标识。「p218」\n\n在这种时候，她(范小姐)才发现这些富有哲理的警句没有什么帮助。活诚然不痛快，死可也不容易; 黑夜似乎够深了，光明依然看不见。「p237」\n\n年龄是个自然历程里不能超越的事实，就像饮食男女，像死亡。有时，这种年辈意识比阶级意识更鲜明。随你政见、学说或趣味如何相同，年辈的老少总替你隐隐分了界限，仿佛磁器上的裂纹，平时一点没有什么，一旦受着震动，这条裂纹先扩大成裂缝。也许自己更老了十几年，会要跟青年人混在一起，借他们的生气来温暖自己的衰朽。「p260」\n\n这种抱行政野心的人最靠不住，捧他上了台，自己未必有多大好处；仿佛洋车夫辛辛苦苦把坐车人拉到了饭店，依然拖着空车子吃西风，别想跟他进去吃「p261」\n\n\n讲师升副教授容易，副教授升教授难上加难。我在华阳大学的时候，他们有这么一比，讲师比通房丫头，教授比夫人，副教授呢，等于如夫人－－”鸿渐听得笑起来－－“这一字之差，不可以道里计。丫头收房做姨太太，是很普通－－至少在以前很普通的事；姨太太要扶正做大太太，那是干犯纲常名教，做不得的。前清不是有副对么？‘为如夫人洗足；赐同进士出身。「p262」\n\n得学位是把论文哄过自己的先生；教书是把讲义哄过自己的学生。鸿渐当年没哄过先生，所以未得学位，现在要哄学生，不免欠缺依傍。教授成为名教授，也有两个阶段：第一是讲义当著作，第二著作当讲义。好比初学的理发匠先把傻子和穷人的头作为联系本领的试验品，所以讲义在讲堂上试用没出乱子，就作为著作出版；出版以后，当然是指定教本。「p263」\n\n高松年自从昨晚的事,神经特别敏锐,鸿渐这口气吐得太早,落在他耳朵里。他嘴没骂 出\"混帐\"来,他脸代替嘴表示了这句骂。「p268」\n\n在吵架的时候，先开口的未必占上风，后闭口才算胜利。「p275」\n\n吃不消的是这些同事的态度。他们仿佛全知道自己解聘，但因为这事并未公开，他们的同情也只好加上封套包裹，遮遮掩掩地奉送。往往平日很疏远的人，忽来拜访。他知道他们来意是探口气，便一字不提，可是精神和说话里包含的惋惜，总像圣诞老人放在袜子里的礼物，送了才肯走。这种同情比笑骂还难受。「p275」\n\n天下只有两种人。譬如一串葡萄到手，一种人挑最好的先吃，另一种人把最好的留在最后吃。照例第一种人应该乐观，因为他每吃一颗都是吃剩的葡萄里最好的;第二种人应该悲观，因为他每吃一颗都是吃剩的葡萄里最坏的。不过事实上适得其反，缘故是第二种人还有希望，第一种只有回忆。 「p276」\n\n一切机关的首长上办公室，本来像隆冬的太阳或者一生里的好运气，来得很迟，取得很早。「p280」\n\n他感激地喜欢，才明白贪官下任，还要地方挽留，献万民伞、立德政碑的心理。离开一个地方就等于死一次，自知免不了一死，总希望人家表示愿意自己活下去。去后的毁誉，正跟死后的哀荣一样关心而无法知道，深怕一走或一死，像洋蜡烛一灭，留下的只是臭味。有人送别，仿佛临死的人有孝子顺孙送终，死也安心闭眼。「p280」\n\n鸿渐暗笑女人真是天生的政治家，她们俩背后彼此诽谤，面子上却这样多情，两个政敌在香槟酒会上碰杯的一套工夫，怕也不过如此。假使不是亲耳朵听见她们的互相刻薄，自己也以为她们真是好朋友了。「p281」\n\n辛楣这一席谈,引起他许多思绪。一个人应该得意,得意的人谈话都有精彩,譬如辛楣。「p287」\n\n我今天出去回来都没坐车,这东西是我省下来的车钱买的。当然我有钱买水果,可是省下钱来买,好像那才算得真正是我给你的。「p292」\n\n鸿渐这两天近乡情怯，心事重重。他觉得回家并不像理想那样的简单。远别虽非等于暂死，至少变得陌生。回家只像半生的东西回锅，要煮一会才会熟。「p303」\n\n\n「p304」\n\n「p310」\n\n「p310」\n\n「p310」\n\n「p310」\n\n「p310」\n\n「p310」\n\n「p310」\n\n「p310」\n\n「p310」\n\n「p310」\n\n「p310」\n\n「p310」\n\n\n\n<br />\n\n#### 更新中 ...\n\n<br />\n\n> 此文内容为读书时把文中的精彩部分整理出来而做的笔记。<br />\n之所以想要做读书笔记，是因为常常高估了自己的记忆力。<br />\n把读书时候碰到美妙的地方都记下来，时常回味一下，让读书产生出更大的价值。\n\n`声明:本资料仅供学习交流，严禁使用于任何商业用途!  如需转载，转载请注明出处。`\n\n\n\n","source":"_posts/weicheng.md","raw":"---\ntitle: 「记」♥《围城》钱钟书 \ndate: 2018-05-27 11:27:32\ncategories: 札记\ntags:\n- v2018\n- 小说\n- 文学\n---\n\n<div  align=\"center\">    \n    <img src=\"/2018/05/27/weicheng/w1.jpg\">\n</div>\n\n> __人民文学出版社__\n> 豆瓣评分: **`8.9`**\n> *版次*: \n> `第1版 (1980年10月)` \n>`第2版 (1991年2月1日)`\n> _Pages_: 377\n \n\n<br /> \n\n\n这船，依仗人的机巧，载满人的扰攘，寄满人的希望，热闹地行着，每分钟把沾污人气的一方水面，还给那无情、无尽、无际的大海。「p02」\n\n那女人平日就有一种孤芳自赏、落落难合的神情－－大宴会上没人敷衍的来宾或喜酒席上过时未嫁的少女所常有的神情－－此刻更流露出嫌恶，黑眼镜也遮盖不了。「p03」\n\n上帝会懊悔没在人身上添一条能摇的狗尾巴，因此减低了不知多少表情的效果。\n\n忠厚老实人的恶毒，像饭里的沙砾或者出骨鱼片里未淨的刺，会给人一种不期待的伤痛。「p05」\n\n一张文凭，仿佛有亚当、夏娃下身那片树叶的功用，可以遮羞包丑；小小一方纸能把一个人的空疏、寡陋、愚笨都掩盖起来。「p10」\n\n当着心爱的男人，每个女人都有返老还童的绝技。「p24」\n\n满天的星又密又忙，它们声息全无，而看来只觉得天上热闹。一梳月亮像形容未长成的女孩子，但见人己不羞缩，光明和轮廓都清新露，渐渐可烘衬夜景。小园草地里的小虫琐琐屑屑地在夜谈。不知那里的蛙群齐心协力地干号，像声浪给火煮得发沸。几星萤火优游来去，不像飞行，像在厚密的空气里漂浮；月光不到的阴黑处，一点萤火忽明，像夏夜的一只微绿的小眼睛。「p30」\n\n拼命追忆，只像把筛子去盛水。一着急，注意力集中不起来，思想的线索要打成结又松散了。隐约还有些事实的影子，但好比在热闹地方等人，瞥眼人堆里像是他，走上去找，又不见了。「p35」\n\n方鸿渐住家一个星期，感觉出国这四年光阴，对家乡好像荷叶上泻过的水，留不下一点痕迹。回来所碰见的还是四年前那些人，那些人还是做四年前所做的事，说四年前所说的话。「p38」\n\n方老先生因为拒绝了本县汉奸的引诱，有家难归，而政府并没给他什么名义，觉得他爱国而国不爱他，大有青年守节的孀妇不见宠于翁姑的怨抑。「p39」\n\n张先生跟外国人来往惯了，说话有个特征——也许在洋行、青年会、扶轮社等圈子里，这并没有什么奇特———喜欢中国话里夹无谓的英文字。他并无中文难达的新意，需要借英文来讲;所以他说话里嵌的英文字，还比不得嘴里嵌的金牙，因为金牙不仅妆点，尚可使用，只好比牙缝里嵌的肉屑，表示饭菜吃得好，此外全无用处。「p41」\n\n那年春天，气候特别好。这春气鼓动得人心像婴孩出齿时的牙龈肉，受到一种生机透芽的痛痒。「p46」\n\n有许多都市女孩子已经是装模作样的早熟女人，算不得孩子；有许多女孩子只是浑沌痴顽的无性别孩子，还说不上女人。「p49」\n\n她跟辛楣的长期认识并不会日积月累地成为恋爱，好比冬季每天的气候罢，你没法把今天的温度加在昨天的上面好把明天积成个和暖的春日。「p54」\n\n苏小姐不是听众，赵辛楣有本领使不出来。 (苏文纨对赵辛楣是没有情意的)「p55」\n\n那女孩子不过十六七岁，脸化妆得就像搓油摘粉调胭脂捏出来的假面具。鸿渐想上海不愧是文明先进之区，中学女孩子已经把门面油漆粉刷，招徕男人了。可是这女孩子的脸假得老实，因为决没人相信贴在她脸上的那张脂粉薄饼会是她的本来面目。「p57」\n\n他这两天有了意中人以后，对自己外表上的缺点，知道得不宽假地详尽，仿佛只有一套出客衣服的穷人知道上面每一个斑渍和补丁。「p64」\n\n婚姻是一座围城，城外的人想进去，城里的人想出来。\n\n在大学里，理科学生瞧不起文科学生，外国语文系学生瞧不起中国文学系学生，中国文学系学生瞧不起哲学系学生，哲学系学生瞧不起社会学系学生，社会学系学生瞧不起教育系学生，教育系学生没有谁可以给他们瞧不起了，只能瞧不起本系的先生。 「p76」\n\n女人有女人特别的聪明，轻盈活泼得跟她的举动一样。比了这种聪明，才学不过是沉淀渣滓。说女人有才学，就仿佛赞美一朵花，说它在天平上称起来有白菜番薯的斤两。真聪明的女人决不用功做成才女，她只巧妙的偷懒.「p79」\n\n见面有瘾的; 最初，约着见一面就能使见面的前后几天都沾着光，变成好日子。渐渐地恨不能天天见面了；到后来，恨不能刻刻见面了。「p83」\n\n大家照例称好，斜川客气地淡漠，仿佛领袖受民众欢迎时的表情。「p95」\n\n苏小姐知道他在看自己，回脸对他微笑，鸿渐要抵抗这魅力的决心，像出水的鱼，头尾在地上拍动，可是挣扎不起。「p99」\n\n觉得剩余的今夜只像海水浴的跳板，自己站在板的极端，会一跳冲进明天的快乐里，又兴奋，又战栗。「p101」\n\n有时候“不再坐一会么？“ 可以撵走人；有时候“再会”可以挽留人；唐小姐挽不住方鸿渐，所以加一句“希望你远行一路平安”。「p107」\n\n过些时，他才像从昏厥里醒过来，开始不住的心痛，就像因蜷曲而麻木的四肢，到伸直了血脉流通，就觉得刺痛。昨天囫囵吞地忍受的整块痛苦，当时没工夫辨别滋味，现在，牛反刍似的，零星断续，细嚼出深深没底的回味。「p110」\n\n有人失恋了，会把他们的伤心立刻像叫化子的烂腿，血淋淋地公开展览，博人怜悯，或者事过境迁，像战士的金疮旧斑，脱衣指示，使人惊佩。鸿渐只希望能在心理的黑暗里隐蔽着，仿佛害病的眼睛避光，破碎的皮肉怕风。「p111」\n\n他说的“让她三分”，不是“三分流水七分尘”的“三分”，是“天下只有三分月色”的“三分”。「p112」\n\n周家一天也呆不住了，只有回到父亲母亲那儿挤几天再说，像在外面挨了打的狗夹着尾巴窜回家。「p115」\n\n这两天来，人都气笨了，后脑里像棉花裹的鼓槌在打布蒙的鼓，模糊地沉重，一下一下的跳痛，想不出圆满的遮羞方式。「p115」\n\n可是，心里的痛苦不露在脸上，是桩难事。女人有化妆品的援助，胭脂涂得浓些，粉擦得厚些，红白分明会掩饰了内心的凄黯。\n\n在西洋家庭里，丈母娘跟女婿的争斗，是至今保存的古风，我们中国家庭里婆婆和媳妇的敌视，也不输于他们那样悠久的历史。只有媳妇怀孕，婆婆要依仗了她才能荣升祖母，于是对她开始迁就，到媳妇养了个真实不假的男孩子，婆婆更加让步。「p119」\n\n那女明星的娇声尖锐里含着浑浊，一大半像鼻子里哼出来的，又腻又粘,又软懒无力,与鼻子的主产品鼻涕具有同样品性。「p124」\n\n从前愚民政策是不许人民受教育，现代愚民政策是只许人民受某一种教育。不受教育的人，因为不识字，上人的当，受教育的人，因为识了字，上印刷品的当，像你们的报纸宣传品、训练干部讲义之类。「p130」\n\n本来苍白的脸色现在红得像生牛肉,两眼里新织满红血丝,肚子肥凸的像青蛙在鼓气，法国人在国际上的绰号是虾蟆，真正名副其实,可惊的是添了一团凶横的兽像。上海这地方比得上希腊神话里的魔女岛,好好一个人来了就会变成畜生。（讲从乡下人初出门的寒窘到租界巡捕的恶劣）「p133」\n\n狗为着追求水里肉骨头的影子，丧失了到嘴的肉骨头！跟爱人如愿以偿结了婚，恐怕那时肉骨头下肚，倒要对水怅惜这不可再见的影子了。「p138」\n\n我忽然想，就是我自己结婚行礼，在万目睽睽之下，也免不了像个被破获的扒手。因此我恍然大悟，那种眉花眼笑的美满结婚照相，全不是当时照的。「p139」\n\n鸿渐只有感佩，想女人这怪东西，要体贴起人来，真是无微不至，汗毛孔的折叠里都给她温存到。「p148」\n\n真料想不到小车厢会像有弹性，容得下这许多人。车厢仿佛沙丁鱼罐，里面的人紧紧的挤得身子都扁了。可是沙丁鱼的骨头，深藏在自己身体里，这些乘客的肘骨膝骨都向旁人的身体里硬嵌。罐装的沙丁鱼条条挺直，这些乘客都蜷曲波折，腰跟腿弯成几何学上有名目的角度。「p153」\n\n每逢它不肯走，汽车夫就破口臭骂，此刻骂得更利害了。骂来骂去，只有一个意思：汽车夫愿意跟汽车的母亲和祖母发生肉体恋爱。骂的话虽然欠缺变化，骂的力气愈来愈足。「p154」\n\n有位子坐的人，不但身体安稳，心理也占优势；他们可以冷眼端详那些没座位的人，而那些站的人只望着窗外，没勇气回看他们。「p156」\n\n掌柜写账的桌子边坐个胖女人坦白地摊开白而不坦的胸膛，喂孩子吃奶；奶是孩子吃的饭，所以也该在饭堂吃，证明这旅馆是科学管理的。她满腔都是肥腻腻的营养，小孩子吸的想是加糖的溶化猪油。她那样肥硕，表示这店里的饭菜也营养丰富；她靠掌柜坐着，算得不落言诠的好广告。「p156」\n\n亚当和夏娃为好奇心失去了天堂，顾尔廉也为好奇心失去了李梅亭安放他的天堂，恭维都挽回不来了，跟着的几句话险的使他进地狱。「p161」\n\n”两人“鸡生蛋”“蛋生鸡”的句法练习没有了期，反正谁嗓子高，谁的话就是真理。「p173」\n\n那寡妇远远的望着孙小姐，使她想起牛或马的瞪眼向人涓求，因为眼睛就是不会说话的动物的舌头。「p174」\n\n向吉安去的路上，他们都恨汽车又笨又慢，把他们跃跃欲前的心也拖累了不能自由，同时又怕到了吉安一场空，愿意这车走下去，走下去，永远在开动，永远不到达，替希望留着一线生机。「p177」\n\n鸿渐饿得睡不熟，身子像没有放文件的公文包，几乎腹背相贴，才领略出法国人所谓“长得像没有面包吃的日子”还不够亲切，长得像没有面包吃的日子，长得像失眠的夜，都比不上因没有面包吃而失眠的夜那样漫漫难度。 「p179」\n\n烤山薯这东西，本来像中国谚语里的私情男女，“偷着不如偷不着，”香味比滋味好；你闻的时候，觉得非吃不可，真到嘴，也不过尔尔。 「p179」\n\n那女同志跟她的男朋友宛如诗人“尽日觅不得,有时还自来”的妙句,忽然光顾,五个人欢喜得像遇见久别的情人,亲热得像狗迎接回家的主人。「p181」\n\n旅馆与银行间这条路径,他们的鞋子也走熟得不必有脚而能自身来回了。「p182」\n\n孙小姐满以为“贵人”指的自己，早低着头，一阵红的消息在脸上透漏，后来听见这话全不相干，这红像暖天向玻璃上呵的气，没成晕就散了。「p182」\n\n对于丑人，细看是一种残忍——除非他是坏人，你要惩罚他。「p183」\n\n两人参考生平关于女人的全部学问,来解释她为什么哭。结果英雄所见略同,说她的哭大半由于心理的痛苦;女孩子千里辞家,半途生病,举目无亲,自然要哭。「p185」\n\n像咱们这种旅行，最试验得出一个人的品性。旅行是最劳顿，最麻烦，叫人本相毕现的时候。经过长期苦旅行而彼此不讨厌的人，才可以结交作朋友。结婚以后的蜜月旅行是次序颠倒的，应该先同旅行一个月，一个月舟车仆仆以后，双方还没有彼此看破，彼此厌恶，还没有吵嘴翻脸，还要维持原来的婚约，这种夫妇保证不会离婚。「p188」\n\n你不讨厌，可是全无用处。「p188」\n\n现代人有两个流行的信仰。第一：女子无貌便是德，所以漂亮女人准比不上丑女人那样有思想，有品节；第二：男子无口才，就表示有道德，所以哑巴是天下最诚朴的人。「p204」\n\n鸿渐研究出西洋人丑得跟中国人不同:中国人丑像造物者偷工减料的结果，潦草塞责的丑;西洋人丑像造物者恶意的表现，所以丑得有计划、有作用。「p207」\n\n事实上，一个人的缺点正像猴子的尾巴，猴子蹲在地面的时候，尾巴是看不见的，直到他像树上爬，就把后部供大家瞻仰，可是这红臀长尾巴本来就有，并非地位爬高了的新标识。「p218」\n\n在这种时候，她(范小姐)才发现这些富有哲理的警句没有什么帮助。活诚然不痛快，死可也不容易; 黑夜似乎够深了，光明依然看不见。「p237」\n\n年龄是个自然历程里不能超越的事实，就像饮食男女，像死亡。有时，这种年辈意识比阶级意识更鲜明。随你政见、学说或趣味如何相同，年辈的老少总替你隐隐分了界限，仿佛磁器上的裂纹，平时一点没有什么，一旦受着震动，这条裂纹先扩大成裂缝。也许自己更老了十几年，会要跟青年人混在一起，借他们的生气来温暖自己的衰朽。「p260」\n\n这种抱行政野心的人最靠不住，捧他上了台，自己未必有多大好处；仿佛洋车夫辛辛苦苦把坐车人拉到了饭店，依然拖着空车子吃西风，别想跟他进去吃「p261」\n\n\n讲师升副教授容易，副教授升教授难上加难。我在华阳大学的时候，他们有这么一比，讲师比通房丫头，教授比夫人，副教授呢，等于如夫人－－”鸿渐听得笑起来－－“这一字之差，不可以道里计。丫头收房做姨太太，是很普通－－至少在以前很普通的事；姨太太要扶正做大太太，那是干犯纲常名教，做不得的。前清不是有副对么？‘为如夫人洗足；赐同进士出身。「p262」\n\n得学位是把论文哄过自己的先生；教书是把讲义哄过自己的学生。鸿渐当年没哄过先生，所以未得学位，现在要哄学生，不免欠缺依傍。教授成为名教授，也有两个阶段：第一是讲义当著作，第二著作当讲义。好比初学的理发匠先把傻子和穷人的头作为联系本领的试验品，所以讲义在讲堂上试用没出乱子，就作为著作出版；出版以后，当然是指定教本。「p263」\n\n高松年自从昨晚的事,神经特别敏锐,鸿渐这口气吐得太早,落在他耳朵里。他嘴没骂 出\"混帐\"来,他脸代替嘴表示了这句骂。「p268」\n\n在吵架的时候，先开口的未必占上风，后闭口才算胜利。「p275」\n\n吃不消的是这些同事的态度。他们仿佛全知道自己解聘，但因为这事并未公开，他们的同情也只好加上封套包裹，遮遮掩掩地奉送。往往平日很疏远的人，忽来拜访。他知道他们来意是探口气，便一字不提，可是精神和说话里包含的惋惜，总像圣诞老人放在袜子里的礼物，送了才肯走。这种同情比笑骂还难受。「p275」\n\n天下只有两种人。譬如一串葡萄到手，一种人挑最好的先吃，另一种人把最好的留在最后吃。照例第一种人应该乐观，因为他每吃一颗都是吃剩的葡萄里最好的;第二种人应该悲观，因为他每吃一颗都是吃剩的葡萄里最坏的。不过事实上适得其反，缘故是第二种人还有希望，第一种只有回忆。 「p276」\n\n一切机关的首长上办公室，本来像隆冬的太阳或者一生里的好运气，来得很迟，取得很早。「p280」\n\n他感激地喜欢，才明白贪官下任，还要地方挽留，献万民伞、立德政碑的心理。离开一个地方就等于死一次，自知免不了一死，总希望人家表示愿意自己活下去。去后的毁誉，正跟死后的哀荣一样关心而无法知道，深怕一走或一死，像洋蜡烛一灭，留下的只是臭味。有人送别，仿佛临死的人有孝子顺孙送终，死也安心闭眼。「p280」\n\n鸿渐暗笑女人真是天生的政治家，她们俩背后彼此诽谤，面子上却这样多情，两个政敌在香槟酒会上碰杯的一套工夫，怕也不过如此。假使不是亲耳朵听见她们的互相刻薄，自己也以为她们真是好朋友了。「p281」\n\n辛楣这一席谈,引起他许多思绪。一个人应该得意,得意的人谈话都有精彩,譬如辛楣。「p287」\n\n我今天出去回来都没坐车,这东西是我省下来的车钱买的。当然我有钱买水果,可是省下钱来买,好像那才算得真正是我给你的。「p292」\n\n鸿渐这两天近乡情怯，心事重重。他觉得回家并不像理想那样的简单。远别虽非等于暂死，至少变得陌生。回家只像半生的东西回锅，要煮一会才会熟。「p303」\n\n\n「p304」\n\n「p310」\n\n「p310」\n\n「p310」\n\n「p310」\n\n「p310」\n\n「p310」\n\n「p310」\n\n「p310」\n\n「p310」\n\n「p310」\n\n「p310」\n\n「p310」\n\n\n\n<br />\n\n#### 更新中 ...\n\n<br />\n\n> 此文内容为读书时把文中的精彩部分整理出来而做的笔记。<br />\n之所以想要做读书笔记，是因为常常高估了自己的记忆力。<br />\n把读书时候碰到美妙的地方都记下来，时常回味一下，让读书产生出更大的价值。\n\n`声明:本资料仅供学习交流，严禁使用于任何商业用途!  如需转载，转载请注明出处。`\n\n\n\n","slug":"weicheng","published":1,"updated":"2022-08-30T04:25:07.588Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl7foviu100070do7tphteri0","content":"<div align=\"center\"><br>    <img src=\"/2018/05/27/weicheng/w1.jpg\"><br></div>\n\n<blockquote>\n<p><strong>人民文学出版社</strong><br>豆瓣评分: <strong><code>8.9</code></strong><br><em>版次</em>:<br><code>第1版 (1980年10月)</code><br><code>第2版 (1991年2月1日)</code><br><em>Pages</em>: 377</p>\n</blockquote>\n<p><br> </p>\n<p>这船，依仗人的机巧，载满人的扰攘，寄满人的希望，热闹地行着，每分钟把沾污人气的一方水面，还给那无情、无尽、无际的大海。「p02」</p>\n<p>那女人平日就有一种孤芳自赏、落落难合的神情－－大宴会上没人敷衍的来宾或喜酒席上过时未嫁的少女所常有的神情－－此刻更流露出嫌恶，黑眼镜也遮盖不了。「p03」</p>\n<p>上帝会懊悔没在人身上添一条能摇的狗尾巴，因此减低了不知多少表情的效果。</p>\n<p>忠厚老实人的恶毒，像饭里的沙砾或者出骨鱼片里未淨的刺，会给人一种不期待的伤痛。「p05」</p>\n<p>一张文凭，仿佛有亚当、夏娃下身那片树叶的功用，可以遮羞包丑；小小一方纸能把一个人的空疏、寡陋、愚笨都掩盖起来。「p10」</p>\n<p>当着心爱的男人，每个女人都有返老还童的绝技。「p24」</p>\n<p>满天的星又密又忙，它们声息全无，而看来只觉得天上热闹。一梳月亮像形容未长成的女孩子，但见人己不羞缩，光明和轮廓都清新露，渐渐可烘衬夜景。小园草地里的小虫琐琐屑屑地在夜谈。不知那里的蛙群齐心协力地干号，像声浪给火煮得发沸。几星萤火优游来去，不像飞行，像在厚密的空气里漂浮；月光不到的阴黑处，一点萤火忽明，像夏夜的一只微绿的小眼睛。「p30」</p>\n<p>拼命追忆，只像把筛子去盛水。一着急，注意力集中不起来，思想的线索要打成结又松散了。隐约还有些事实的影子，但好比在热闹地方等人，瞥眼人堆里像是他，走上去找，又不见了。「p35」</p>\n<p>方鸿渐住家一个星期，感觉出国这四年光阴，对家乡好像荷叶上泻过的水，留不下一点痕迹。回来所碰见的还是四年前那些人，那些人还是做四年前所做的事，说四年前所说的话。「p38」</p>\n<p>方老先生因为拒绝了本县汉奸的引诱，有家难归，而政府并没给他什么名义，觉得他爱国而国不爱他，大有青年守节的孀妇不见宠于翁姑的怨抑。「p39」</p>\n<p>张先生跟外国人来往惯了，说话有个特征——也许在洋行、青年会、扶轮社等圈子里，这并没有什么奇特———喜欢中国话里夹无谓的英文字。他并无中文难达的新意，需要借英文来讲;所以他说话里嵌的英文字，还比不得嘴里嵌的金牙，因为金牙不仅妆点，尚可使用，只好比牙缝里嵌的肉屑，表示饭菜吃得好，此外全无用处。「p41」</p>\n<p>那年春天，气候特别好。这春气鼓动得人心像婴孩出齿时的牙龈肉，受到一种生机透芽的痛痒。「p46」</p>\n<p>有许多都市女孩子已经是装模作样的早熟女人，算不得孩子；有许多女孩子只是浑沌痴顽的无性别孩子，还说不上女人。「p49」</p>\n<p>她跟辛楣的长期认识并不会日积月累地成为恋爱，好比冬季每天的气候罢，你没法把今天的温度加在昨天的上面好把明天积成个和暖的春日。「p54」</p>\n<p>苏小姐不是听众，赵辛楣有本领使不出来。 (苏文纨对赵辛楣是没有情意的)「p55」</p>\n<p>那女孩子不过十六七岁，脸化妆得就像搓油摘粉调胭脂捏出来的假面具。鸿渐想上海不愧是文明先进之区，中学女孩子已经把门面油漆粉刷，招徕男人了。可是这女孩子的脸假得老实，因为决没人相信贴在她脸上的那张脂粉薄饼会是她的本来面目。「p57」</p>\n<p>他这两天有了意中人以后，对自己外表上的缺点，知道得不宽假地详尽，仿佛只有一套出客衣服的穷人知道上面每一个斑渍和补丁。「p64」</p>\n<p>婚姻是一座围城，城外的人想进去，城里的人想出来。</p>\n<p>在大学里，理科学生瞧不起文科学生，外国语文系学生瞧不起中国文学系学生，中国文学系学生瞧不起哲学系学生，哲学系学生瞧不起社会学系学生，社会学系学生瞧不起教育系学生，教育系学生没有谁可以给他们瞧不起了，只能瞧不起本系的先生。 「p76」</p>\n<p>女人有女人特别的聪明，轻盈活泼得跟她的举动一样。比了这种聪明，才学不过是沉淀渣滓。说女人有才学，就仿佛赞美一朵花，说它在天平上称起来有白菜番薯的斤两。真聪明的女人决不用功做成才女，她只巧妙的偷懒.「p79」</p>\n<p>见面有瘾的; 最初，约着见一面就能使见面的前后几天都沾着光，变成好日子。渐渐地恨不能天天见面了；到后来，恨不能刻刻见面了。「p83」</p>\n<p>大家照例称好，斜川客气地淡漠，仿佛领袖受民众欢迎时的表情。「p95」</p>\n<p>苏小姐知道他在看自己，回脸对他微笑，鸿渐要抵抗这魅力的决心，像出水的鱼，头尾在地上拍动，可是挣扎不起。「p99」</p>\n<p>觉得剩余的今夜只像海水浴的跳板，自己站在板的极端，会一跳冲进明天的快乐里，又兴奋，又战栗。「p101」</p>\n<p>有时候“不再坐一会么？“ 可以撵走人；有时候“再会”可以挽留人；唐小姐挽不住方鸿渐，所以加一句“希望你远行一路平安”。「p107」</p>\n<p>过些时，他才像从昏厥里醒过来，开始不住的心痛，就像因蜷曲而麻木的四肢，到伸直了血脉流通，就觉得刺痛。昨天囫囵吞地忍受的整块痛苦，当时没工夫辨别滋味，现在，牛反刍似的，零星断续，细嚼出深深没底的回味。「p110」</p>\n<p>有人失恋了，会把他们的伤心立刻像叫化子的烂腿，血淋淋地公开展览，博人怜悯，或者事过境迁，像战士的金疮旧斑，脱衣指示，使人惊佩。鸿渐只希望能在心理的黑暗里隐蔽着，仿佛害病的眼睛避光，破碎的皮肉怕风。「p111」</p>\n<p>他说的“让她三分”，不是“三分流水七分尘”的“三分”，是“天下只有三分月色”的“三分”。「p112」</p>\n<p>周家一天也呆不住了，只有回到父亲母亲那儿挤几天再说，像在外面挨了打的狗夹着尾巴窜回家。「p115」</p>\n<p>这两天来，人都气笨了，后脑里像棉花裹的鼓槌在打布蒙的鼓，模糊地沉重，一下一下的跳痛，想不出圆满的遮羞方式。「p115」</p>\n<p>可是，心里的痛苦不露在脸上，是桩难事。女人有化妆品的援助，胭脂涂得浓些，粉擦得厚些，红白分明会掩饰了内心的凄黯。</p>\n<p>在西洋家庭里，丈母娘跟女婿的争斗，是至今保存的古风，我们中国家庭里婆婆和媳妇的敌视，也不输于他们那样悠久的历史。只有媳妇怀孕，婆婆要依仗了她才能荣升祖母，于是对她开始迁就，到媳妇养了个真实不假的男孩子，婆婆更加让步。「p119」</p>\n<p>那女明星的娇声尖锐里含着浑浊，一大半像鼻子里哼出来的，又腻又粘,又软懒无力,与鼻子的主产品鼻涕具有同样品性。「p124」</p>\n<p>从前愚民政策是不许人民受教育，现代愚民政策是只许人民受某一种教育。不受教育的人，因为不识字，上人的当，受教育的人，因为识了字，上印刷品的当，像你们的报纸宣传品、训练干部讲义之类。「p130」</p>\n<p>本来苍白的脸色现在红得像生牛肉,两眼里新织满红血丝,肚子肥凸的像青蛙在鼓气，法国人在国际上的绰号是虾蟆，真正名副其实,可惊的是添了一团凶横的兽像。上海这地方比得上希腊神话里的魔女岛,好好一个人来了就会变成畜生。（讲从乡下人初出门的寒窘到租界巡捕的恶劣）「p133」</p>\n<p>狗为着追求水里肉骨头的影子，丧失了到嘴的肉骨头！跟爱人如愿以偿结了婚，恐怕那时肉骨头下肚，倒要对水怅惜这不可再见的影子了。「p138」</p>\n<p>我忽然想，就是我自己结婚行礼，在万目睽睽之下，也免不了像个被破获的扒手。因此我恍然大悟，那种眉花眼笑的美满结婚照相，全不是当时照的。「p139」</p>\n<p>鸿渐只有感佩，想女人这怪东西，要体贴起人来，真是无微不至，汗毛孔的折叠里都给她温存到。「p148」</p>\n<p>真料想不到小车厢会像有弹性，容得下这许多人。车厢仿佛沙丁鱼罐，里面的人紧紧的挤得身子都扁了。可是沙丁鱼的骨头，深藏在自己身体里，这些乘客的肘骨膝骨都向旁人的身体里硬嵌。罐装的沙丁鱼条条挺直，这些乘客都蜷曲波折，腰跟腿弯成几何学上有名目的角度。「p153」</p>\n<p>每逢它不肯走，汽车夫就破口臭骂，此刻骂得更利害了。骂来骂去，只有一个意思：汽车夫愿意跟汽车的母亲和祖母发生肉体恋爱。骂的话虽然欠缺变化，骂的力气愈来愈足。「p154」</p>\n<p>有位子坐的人，不但身体安稳，心理也占优势；他们可以冷眼端详那些没座位的人，而那些站的人只望着窗外，没勇气回看他们。「p156」</p>\n<p>掌柜写账的桌子边坐个胖女人坦白地摊开白而不坦的胸膛，喂孩子吃奶；奶是孩子吃的饭，所以也该在饭堂吃，证明这旅馆是科学管理的。她满腔都是肥腻腻的营养，小孩子吸的想是加糖的溶化猪油。她那样肥硕，表示这店里的饭菜也营养丰富；她靠掌柜坐着，算得不落言诠的好广告。「p156」</p>\n<p>亚当和夏娃为好奇心失去了天堂，顾尔廉也为好奇心失去了李梅亭安放他的天堂，恭维都挽回不来了，跟着的几句话险的使他进地狱。「p161」</p>\n<p>”两人“鸡生蛋”“蛋生鸡”的句法练习没有了期，反正谁嗓子高，谁的话就是真理。「p173」</p>\n<p>那寡妇远远的望着孙小姐，使她想起牛或马的瞪眼向人涓求，因为眼睛就是不会说话的动物的舌头。「p174」</p>\n<p>向吉安去的路上，他们都恨汽车又笨又慢，把他们跃跃欲前的心也拖累了不能自由，同时又怕到了吉安一场空，愿意这车走下去，走下去，永远在开动，永远不到达，替希望留着一线生机。「p177」</p>\n<p>鸿渐饿得睡不熟，身子像没有放文件的公文包，几乎腹背相贴，才领略出法国人所谓“长得像没有面包吃的日子”还不够亲切，长得像没有面包吃的日子，长得像失眠的夜，都比不上因没有面包吃而失眠的夜那样漫漫难度。 「p179」</p>\n<p>烤山薯这东西，本来像中国谚语里的私情男女，“偷着不如偷不着，”香味比滋味好；你闻的时候，觉得非吃不可，真到嘴，也不过尔尔。 「p179」</p>\n<p>那女同志跟她的男朋友宛如诗人“尽日觅不得,有时还自来”的妙句,忽然光顾,五个人欢喜得像遇见久别的情人,亲热得像狗迎接回家的主人。「p181」</p>\n<p>旅馆与银行间这条路径,他们的鞋子也走熟得不必有脚而能自身来回了。「p182」</p>\n<p>孙小姐满以为“贵人”指的自己，早低着头，一阵红的消息在脸上透漏，后来听见这话全不相干，这红像暖天向玻璃上呵的气，没成晕就散了。「p182」</p>\n<p>对于丑人，细看是一种残忍——除非他是坏人，你要惩罚他。「p183」</p>\n<p>两人参考生平关于女人的全部学问,来解释她为什么哭。结果英雄所见略同,说她的哭大半由于心理的痛苦;女孩子千里辞家,半途生病,举目无亲,自然要哭。「p185」</p>\n<p>像咱们这种旅行，最试验得出一个人的品性。旅行是最劳顿，最麻烦，叫人本相毕现的时候。经过长期苦旅行而彼此不讨厌的人，才可以结交作朋友。结婚以后的蜜月旅行是次序颠倒的，应该先同旅行一个月，一个月舟车仆仆以后，双方还没有彼此看破，彼此厌恶，还没有吵嘴翻脸，还要维持原来的婚约，这种夫妇保证不会离婚。「p188」</p>\n<p>你不讨厌，可是全无用处。「p188」</p>\n<p>现代人有两个流行的信仰。第一：女子无貌便是德，所以漂亮女人准比不上丑女人那样有思想，有品节；第二：男子无口才，就表示有道德，所以哑巴是天下最诚朴的人。「p204」</p>\n<p>鸿渐研究出西洋人丑得跟中国人不同:中国人丑像造物者偷工减料的结果，潦草塞责的丑;西洋人丑像造物者恶意的表现，所以丑得有计划、有作用。「p207」</p>\n<p>事实上，一个人的缺点正像猴子的尾巴，猴子蹲在地面的时候，尾巴是看不见的，直到他像树上爬，就把后部供大家瞻仰，可是这红臀长尾巴本来就有，并非地位爬高了的新标识。「p218」</p>\n<p>在这种时候，她(范小姐)才发现这些富有哲理的警句没有什么帮助。活诚然不痛快，死可也不容易; 黑夜似乎够深了，光明依然看不见。「p237」</p>\n<p>年龄是个自然历程里不能超越的事实，就像饮食男女，像死亡。有时，这种年辈意识比阶级意识更鲜明。随你政见、学说或趣味如何相同，年辈的老少总替你隐隐分了界限，仿佛磁器上的裂纹，平时一点没有什么，一旦受着震动，这条裂纹先扩大成裂缝。也许自己更老了十几年，会要跟青年人混在一起，借他们的生气来温暖自己的衰朽。「p260」</p>\n<p>这种抱行政野心的人最靠不住，捧他上了台，自己未必有多大好处；仿佛洋车夫辛辛苦苦把坐车人拉到了饭店，依然拖着空车子吃西风，别想跟他进去吃「p261」</p>\n<p>讲师升副教授容易，副教授升教授难上加难。我在华阳大学的时候，他们有这么一比，讲师比通房丫头，教授比夫人，副教授呢，等于如夫人－－”鸿渐听得笑起来－－“这一字之差，不可以道里计。丫头收房做姨太太，是很普通－－至少在以前很普通的事；姨太太要扶正做大太太，那是干犯纲常名教，做不得的。前清不是有副对么？‘为如夫人洗足；赐同进士出身。「p262」</p>\n<p>得学位是把论文哄过自己的先生；教书是把讲义哄过自己的学生。鸿渐当年没哄过先生，所以未得学位，现在要哄学生，不免欠缺依傍。教授成为名教授，也有两个阶段：第一是讲义当著作，第二著作当讲义。好比初学的理发匠先把傻子和穷人的头作为联系本领的试验品，所以讲义在讲堂上试用没出乱子，就作为著作出版；出版以后，当然是指定教本。「p263」</p>\n<p>高松年自从昨晚的事,神经特别敏锐,鸿渐这口气吐得太早,落在他耳朵里。他嘴没骂 出”混帐”来,他脸代替嘴表示了这句骂。「p268」</p>\n<p>在吵架的时候，先开口的未必占上风，后闭口才算胜利。「p275」</p>\n<p>吃不消的是这些同事的态度。他们仿佛全知道自己解聘，但因为这事并未公开，他们的同情也只好加上封套包裹，遮遮掩掩地奉送。往往平日很疏远的人，忽来拜访。他知道他们来意是探口气，便一字不提，可是精神和说话里包含的惋惜，总像圣诞老人放在袜子里的礼物，送了才肯走。这种同情比笑骂还难受。「p275」</p>\n<p>天下只有两种人。譬如一串葡萄到手，一种人挑最好的先吃，另一种人把最好的留在最后吃。照例第一种人应该乐观，因为他每吃一颗都是吃剩的葡萄里最好的;第二种人应该悲观，因为他每吃一颗都是吃剩的葡萄里最坏的。不过事实上适得其反，缘故是第二种人还有希望，第一种只有回忆。 「p276」</p>\n<p>一切机关的首长上办公室，本来像隆冬的太阳或者一生里的好运气，来得很迟，取得很早。「p280」</p>\n<p>他感激地喜欢，才明白贪官下任，还要地方挽留，献万民伞、立德政碑的心理。离开一个地方就等于死一次，自知免不了一死，总希望人家表示愿意自己活下去。去后的毁誉，正跟死后的哀荣一样关心而无法知道，深怕一走或一死，像洋蜡烛一灭，留下的只是臭味。有人送别，仿佛临死的人有孝子顺孙送终，死也安心闭眼。「p280」</p>\n<p>鸿渐暗笑女人真是天生的政治家，她们俩背后彼此诽谤，面子上却这样多情，两个政敌在香槟酒会上碰杯的一套工夫，怕也不过如此。假使不是亲耳朵听见她们的互相刻薄，自己也以为她们真是好朋友了。「p281」</p>\n<p>辛楣这一席谈,引起他许多思绪。一个人应该得意,得意的人谈话都有精彩,譬如辛楣。「p287」</p>\n<p>我今天出去回来都没坐车,这东西是我省下来的车钱买的。当然我有钱买水果,可是省下钱来买,好像那才算得真正是我给你的。「p292」</p>\n<p>鸿渐这两天近乡情怯，心事重重。他觉得回家并不像理想那样的简单。远别虽非等于暂死，至少变得陌生。回家只像半生的东西回锅，要煮一会才会熟。「p303」</p>\n<p>「p304」</p>\n<p>「p310」</p>\n<p>「p310」</p>\n<p>「p310」</p>\n<p>「p310」</p>\n<p>「p310」</p>\n<p>「p310」</p>\n<p>「p310」</p>\n<p>「p310」</p>\n<p>「p310」</p>\n<p>「p310」</p>\n<p>「p310」</p>\n<p>「p310」</p>\n<p><br></p>\n<h4 id=\"更新中-…\"><a href=\"#更新中-…\" class=\"headerlink\" title=\"更新中 …\"></a>更新中 …</h4><p><br></p>\n<blockquote>\n<p>此文内容为读书时把文中的精彩部分整理出来而做的笔记。<br><br>之所以想要做读书笔记，是因为常常高估了自己的记忆力。<br><br>把读书时候碰到美妙的地方都记下来，时常回味一下，让读书产生出更大的价值。</p>\n</blockquote>\n<p><code>声明:本资料仅供学习交流，严禁使用于任何商业用途!  如需转载，转载请注明出处。</code></p>\n","site":{"data":{}},"excerpt":"","more":"<div align=\"center\"><br>    <img src=\"/2018/05/27/weicheng/w1.jpg\"><br></div>\n\n<blockquote>\n<p><strong>人民文学出版社</strong><br>豆瓣评分: <strong><code>8.9</code></strong><br><em>版次</em>:<br><code>第1版 (1980年10月)</code><br><code>第2版 (1991年2月1日)</code><br><em>Pages</em>: 377</p>\n</blockquote>\n<p><br> </p>\n<p>这船，依仗人的机巧，载满人的扰攘，寄满人的希望，热闹地行着，每分钟把沾污人气的一方水面，还给那无情、无尽、无际的大海。「p02」</p>\n<p>那女人平日就有一种孤芳自赏、落落难合的神情－－大宴会上没人敷衍的来宾或喜酒席上过时未嫁的少女所常有的神情－－此刻更流露出嫌恶，黑眼镜也遮盖不了。「p03」</p>\n<p>上帝会懊悔没在人身上添一条能摇的狗尾巴，因此减低了不知多少表情的效果。</p>\n<p>忠厚老实人的恶毒，像饭里的沙砾或者出骨鱼片里未淨的刺，会给人一种不期待的伤痛。「p05」</p>\n<p>一张文凭，仿佛有亚当、夏娃下身那片树叶的功用，可以遮羞包丑；小小一方纸能把一个人的空疏、寡陋、愚笨都掩盖起来。「p10」</p>\n<p>当着心爱的男人，每个女人都有返老还童的绝技。「p24」</p>\n<p>满天的星又密又忙，它们声息全无，而看来只觉得天上热闹。一梳月亮像形容未长成的女孩子，但见人己不羞缩，光明和轮廓都清新露，渐渐可烘衬夜景。小园草地里的小虫琐琐屑屑地在夜谈。不知那里的蛙群齐心协力地干号，像声浪给火煮得发沸。几星萤火优游来去，不像飞行，像在厚密的空气里漂浮；月光不到的阴黑处，一点萤火忽明，像夏夜的一只微绿的小眼睛。「p30」</p>\n<p>拼命追忆，只像把筛子去盛水。一着急，注意力集中不起来，思想的线索要打成结又松散了。隐约还有些事实的影子，但好比在热闹地方等人，瞥眼人堆里像是他，走上去找，又不见了。「p35」</p>\n<p>方鸿渐住家一个星期，感觉出国这四年光阴，对家乡好像荷叶上泻过的水，留不下一点痕迹。回来所碰见的还是四年前那些人，那些人还是做四年前所做的事，说四年前所说的话。「p38」</p>\n<p>方老先生因为拒绝了本县汉奸的引诱，有家难归，而政府并没给他什么名义，觉得他爱国而国不爱他，大有青年守节的孀妇不见宠于翁姑的怨抑。「p39」</p>\n<p>张先生跟外国人来往惯了，说话有个特征——也许在洋行、青年会、扶轮社等圈子里，这并没有什么奇特———喜欢中国话里夹无谓的英文字。他并无中文难达的新意，需要借英文来讲;所以他说话里嵌的英文字，还比不得嘴里嵌的金牙，因为金牙不仅妆点，尚可使用，只好比牙缝里嵌的肉屑，表示饭菜吃得好，此外全无用处。「p41」</p>\n<p>那年春天，气候特别好。这春气鼓动得人心像婴孩出齿时的牙龈肉，受到一种生机透芽的痛痒。「p46」</p>\n<p>有许多都市女孩子已经是装模作样的早熟女人，算不得孩子；有许多女孩子只是浑沌痴顽的无性别孩子，还说不上女人。「p49」</p>\n<p>她跟辛楣的长期认识并不会日积月累地成为恋爱，好比冬季每天的气候罢，你没法把今天的温度加在昨天的上面好把明天积成个和暖的春日。「p54」</p>\n<p>苏小姐不是听众，赵辛楣有本领使不出来。 (苏文纨对赵辛楣是没有情意的)「p55」</p>\n<p>那女孩子不过十六七岁，脸化妆得就像搓油摘粉调胭脂捏出来的假面具。鸿渐想上海不愧是文明先进之区，中学女孩子已经把门面油漆粉刷，招徕男人了。可是这女孩子的脸假得老实，因为决没人相信贴在她脸上的那张脂粉薄饼会是她的本来面目。「p57」</p>\n<p>他这两天有了意中人以后，对自己外表上的缺点，知道得不宽假地详尽，仿佛只有一套出客衣服的穷人知道上面每一个斑渍和补丁。「p64」</p>\n<p>婚姻是一座围城，城外的人想进去，城里的人想出来。</p>\n<p>在大学里，理科学生瞧不起文科学生，外国语文系学生瞧不起中国文学系学生，中国文学系学生瞧不起哲学系学生，哲学系学生瞧不起社会学系学生，社会学系学生瞧不起教育系学生，教育系学生没有谁可以给他们瞧不起了，只能瞧不起本系的先生。 「p76」</p>\n<p>女人有女人特别的聪明，轻盈活泼得跟她的举动一样。比了这种聪明，才学不过是沉淀渣滓。说女人有才学，就仿佛赞美一朵花，说它在天平上称起来有白菜番薯的斤两。真聪明的女人决不用功做成才女，她只巧妙的偷懒.「p79」</p>\n<p>见面有瘾的; 最初，约着见一面就能使见面的前后几天都沾着光，变成好日子。渐渐地恨不能天天见面了；到后来，恨不能刻刻见面了。「p83」</p>\n<p>大家照例称好，斜川客气地淡漠，仿佛领袖受民众欢迎时的表情。「p95」</p>\n<p>苏小姐知道他在看自己，回脸对他微笑，鸿渐要抵抗这魅力的决心，像出水的鱼，头尾在地上拍动，可是挣扎不起。「p99」</p>\n<p>觉得剩余的今夜只像海水浴的跳板，自己站在板的极端，会一跳冲进明天的快乐里，又兴奋，又战栗。「p101」</p>\n<p>有时候“不再坐一会么？“ 可以撵走人；有时候“再会”可以挽留人；唐小姐挽不住方鸿渐，所以加一句“希望你远行一路平安”。「p107」</p>\n<p>过些时，他才像从昏厥里醒过来，开始不住的心痛，就像因蜷曲而麻木的四肢，到伸直了血脉流通，就觉得刺痛。昨天囫囵吞地忍受的整块痛苦，当时没工夫辨别滋味，现在，牛反刍似的，零星断续，细嚼出深深没底的回味。「p110」</p>\n<p>有人失恋了，会把他们的伤心立刻像叫化子的烂腿，血淋淋地公开展览，博人怜悯，或者事过境迁，像战士的金疮旧斑，脱衣指示，使人惊佩。鸿渐只希望能在心理的黑暗里隐蔽着，仿佛害病的眼睛避光，破碎的皮肉怕风。「p111」</p>\n<p>他说的“让她三分”，不是“三分流水七分尘”的“三分”，是“天下只有三分月色”的“三分”。「p112」</p>\n<p>周家一天也呆不住了，只有回到父亲母亲那儿挤几天再说，像在外面挨了打的狗夹着尾巴窜回家。「p115」</p>\n<p>这两天来，人都气笨了，后脑里像棉花裹的鼓槌在打布蒙的鼓，模糊地沉重，一下一下的跳痛，想不出圆满的遮羞方式。「p115」</p>\n<p>可是，心里的痛苦不露在脸上，是桩难事。女人有化妆品的援助，胭脂涂得浓些，粉擦得厚些，红白分明会掩饰了内心的凄黯。</p>\n<p>在西洋家庭里，丈母娘跟女婿的争斗，是至今保存的古风，我们中国家庭里婆婆和媳妇的敌视，也不输于他们那样悠久的历史。只有媳妇怀孕，婆婆要依仗了她才能荣升祖母，于是对她开始迁就，到媳妇养了个真实不假的男孩子，婆婆更加让步。「p119」</p>\n<p>那女明星的娇声尖锐里含着浑浊，一大半像鼻子里哼出来的，又腻又粘,又软懒无力,与鼻子的主产品鼻涕具有同样品性。「p124」</p>\n<p>从前愚民政策是不许人民受教育，现代愚民政策是只许人民受某一种教育。不受教育的人，因为不识字，上人的当，受教育的人，因为识了字，上印刷品的当，像你们的报纸宣传品、训练干部讲义之类。「p130」</p>\n<p>本来苍白的脸色现在红得像生牛肉,两眼里新织满红血丝,肚子肥凸的像青蛙在鼓气，法国人在国际上的绰号是虾蟆，真正名副其实,可惊的是添了一团凶横的兽像。上海这地方比得上希腊神话里的魔女岛,好好一个人来了就会变成畜生。（讲从乡下人初出门的寒窘到租界巡捕的恶劣）「p133」</p>\n<p>狗为着追求水里肉骨头的影子，丧失了到嘴的肉骨头！跟爱人如愿以偿结了婚，恐怕那时肉骨头下肚，倒要对水怅惜这不可再见的影子了。「p138」</p>\n<p>我忽然想，就是我自己结婚行礼，在万目睽睽之下，也免不了像个被破获的扒手。因此我恍然大悟，那种眉花眼笑的美满结婚照相，全不是当时照的。「p139」</p>\n<p>鸿渐只有感佩，想女人这怪东西，要体贴起人来，真是无微不至，汗毛孔的折叠里都给她温存到。「p148」</p>\n<p>真料想不到小车厢会像有弹性，容得下这许多人。车厢仿佛沙丁鱼罐，里面的人紧紧的挤得身子都扁了。可是沙丁鱼的骨头，深藏在自己身体里，这些乘客的肘骨膝骨都向旁人的身体里硬嵌。罐装的沙丁鱼条条挺直，这些乘客都蜷曲波折，腰跟腿弯成几何学上有名目的角度。「p153」</p>\n<p>每逢它不肯走，汽车夫就破口臭骂，此刻骂得更利害了。骂来骂去，只有一个意思：汽车夫愿意跟汽车的母亲和祖母发生肉体恋爱。骂的话虽然欠缺变化，骂的力气愈来愈足。「p154」</p>\n<p>有位子坐的人，不但身体安稳，心理也占优势；他们可以冷眼端详那些没座位的人，而那些站的人只望着窗外，没勇气回看他们。「p156」</p>\n<p>掌柜写账的桌子边坐个胖女人坦白地摊开白而不坦的胸膛，喂孩子吃奶；奶是孩子吃的饭，所以也该在饭堂吃，证明这旅馆是科学管理的。她满腔都是肥腻腻的营养，小孩子吸的想是加糖的溶化猪油。她那样肥硕，表示这店里的饭菜也营养丰富；她靠掌柜坐着，算得不落言诠的好广告。「p156」</p>\n<p>亚当和夏娃为好奇心失去了天堂，顾尔廉也为好奇心失去了李梅亭安放他的天堂，恭维都挽回不来了，跟着的几句话险的使他进地狱。「p161」</p>\n<p>”两人“鸡生蛋”“蛋生鸡”的句法练习没有了期，反正谁嗓子高，谁的话就是真理。「p173」</p>\n<p>那寡妇远远的望着孙小姐，使她想起牛或马的瞪眼向人涓求，因为眼睛就是不会说话的动物的舌头。「p174」</p>\n<p>向吉安去的路上，他们都恨汽车又笨又慢，把他们跃跃欲前的心也拖累了不能自由，同时又怕到了吉安一场空，愿意这车走下去，走下去，永远在开动，永远不到达，替希望留着一线生机。「p177」</p>\n<p>鸿渐饿得睡不熟，身子像没有放文件的公文包，几乎腹背相贴，才领略出法国人所谓“长得像没有面包吃的日子”还不够亲切，长得像没有面包吃的日子，长得像失眠的夜，都比不上因没有面包吃而失眠的夜那样漫漫难度。 「p179」</p>\n<p>烤山薯这东西，本来像中国谚语里的私情男女，“偷着不如偷不着，”香味比滋味好；你闻的时候，觉得非吃不可，真到嘴，也不过尔尔。 「p179」</p>\n<p>那女同志跟她的男朋友宛如诗人“尽日觅不得,有时还自来”的妙句,忽然光顾,五个人欢喜得像遇见久别的情人,亲热得像狗迎接回家的主人。「p181」</p>\n<p>旅馆与银行间这条路径,他们的鞋子也走熟得不必有脚而能自身来回了。「p182」</p>\n<p>孙小姐满以为“贵人”指的自己，早低着头，一阵红的消息在脸上透漏，后来听见这话全不相干，这红像暖天向玻璃上呵的气，没成晕就散了。「p182」</p>\n<p>对于丑人，细看是一种残忍——除非他是坏人，你要惩罚他。「p183」</p>\n<p>两人参考生平关于女人的全部学问,来解释她为什么哭。结果英雄所见略同,说她的哭大半由于心理的痛苦;女孩子千里辞家,半途生病,举目无亲,自然要哭。「p185」</p>\n<p>像咱们这种旅行，最试验得出一个人的品性。旅行是最劳顿，最麻烦，叫人本相毕现的时候。经过长期苦旅行而彼此不讨厌的人，才可以结交作朋友。结婚以后的蜜月旅行是次序颠倒的，应该先同旅行一个月，一个月舟车仆仆以后，双方还没有彼此看破，彼此厌恶，还没有吵嘴翻脸，还要维持原来的婚约，这种夫妇保证不会离婚。「p188」</p>\n<p>你不讨厌，可是全无用处。「p188」</p>\n<p>现代人有两个流行的信仰。第一：女子无貌便是德，所以漂亮女人准比不上丑女人那样有思想，有品节；第二：男子无口才，就表示有道德，所以哑巴是天下最诚朴的人。「p204」</p>\n<p>鸿渐研究出西洋人丑得跟中国人不同:中国人丑像造物者偷工减料的结果，潦草塞责的丑;西洋人丑像造物者恶意的表现，所以丑得有计划、有作用。「p207」</p>\n<p>事实上，一个人的缺点正像猴子的尾巴，猴子蹲在地面的时候，尾巴是看不见的，直到他像树上爬，就把后部供大家瞻仰，可是这红臀长尾巴本来就有，并非地位爬高了的新标识。「p218」</p>\n<p>在这种时候，她(范小姐)才发现这些富有哲理的警句没有什么帮助。活诚然不痛快，死可也不容易; 黑夜似乎够深了，光明依然看不见。「p237」</p>\n<p>年龄是个自然历程里不能超越的事实，就像饮食男女，像死亡。有时，这种年辈意识比阶级意识更鲜明。随你政见、学说或趣味如何相同，年辈的老少总替你隐隐分了界限，仿佛磁器上的裂纹，平时一点没有什么，一旦受着震动，这条裂纹先扩大成裂缝。也许自己更老了十几年，会要跟青年人混在一起，借他们的生气来温暖自己的衰朽。「p260」</p>\n<p>这种抱行政野心的人最靠不住，捧他上了台，自己未必有多大好处；仿佛洋车夫辛辛苦苦把坐车人拉到了饭店，依然拖着空车子吃西风，别想跟他进去吃「p261」</p>\n<p>讲师升副教授容易，副教授升教授难上加难。我在华阳大学的时候，他们有这么一比，讲师比通房丫头，教授比夫人，副教授呢，等于如夫人－－”鸿渐听得笑起来－－“这一字之差，不可以道里计。丫头收房做姨太太，是很普通－－至少在以前很普通的事；姨太太要扶正做大太太，那是干犯纲常名教，做不得的。前清不是有副对么？‘为如夫人洗足；赐同进士出身。「p262」</p>\n<p>得学位是把论文哄过自己的先生；教书是把讲义哄过自己的学生。鸿渐当年没哄过先生，所以未得学位，现在要哄学生，不免欠缺依傍。教授成为名教授，也有两个阶段：第一是讲义当著作，第二著作当讲义。好比初学的理发匠先把傻子和穷人的头作为联系本领的试验品，所以讲义在讲堂上试用没出乱子，就作为著作出版；出版以后，当然是指定教本。「p263」</p>\n<p>高松年自从昨晚的事,神经特别敏锐,鸿渐这口气吐得太早,落在他耳朵里。他嘴没骂 出”混帐”来,他脸代替嘴表示了这句骂。「p268」</p>\n<p>在吵架的时候，先开口的未必占上风，后闭口才算胜利。「p275」</p>\n<p>吃不消的是这些同事的态度。他们仿佛全知道自己解聘，但因为这事并未公开，他们的同情也只好加上封套包裹，遮遮掩掩地奉送。往往平日很疏远的人，忽来拜访。他知道他们来意是探口气，便一字不提，可是精神和说话里包含的惋惜，总像圣诞老人放在袜子里的礼物，送了才肯走。这种同情比笑骂还难受。「p275」</p>\n<p>天下只有两种人。譬如一串葡萄到手，一种人挑最好的先吃，另一种人把最好的留在最后吃。照例第一种人应该乐观，因为他每吃一颗都是吃剩的葡萄里最好的;第二种人应该悲观，因为他每吃一颗都是吃剩的葡萄里最坏的。不过事实上适得其反，缘故是第二种人还有希望，第一种只有回忆。 「p276」</p>\n<p>一切机关的首长上办公室，本来像隆冬的太阳或者一生里的好运气，来得很迟，取得很早。「p280」</p>\n<p>他感激地喜欢，才明白贪官下任，还要地方挽留，献万民伞、立德政碑的心理。离开一个地方就等于死一次，自知免不了一死，总希望人家表示愿意自己活下去。去后的毁誉，正跟死后的哀荣一样关心而无法知道，深怕一走或一死，像洋蜡烛一灭，留下的只是臭味。有人送别，仿佛临死的人有孝子顺孙送终，死也安心闭眼。「p280」</p>\n<p>鸿渐暗笑女人真是天生的政治家，她们俩背后彼此诽谤，面子上却这样多情，两个政敌在香槟酒会上碰杯的一套工夫，怕也不过如此。假使不是亲耳朵听见她们的互相刻薄，自己也以为她们真是好朋友了。「p281」</p>\n<p>辛楣这一席谈,引起他许多思绪。一个人应该得意,得意的人谈话都有精彩,譬如辛楣。「p287」</p>\n<p>我今天出去回来都没坐车,这东西是我省下来的车钱买的。当然我有钱买水果,可是省下钱来买,好像那才算得真正是我给你的。「p292」</p>\n<p>鸿渐这两天近乡情怯，心事重重。他觉得回家并不像理想那样的简单。远别虽非等于暂死，至少变得陌生。回家只像半生的东西回锅，要煮一会才会熟。「p303」</p>\n<p>「p304」</p>\n<p>「p310」</p>\n<p>「p310」</p>\n<p>「p310」</p>\n<p>「p310」</p>\n<p>「p310」</p>\n<p>「p310」</p>\n<p>「p310」</p>\n<p>「p310」</p>\n<p>「p310」</p>\n<p>「p310」</p>\n<p>「p310」</p>\n<p>「p310」</p>\n<p><br></p>\n<h4 id=\"更新中-…\"><a href=\"#更新中-…\" class=\"headerlink\" title=\"更新中 …\"></a>更新中 …</h4><p><br></p>\n<blockquote>\n<p>此文内容为读书时把文中的精彩部分整理出来而做的笔记。<br><br>之所以想要做读书笔记，是因为常常高估了自己的记忆力。<br><br>把读书时候碰到美妙的地方都记下来，时常回味一下，让读书产生出更大的价值。</p>\n</blockquote>\n<p><code>声明:本资料仅供学习交流，严禁使用于任何商业用途!  如需转载，转载请注明出处。</code></p>\n"}],"PostAsset":[{"_id":"source/_posts/css3-grid/c02.jpg","slug":"c02.jpg","post":"cl7fovitr00020do7hrzyeyfx","modified":0,"renderable":0},{"_id":"source/_posts/qianguize/q1.jpg","slug":"q1.jpg","post":"cl7fovitv00050do7e4s34lxi","modified":0,"renderable":0},{"_id":"source/_posts/weicheng/w1.jpg","slug":"w1.jpg","post":"cl7foviu100070do7tphteri0","modified":0,"renderable":0},{"_id":"source/_posts/css3-flex/c01.png","slug":"c01.png","post":"cl7fovitm00010do7vrnmdh3h","modified":0,"renderable":0},{"_id":"source/_posts/css3-flex/c02.jpg","slug":"c02.jpg","post":"cl7fovitm00010do7vrnmdh3h","modified":0,"renderable":0},{"_id":"source/_posts/css3-flex/c03.png","slug":"c03.png","post":"cl7fovitm00010do7vrnmdh3h","modified":0,"renderable":0},{"_id":"source/_posts/css3-flex/c04.png","slug":"c04.png","post":"cl7fovitm00010do7vrnmdh3h","modified":0,"renderable":0},{"_id":"source/_posts/css3-flex/c05.jpg","slug":"c05.jpg","post":"cl7fovitm00010do7vrnmdh3h","modified":0,"renderable":0},{"_id":"source/_posts/css3-flex/c06.jpg","slug":"c06.jpg","post":"cl7fovitm00010do7vrnmdh3h","modified":0,"renderable":0},{"_id":"source/_posts/css3-flex/c07.png","slug":"c07.png","post":"cl7fovitm00010do7vrnmdh3h","modified":0,"renderable":0},{"_id":"source/_posts/css3-flex/c08.png","slug":"c08.png","post":"cl7fovitm00010do7vrnmdh3h","modified":0,"renderable":0},{"_id":"source/_posts/css3-flex/c09.png","slug":"c09.png","post":"cl7fovitm00010do7vrnmdh3h","modified":0,"renderable":0},{"_id":"source/_posts/css3-flex/c101.jpg","slug":"c101.jpg","post":"cl7fovitm00010do7vrnmdh3h","modified":0,"renderable":0},{"_id":"source/_posts/css3-flex/css09.png","slug":"css09.png","post":"cl7fovitm00010do7vrnmdh3h","modified":0,"renderable":0},{"_id":"source/_posts/css3-flex/css10.png","slug":"css10.png","post":"cl7fovitm00010do7vrnmdh3h","modified":0,"renderable":0},{"_id":"source/_posts/css3-flex/css12.png","slug":"css12.png","post":"cl7fovitm00010do7vrnmdh3h","modified":0,"renderable":0},{"_id":"source/_posts/css3-flex/css34.png","slug":"css34.png","post":"cl7fovitm00010do7vrnmdh3h","modified":0,"renderable":0},{"_id":"source/_posts/css3-flex/css37.png","slug":"css37.png","post":"cl7fovitm00010do7vrnmdh3h","modified":0,"renderable":0},{"_id":"source/_posts/css3-flex/css46.png","slug":"css46.png","post":"cl7fovitm00010do7vrnmdh3h","modified":0,"renderable":0},{"_id":"source/_posts/css3-flex/jr.jpg","slug":"jr.jpg","post":"cl7fovitm00010do7vrnmdh3h","modified":0,"renderable":0},{"_id":"source/_posts/css3-grid/c01.jpg","slug":"c01.jpg","post":"cl7fovitr00020do7hrzyeyfx","modified":0,"renderable":0},{"_id":"source/_posts/css3-grid/c03.png","slug":"c03.png","post":"cl7fovitr00020do7hrzyeyfx","modified":0,"renderable":0},{"_id":"source/_posts/css3-grid/c04.png","slug":"c04.png","post":"cl7fovitr00020do7hrzyeyfx","modified":0,"renderable":0},{"_id":"source/_posts/css3-grid/c05.png","slug":"c05.png","post":"cl7fovitr00020do7hrzyeyfx","modified":0,"renderable":0},{"_id":"source/_posts/css3-grid/c06.png","slug":"c06.png","post":"cl7fovitr00020do7hrzyeyfx","modified":0,"renderable":0},{"_id":"source/_posts/css3-grid/c07.jpg","slug":"c07.jpg","post":"cl7fovitr00020do7hrzyeyfx","modified":0,"renderable":0},{"_id":"source/_posts/css3-grid/c08.png","slug":"c08.png","post":"cl7fovitr00020do7hrzyeyfx","modified":0,"renderable":0},{"_id":"source/_posts/css3-grid/c09.jpg","slug":"c09.jpg","post":"cl7fovitr00020do7hrzyeyfx","modified":0,"renderable":0},{"_id":"source/_posts/css3-grid/c10.jpg","slug":"c10.jpg","post":"cl7fovitr00020do7hrzyeyfx","modified":0,"renderable":0},{"_id":"source/_posts/css3-grid/c11.jpg","slug":"c11.jpg","post":"cl7fovitr00020do7hrzyeyfx","modified":0,"renderable":0},{"_id":"source/_posts/css3-grid/c12.jpg","slug":"c12.jpg","post":"cl7fovitr00020do7hrzyeyfx","modified":0,"renderable":0},{"_id":"source/_posts/css3-grid/c13.png","slug":"c13.png","post":"cl7fovitr00020do7hrzyeyfx","modified":0,"renderable":0},{"_id":"source/_posts/css3-grid/c14.png","slug":"c14.png","post":"cl7fovitr00020do7hrzyeyfx","modified":0,"renderable":0},{"_id":"source/_posts/css3-grid/c15.png","slug":"c15.png","post":"cl7fovitr00020do7hrzyeyfx","modified":0,"renderable":0},{"_id":"source/_posts/css3-grid/c16.png","slug":"c16.png","post":"cl7fovitr00020do7hrzyeyfx","modified":0,"renderable":0},{"_id":"source/_posts/css3-grid/c17.png","slug":"c17.png","post":"cl7fovitr00020do7hrzyeyfx","modified":0,"renderable":0},{"_id":"source/_posts/css3-grid/c18.png","slug":"c18.png","post":"cl7fovitr00020do7hrzyeyfx","modified":0,"renderable":0},{"_id":"source/_posts/css3-grid/c19.png","slug":"c19.png","post":"cl7fovitr00020do7hrzyeyfx","modified":0,"renderable":0},{"_id":"source/_posts/css3-grid/c20.png","slug":"c20.png","post":"cl7fovitr00020do7hrzyeyfx","modified":0,"renderable":0},{"_id":"source/_posts/css3-grid/c21.png","slug":"c21.png","post":"cl7fovitr00020do7hrzyeyfx","modified":0,"renderable":0},{"_id":"source/_posts/css3-grid/c22.png","slug":"c22.png","post":"cl7fovitr00020do7hrzyeyfx","modified":0,"renderable":0},{"_id":"source/_posts/css3-grid/c23.jpg","slug":"c23.jpg","post":"cl7fovitr00020do7hrzyeyfx","modified":0,"renderable":0},{"_id":"source/_posts/css3-grid/c24.jpg","slug":"c24.jpg","post":"cl7fovitr00020do7hrzyeyfx","modified":0,"renderable":0},{"_id":"source/_posts/css3-grid/c25.jpg","slug":"c25.jpg","post":"cl7fovitr00020do7hrzyeyfx","modified":0,"renderable":0},{"_id":"source/_posts/css3-grid/c26.jpg","slug":"c26.jpg","post":"cl7fovitr00020do7hrzyeyfx","modified":0,"renderable":0},{"_id":"source/_posts/css3-grid/c27.png","slug":"c27.png","post":"cl7fovitr00020do7hrzyeyfx","modified":0,"renderable":0},{"_id":"source/_posts/css3-grid/c28.png","slug":"c28.png","post":"cl7fovitr00020do7hrzyeyfx","modified":0,"renderable":0},{"_id":"source/_posts/css3-grid/c29.png","slug":"c29.png","post":"cl7fovitr00020do7hrzyeyfx","modified":0,"renderable":0},{"_id":"source/_posts/css3-grid/c30.jpg","slug":"c30.jpg","post":"cl7fovitr00020do7hrzyeyfx","modified":0,"renderable":0},{"_id":"source/_posts/css3-grid/c31.jpg","slug":"c31.jpg","post":"cl7fovitr00020do7hrzyeyfx","modified":0,"renderable":0},{"_id":"source/_posts/css3-grid/c32.jpg","slug":"c32.jpg","post":"cl7fovitr00020do7hrzyeyfx","modified":0,"renderable":0},{"_id":"source/_posts/css3-grid/c33.jpg","slug":"c33.jpg","post":"cl7fovitr00020do7hrzyeyfx","modified":0,"renderable":0},{"_id":"source/_posts/css3-grid/c34.png","slug":"c34.png","post":"cl7fovitr00020do7hrzyeyfx","modified":0,"renderable":0},{"_id":"source/_posts/css3-grid/x01.gif","slug":"x01.gif","post":"cl7fovitr00020do7hrzyeyfx","modified":0,"renderable":0}],"PostCategory":[{"post_id":"cl7fovity00060do75yayeh4u","category_id":"cl7fovitt00030do74rdchl4g","_id":"cl7foviu7000b0do7jnaqs7xn"},{"post_id":"cl7fovitm00010do7vrnmdh3h","category_id":"cl7fovitt00030do74rdchl4g","_id":"cl7foviu9000e0do7zagevz8f"},{"post_id":"cl7fovitr00020do7hrzyeyfx","category_id":"cl7fovitt00030do74rdchl4g","_id":"cl7foviu9000g0do7a89z9jjp"},{"post_id":"cl7fovitv00050do7e4s34lxi","category_id":"cl7foviu8000c0do7d6cqhor1","_id":"cl7foviua000k0do7ud1sec8m"},{"post_id":"cl7foviu100070do7tphteri0","category_id":"cl7foviu8000c0do7d6cqhor1","_id":"cl7foviua000n0do7c77ahlkc"}],"PostTag":[{"post_id":"cl7fovity00060do75yayeh4u","tag_id":"cl7fovitv00040do7rud0voe1","_id":"cl7foviu3000a0do7fkgsd3u3"},{"post_id":"cl7fovitm00010do7vrnmdh3h","tag_id":"cl7fovitv00040do7rud0voe1","_id":"cl7foviu9000f0do78nrbdw3j"},{"post_id":"cl7fovitm00010do7vrnmdh3h","tag_id":"cl7foviu200090do7hcz5nlnb","_id":"cl7foviu9000h0do7tgak9dgo"},{"post_id":"cl7fovitr00020do7hrzyeyfx","tag_id":"cl7fovitv00040do7rud0voe1","_id":"cl7foviua000m0do7xk3ol5bo"},{"post_id":"cl7fovitr00020do7hrzyeyfx","tag_id":"cl7foviu9000j0do7zyufjfwp","_id":"cl7foviuc000o0do750w8rsad"},{"post_id":"cl7fovitv00050do7e4s34lxi","tag_id":"cl7foviua000l0do74lqjulm1","_id":"cl7foviud000s0do7lr7jegg0"},{"post_id":"cl7fovitv00050do7e4s34lxi","tag_id":"cl7foviuc000p0do7kturhfcn","_id":"cl7foviud000t0do7r4g7d4tn"},{"post_id":"cl7fovitv00050do7e4s34lxi","tag_id":"cl7foviuc000q0do7q1ftil69","_id":"cl7foviud000v0do7r6hsl0fc"},{"post_id":"cl7foviu100070do7tphteri0","tag_id":"cl7foviua000l0do74lqjulm1","_id":"cl7foviud000x0do7j0mbrmfb"},{"post_id":"cl7foviu100070do7tphteri0","tag_id":"cl7foviud000u0do7ztma7pd9","_id":"cl7foviud000y0do7iul6gipm"},{"post_id":"cl7foviu100070do7tphteri0","tag_id":"cl7foviud000w0do7zvywanht","_id":"cl7foviue000z0do7xujg47we"}],"Tag":[{"name":"css","_id":"cl7fovitv00040do7rud0voe1"},{"name":"flex","_id":"cl7foviu200090do7hcz5nlnb"},{"name":"grid","_id":"cl7foviu9000j0do7zyufjfwp"},{"name":"v2018","_id":"cl7foviua000l0do74lqjulm1"},{"name":"社会","_id":"cl7foviuc000p0do7kturhfcn"},{"name":"历史","_id":"cl7foviuc000q0do7q1ftil69"},{"name":"小说","_id":"cl7foviud000u0do7ztma7pd9"},{"name":"文学","_id":"cl7foviud000w0do7zvywanht"}]}}